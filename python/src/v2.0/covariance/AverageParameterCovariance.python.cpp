
// THIS FILE WAS AUTOGENERATED!
// DO NOT MODIFY!

// system includes
#include <pybind11/pybind11.h>
#include <pybind11/stl.h>

// local includes
#include "GNDStk/v2.0/covariance/AverageParameterCovariance.hpp"
#include "definitions.hpp"

// namespace aliases
namespace python = pybind11;

namespace python_v2_0 {
namespace python_covariance {

// AverageParameterCovariance wrapper
void wrapAverageParameterCovariance(python::module &module)
{
   using namespace njoy::GNDStk;
   using namespace njoy::GNDStk::v2_0;

   // type aliases
   using Component = covariance::AverageParameterCovariance;
   using _t = std::variant<
      covariance::CovarianceMatrix
   >;

   // create the component
   python::class_<Component> component(
      module,
      "AverageParameterCovariance",
      Component::documentation().data()
   );

   // wrap the component
   component
      .def(
         python::init<
            const std::optional<bool> &,
            const std::optional<XMLName> &,
            const std::optional<covariance::ColumnData> &,
            const std::optional<covariance::RowData> &,
            const _t &
         >(),
         python::arg("cross_term") = std::nullopt,
         python::arg("label") = std::nullopt,
         python::arg("column_data") = std::nullopt,
         python::arg("row_data") = std::nullopt,
         python::arg("_covariance_matrix"),
         Component::documentation("constructor").data()
      )
      .def_property_readonly(
         "cross_term",
         &Component::crossTerm,
         Component::documentation("cross_term").data()
      )
      .def_property_readonly(
         "label",
         &Component::label,
         Component::documentation("label").data()
      )
      .def_property_readonly(
         "column_data",
         python::overload_cast<>(&Component::columnData),
         Component::documentation("column_data").data()
      )
      .def_property_readonly(
         "row_data",
         python::overload_cast<>(&Component::rowData),
         Component::documentation("row_data").data()
      )
      .def_property_readonly(
         "covariance_matrix",
         python::overload_cast<>(&Component::covarianceMatrix),
         Component::documentation("covariance_matrix").data()
      )
      .def_property_readonly(
         "_covariance_matrix",
         python::overload_cast<>(&Component::_covarianceMatrix),
         Component::documentation("_covariance_matrix").data()
      )
   ;

   // add standard component definitions
   addStandardComponentDefinitions< Component >( component );
}

} // namespace python_covariance
} // namespace python_v2_0
