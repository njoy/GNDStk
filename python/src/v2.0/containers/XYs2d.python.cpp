
// THIS FILE WAS AUTOGENERATED!
// DO NOT MODIFY!

// system includes
#include <pybind11/pybind11.h>
#include <pybind11/stl.h>

// local includes
#include "GNDStk/v2.0/containers/XYs2d.hpp"
#include "definitions.hpp"

// namespace aliases
namespace python = pybind11;

namespace python_v2_0 {
namespace python_containers {

// XYs2d wrapper
void wrapXYs2d(python::module &module)
{
   using namespace njoy::GNDStk;
   using namespace njoy::GNDStk::v2_0;

   // type aliases
   using Component = containers::XYs2d;

   // create the component
   python::class_<Component> component(
      module,
      "XYs2d",
      Component::documentation().data()
   );

   // wrap the component
   component
      .def(
         python::init<
            const std::optional<Integer32> &,
            const std::optional<enums::Interpolation> &,
            const std::optional<XMLName> &,
            const std::optional<Float64> &,
            const std::optional<containers::Axes> &,
            const containers::Function1ds &
         >(),
         python::arg("index") = std::nullopt,
         python::arg("interpolation") = std::nullopt,
         python::arg("interpolation_qualifier") = std::nullopt,
         python::arg("outer_domain_value") = std::nullopt,
         python::arg("axes") = std::nullopt,
         python::arg("function1ds"),
         Component::documentation("constructor").data()
      )
      .def_property_readonly(
         "index",
         &Component::index,
         Component::documentation("index").data()
      )
      .def_property_readonly(
         "interpolation",
         [](const Component &self) { return self.interpolation().value(); },
         Component::documentation("interpolation").data()
      )
      .def_property_readonly(
         "interpolation_qualifier",
         &Component::interpolationQualifier,
         Component::documentation("interpolation_qualifier").data()
      )
      .def_property_readonly(
         "outer_domain_value",
         &Component::outerDomainValue,
         Component::documentation("outer_domain_value").data()
      )
      .def_property_readonly(
         "axes",
         python::overload_cast<>(&Component::axes),
         Component::documentation("axes").data()
      )
      .def_property_readonly(
         "function1ds",
         python::overload_cast<>(&Component::function1ds),
         Component::documentation("function1ds").data()
      )
   ;

   // add standard component definitions
   addStandardComponentDefinitions< Component >( component );
}

} // namespace python_containers
} // namespace python_v2_0
