
// THIS FILE WAS AUTOGENERATED!
// DO NOT MODIFY!

// system includes
#include <pybind11/pybind11.h>
#include <pybind11/stl.h>

// local includes
#include "GNDStk/v2.0/transport/Multiplicity.hpp"
#include "definitions.hpp"

// namespace aliases
namespace python = pybind11;

namespace python_v2_0 {
namespace python_transport {

// Multiplicity wrapper
void wrapMultiplicity(python::module &module)
{
   using namespace njoy::GNDStk;
   using namespace njoy::GNDStk::v2_0;

   // type aliases
   using Component = transport::Multiplicity;
   using _t = std::variant<
      containers::XYs1d,
      transport::Branching1d,
      containers::Constant1d,
      containers::Gridded1d,
      containers::Polynomial1d,
      transport::Reference,
      containers::Regions1d
   >;

   // create the component
   python::class_<Component> component(
      module,
      "Multiplicity",
      Component::documentation().data()
   );

   // wrap the component
   component
      .def(
         python::init<
            const _t &
         >(),
         python::arg("_xys1dbranching1dconstant1dgridded1dpolynomial1dreferenceregions1d"),
         Component::documentation("constructor").data()
      )
      .def_property_readonly(
         "xys1d",
         python::overload_cast<>(&Component::XYs1d),
         Component::documentation("xys1d").data()
      )
      .def_property_readonly(
         "branching1d",
         python::overload_cast<>(&Component::branching1d),
         Component::documentation("branching1d").data()
      )
      .def_property_readonly(
         "constant1d",
         python::overload_cast<>(&Component::constant1d),
         Component::documentation("constant1d").data()
      )
      .def_property_readonly(
         "gridded1d",
         python::overload_cast<>(&Component::gridded1d),
         Component::documentation("gridded1d").data()
      )
      .def_property_readonly(
         "polynomial1d",
         python::overload_cast<>(&Component::polynomial1d),
         Component::documentation("polynomial1d").data()
      )
      .def_property_readonly(
         "reference",
         python::overload_cast<>(&Component::reference),
         Component::documentation("reference").data()
      )
      .def_property_readonly(
         "regions1d",
         python::overload_cast<>(&Component::regions1d),
         Component::documentation("regions1d").data()
      )
      .def_property_readonly(
         "_xys1dbranching1dconstant1dgridded1dpolynomial1dreferenceregions1d",
         python::overload_cast<>(&Component::_XYs1dbranching1dconstant1dgridded1dpolynomial1dreferenceregions1d),
         Component::documentation("_xys1dbranching1dconstant1dgridded1dpolynomial1dreferenceregions1d").data()
      )
   ;

   // add standard component definitions
   addStandardComponentDefinitions< Component >( component );
}

} // namespace python_transport
} // namespace python_v2_0
