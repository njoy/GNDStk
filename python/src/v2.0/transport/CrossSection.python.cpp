
// THIS FILE WAS AUTOGENERATED!
// DO NOT MODIFY!

// system includes
#include <pybind11/pybind11.h>
#include <pybind11/stl.h>

// local includes
#include "GNDStk/v2.0/transport/CrossSection.hpp"
#include "definitions.hpp"

// namespace aliases
namespace python = pybind11;

namespace python_v2_0 {
namespace python_transport {

// CrossSection wrapper
void wrapCrossSection(python::module &module)
{
   using namespace njoy::GNDStk;
   using namespace njoy::GNDStk::v2_0;

   // type aliases
   using Component = transport::CrossSection;
   using _t = std::variant<
      cpTransport::CoulombPlusNuclearElastic,
      transport::URR_probabilityTables1d,
      containers::XYs1d,
      containers::Ys1d,
      containers::Gridded1d,
      transport::Reference,
      containers::Regions1d,
      transport::ResonancesWithBackground,
      tsl::ThermalNeutronScatteringLaw1d
   >;

   // create the component
   python::class_<Component> component(
      module,
      "CrossSection",
      Component::documentation().data()
   );

   // wrap the component
   component
      .def(
         python::init<
            const _t &
         >(),
         python::arg("_coulomb_plus_nuclear_elastic_urr_probability_tables1d_xys1d_ys1dgridded1dreferenceregions1dresonances_with_backgroundthermal_neutron_scattering_law1d"),
         Component::documentation("constructor").data()
      )
      .def_property_readonly(
         "coulomb_plus_nuclear_elastic",
         python::overload_cast<>(&Component::CoulombPlusNuclearElastic),
         Component::documentation("coulomb_plus_nuclear_elastic").data()
      )
      .def_property_readonly(
         "urr_probability_tables1d",
         python::overload_cast<>(&Component::URR_probabilityTables1d),
         Component::documentation("urr_probability_tables1d").data()
      )
      .def_property_readonly(
         "xys1d",
         python::overload_cast<>(&Component::XYs1d),
         Component::documentation("xys1d").data()
      )
      .def_property_readonly(
         "ys1d",
         python::overload_cast<>(&Component::Ys1d),
         Component::documentation("ys1d").data()
      )
      .def_property_readonly(
         "gridded1d",
         python::overload_cast<>(&Component::gridded1d),
         Component::documentation("gridded1d").data()
      )
      .def_property_readonly(
         "reference",
         python::overload_cast<>(&Component::reference),
         Component::documentation("reference").data()
      )
      .def_property_readonly(
         "regions1d",
         python::overload_cast<>(&Component::regions1d),
         Component::documentation("regions1d").data()
      )
      .def_property_readonly(
         "resonances_with_background",
         python::overload_cast<>(&Component::resonancesWithBackground),
         Component::documentation("resonances_with_background").data()
      )
      .def_property_readonly(
         "thermal_neutron_scattering_law1d",
         python::overload_cast<>(&Component::thermalNeutronScatteringLaw1d),
         Component::documentation("thermal_neutron_scattering_law1d").data()
      )
      .def_property_readonly(
         "_coulomb_plus_nuclear_elastic_urr_probability_tables1d_xys1d_ys1dgridded1dreferenceregions1dresonances_with_backgroundthermal_neutron_scattering_law1d",
         python::overload_cast<>(&Component::_CoulombPlusNuclearElasticURR_probabilityTables1dXYs1dYs1dgridded1dreferenceregions1dresonancesWithBackgroundthermalNeutronScatteringLaw1d),
         Component::documentation("_coulomb_plus_nuclear_elastic_urr_probability_tables1d_xys1d_ys1dgridded1dreferenceregions1dresonances_with_backgroundthermal_neutron_scattering_law1d").data()
      )
   ;

   // add standard component definitions
   addStandardComponentDefinitions< Component >( component );
}

} // namespace python_transport
} // namespace python_v2_0
