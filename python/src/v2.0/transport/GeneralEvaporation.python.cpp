
// THIS FILE WAS AUTOGENERATED!
// DO NOT MODIFY!

// system includes
#include <pybind11/pybind11.h>
#include <pybind11/stl.h>

// local includes
#include "GNDStk/v2.0/transport/GeneralEvaporation.hpp"
#include "definitions.hpp"

// namespace aliases
namespace python = pybind11;

namespace python_v2_0 {
namespace python_transport {

// GeneralEvaporation wrapper
void wrapGeneralEvaporation(python::module &module)
{
   using namespace njoy::GNDStk;
   using namespace njoy::GNDStk::v2_0;

   // type aliases
   using Component = transport::GeneralEvaporation;

   // create the component
   python::class_<Component> component(
      module,
      "GeneralEvaporation",
      Component::documentation().data()
   );

   // wrap the component
   component
      .def(
         python::init<
            const std::optional<transport::U> &,
            const std::optional<transport::G> &,
            const std::optional<transport::Theta> &
         >(),
         python::arg("u") = std::nullopt,
         python::arg("g") = std::nullopt,
         python::arg("theta") = std::nullopt,
         Component::documentation("constructor").data()
      )
      .def_property_readonly(
         "u",
         python::overload_cast<>(&Component::U),
         Component::documentation("u").data()
      )
      .def_property_readonly(
         "g",
         python::overload_cast<>(&Component::g),
         Component::documentation("g").data()
      )
      .def_property_readonly(
         "theta",
         python::overload_cast<>(&Component::theta),
         Component::documentation("theta").data()
      )
   ;

   // add standard component definitions
   addStandardComponentDefinitions< Component >( component );
}

} // namespace python_transport
} // namespace python_v2_0
