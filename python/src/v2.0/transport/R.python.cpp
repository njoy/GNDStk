
// THIS FILE WAS AUTOGENERATED!
// DO NOT MODIFY!

// system includes
#include <pybind11/pybind11.h>
#include <pybind11/stl.h>

// local includes
#include "GNDStk/v2.0/transport/R.hpp"
#include "definitions.hpp"

// namespace aliases
namespace python = pybind11;

namespace python_v2_0 {
namespace python_transport {

// R wrapper
void wrapR(python::module &module)
{
   using namespace njoy::GNDStk;
   using namespace njoy::GNDStk::v2_0;

   // type aliases
   using Component = transport::R;
   using _t = std::variant<
      containers::XYs2d,
      containers::Regions2d
   >;

   // create the component
   python::class_<Component> component(
      module,
      "R",
      Component::documentation().data()
   );

   // wrap the component
   component
      .def(
         python::init<
            const _t &
         >(),
         python::arg("_xys2dregions2d"),
         Component::documentation("constructor").data()
      )
      .def_property_readonly(
         "xys2d",
         python::overload_cast<>(&Component::XYs2d),
         Component::documentation("xys2d").data()
      )
      .def_property_readonly(
         "regions2d",
         python::overload_cast<>(&Component::regions2d),
         Component::documentation("regions2d").data()
      )
      .def_property_readonly(
         "_xys2dregions2d",
         python::overload_cast<>(&Component::_XYs2dregions2d),
         Component::documentation("_xys2dregions2d").data()
      )
   ;

   // add standard component definitions
   addStandardComponentDefinitions< Component >( component );
}

} // namespace python_transport
} // namespace python_v2_0
