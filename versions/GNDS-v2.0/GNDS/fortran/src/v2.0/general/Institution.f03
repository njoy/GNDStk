
!! THIS FILE WAS AUTOGENERATED!
!! DO NOT MODIFY!

module generalInstitution
use iso_c_binding
interface


!! -----------------------------------------------------------------------------
!! Basics
!! Create, Assign, Delete
!! -----------------------------------------------------------------------------

!! Create, default, const
function InstitutionDefaultConst() &
      bind(C, name='InstitutionDefaultConst')
   use iso_c_binding
   implicit none
   type(c_ptr) :: InstitutionDefaultConst
end function InstitutionDefaultConst

!! Create, default
function InstitutionDefault() &
      bind(C, name='InstitutionDefault')
   use iso_c_binding
   implicit none
   type(c_ptr) :: InstitutionDefault
end function InstitutionDefault

!! Create, general, const
function InstitutionCreateConst( &
   label, &
   ENDFconversionFlags, &
   labelSize &
) &
      bind(C, name='InstitutionCreateConst')
   use iso_c_binding
   implicit none
   integer(c_size_t), intent(in), value :: labelSize
   character(c_char), intent(in) :: label(labelSize)
   type(c_ptr), intent(in), value :: ENDFconversionFlags
   type(c_ptr) :: InstitutionCreateConst
end function InstitutionCreateConst

!! Create, general
function InstitutionCreate( &
   label, &
   ENDFconversionFlags, &
   labelSize &
) &
      bind(C, name='InstitutionCreate')
   use iso_c_binding
   implicit none
   integer(c_size_t), intent(in), value :: labelSize
   character(c_char), intent(in) :: label(labelSize)
   type(c_ptr), intent(in), value :: ENDFconversionFlags
   type(c_ptr) :: InstitutionCreate
end function InstitutionCreate

!! Assign
subroutine InstitutionAssign(handleLHS, handleRHS) &
      bind(C, name='InstitutionAssign')
   use iso_c_binding
   implicit none
   type(c_ptr), value :: handleLHS
   type(c_ptr), intent(in), value :: handleRHS
end subroutine InstitutionAssign

!! Delete
subroutine InstitutionDelete(handle) &
      bind(C, name='InstitutionDelete')
   use iso_c_binding
   implicit none
   type(c_ptr), value :: handle
end subroutine InstitutionDelete


!! -----------------------------------------------------------------------------
!! I/O
!! Read, Write, Print
!! Each returns 0 if failure, 1 if success.
!! -----------------------------------------------------------------------------

!! Read from file
function InstitutionRead(handle, filename, filenameSize) &
      bind(C, name='InstitutionRead')
   use iso_c_binding
   implicit none
   type(c_ptr), value :: handle
   integer(c_size_t), intent(in), value :: filenameSize
   character(c_char), intent(in) :: filename(filenameSize)
   integer(c_int) :: InstitutionRead
end function InstitutionRead

!! Write to file
function InstitutionWrite(handle, filename, filenameSize) &
      bind(C, name='InstitutionWrite')
   use iso_c_binding
   implicit none
   type(c_ptr), intent(in), value :: handle
   integer(c_size_t), intent(in), value :: filenameSize
   character(c_char), intent(in) :: filename(filenameSize)
   integer(c_int) :: InstitutionWrite
end function InstitutionWrite

!! Print to standard output, in our prettyprinting format
function InstitutionPrint(handle) &
      bind(C, name='InstitutionPrint')
   use iso_c_binding
   implicit none
   type(c_ptr), intent(in), value :: handle
   integer(c_int) :: InstitutionPrint
end function InstitutionPrint

!! Print to standard output, as XML
function InstitutionPrintXML(handle) &
      bind(C, name='InstitutionPrintXML')
   use iso_c_binding
   implicit none
   type(c_ptr), intent(in), value :: handle
   integer(c_int) :: InstitutionPrintXML
end function InstitutionPrintXML

!! Print to standard output, as JSON
function InstitutionPrintJSON(handle) &
      bind(C, name='InstitutionPrintJSON')
   use iso_c_binding
   implicit none
   type(c_ptr), intent(in), value :: handle
   integer(c_int) :: InstitutionPrintJSON
end function InstitutionPrintJSON


!! -----------------------------------------------------------------------------
!! Metadatum: label
!! -----------------------------------------------------------------------------

!! Has
function InstitutionLabelHas(handle) &
      bind(C, name='InstitutionLabelHas')
   use iso_c_binding
   implicit none
   type(c_ptr), intent(in), value :: handle
   integer(c_int) :: InstitutionLabelHas
end function InstitutionLabelHas

!! Get
function InstitutionLabelGet(handle) &
      bind(C, name='InstitutionLabelGet')
   use iso_c_binding
   implicit none
   type(c_ptr), intent(in), value :: handle
   type(c_ptr) :: InstitutionLabelGet
end function InstitutionLabelGet

!! Set
subroutine InstitutionLabelSet(handle, label, labelSize) &
      bind(C, name='InstitutionLabelSet')
   use iso_c_binding
   implicit none
   type(c_ptr), value :: handle
   integer(c_size_t), intent(in), value :: labelSize
   character(c_char), intent(in) :: label(labelSize)
end subroutine InstitutionLabelSet


!! -----------------------------------------------------------------------------
!! Child: ENDFconversionFlags
!! -----------------------------------------------------------------------------

!! Has
function InstitutionENDFconversionFlagsHas(handle) &
      bind(C, name='InstitutionENDFconversionFlagsHas')
   use iso_c_binding
   implicit none
   type(c_ptr), intent(in), value :: handle
   integer(c_int) :: InstitutionENDFconversionFlagsHas
end function InstitutionENDFconversionFlagsHas

!! Get, const
function InstitutionENDFconversionFlagsGetConst(handle) &
      bind(C, name='InstitutionENDFconversionFlagsGetConst')
   use iso_c_binding
   implicit none
   type(c_ptr), intent(in), value :: handle
   type(c_ptr) :: InstitutionENDFconversionFlagsGetConst
end function InstitutionENDFconversionFlagsGetConst

!! Get
function InstitutionENDFconversionFlagsGet(handle) &
      bind(C, name='InstitutionENDFconversionFlagsGet')
   use iso_c_binding
   implicit none
   type(c_ptr), value :: handle
   type(c_ptr) :: InstitutionENDFconversionFlagsGet
end function InstitutionENDFconversionFlagsGet

!! Set
subroutine InstitutionENDFconversionFlagsSet(handle, fieldHandle) &
      bind(C, name='InstitutionENDFconversionFlagsSet')
   use iso_c_binding
   implicit none
   type(c_ptr), value :: handle
   type(c_ptr), intent(in), value :: fieldHandle
end subroutine InstitutionENDFconversionFlagsSet


!! -----------------------------------------------------------------------------
!! -----------------------------------------------------------------------------

end interface
end module generalInstitution
