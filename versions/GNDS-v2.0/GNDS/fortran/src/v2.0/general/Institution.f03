
!! THIS FILE WAS AUTOGENERATED!
!! DO NOT MODIFY!

module generalInstitution
use iso_c_binding
interface


!! -----------------------------------------------------------------------------
!! Basics
!! Create, Assign, Delete
!! -----------------------------------------------------------------------------

!! Create, default, const
function InstitutionDefaultConst() &
      bind(C, name='InstitutionDefaultConst') &
      result(handle)
   use iso_c_binding
   implicit none
   type(c_ptr) :: handle
end function InstitutionDefaultConst

!! Create, default
function InstitutionDefault() &
      bind(C, name='InstitutionDefault') &
      result(handle)
   use iso_c_binding
   implicit none
   type(c_ptr) :: handle
end function InstitutionDefault

!! Create, general, const
function InstitutionCreateConst( &
   label, &
   ENDFconversionFlags, &
   labelSize &
) &
      bind(C, name='InstitutionCreateConst') &
      result(handle)
   use iso_c_binding
   implicit none
   integer(c_size_t), intent(in), value :: labelSize
   character(c_char), intent(in) :: label(labelSize)
   type(c_ptr), value :: ENDFconversionFlags
   type(c_ptr) :: handle
end function InstitutionCreateConst

!! Create, general
function InstitutionCreate( &
   label, &
   ENDFconversionFlags, &
   labelSize &
) &
      bind(C, name='InstitutionCreate') &
      result(handle)
   use iso_c_binding
   implicit none
   integer(c_size_t), intent(in), value :: labelSize
   character(c_char), intent(in) :: label(labelSize)
   type(c_ptr), value :: ENDFconversionFlags
   type(c_ptr) :: handle
end function InstitutionCreate

!! Assign
subroutine InstitutionAssign(handleLHS, handleRHS) &
      bind(C, name='InstitutionAssign')
   use iso_c_binding
   implicit none
   type(c_ptr), value :: handleLHS, handleRHS
end subroutine InstitutionAssign

!! Delete
subroutine InstitutionDelete(handle) &
      bind(C, name='InstitutionDelete')
   use iso_c_binding
   implicit none
   type(c_ptr), value :: handle
end subroutine InstitutionDelete


!! -----------------------------------------------------------------------------
!! I/O
!! Read, Write, Print
!! Each returns 0 if failure, 1 if success.
!! -----------------------------------------------------------------------------

!! Read from file
function InstitutionRead(handle, filename, filenameSize) &
      bind(C, name='InstitutionRead') &
      result(success)
   use iso_c_binding
   implicit none
   type(c_ptr), value :: handle
   integer(c_size_t), value :: filenameSize
   character(c_char), intent(in) :: filename(filenameSize)
   integer(c_int) :: success
end function InstitutionRead

!! Write to file
function InstitutionWrite(handle, filename, filenameSize) &
      bind(C, name='InstitutionWrite') &
      result(success)
   use iso_c_binding
   implicit none
   type(c_ptr), intent(in), value :: handle
   integer(c_size_t), value :: filenameSize
   character(c_char), intent(in) :: filename(filenameSize)
   integer(c_int) :: success
end function InstitutionWrite

!! Print to standard output, in our prettyprinting format
function InstitutionPrint(handle) &
      bind(C, name='InstitutionPrint') &
      result(success)
   use iso_c_binding
   implicit none
   type(c_ptr), intent(in), value :: handle
   integer(c_int) :: success
end function InstitutionPrint

!! Print to standard output, as XML
function InstitutionPrintXML(handle) &
      bind(C, name='InstitutionPrintXML') &
      result(success)
   use iso_c_binding
   implicit none
   type(c_ptr), intent(in), value :: handle
   integer(c_int) :: success
end function InstitutionPrintXML

!! Print to standard output, as JSON
function InstitutionPrintJSON(handle) &
      bind(C, name='InstitutionPrintJSON') &
      result(success)
   use iso_c_binding
   implicit none
   type(c_ptr), intent(in), value :: handle
   integer(c_int) :: success
end function InstitutionPrintJSON


!! -----------------------------------------------------------------------------
!! Metadatum: label
!! -----------------------------------------------------------------------------

!! Has
function InstitutionLabelHas(handle) &
      bind(C, name='InstitutionLabelHas') &
      result(has)
   use iso_c_binding
   implicit none
   type(c_ptr), intent(in), value :: handle
   integer(c_int) :: has
end function InstitutionLabelHas

!! Get
function InstitutionLabelGet(handle) &
      bind(C, name='InstitutionLabelGet') &
      result(label)
   use iso_c_binding
   implicit none
   type(c_ptr), intent(in), value :: handle
   type(c_ptr) :: label
end function InstitutionLabelGet

!! Set
subroutine InstitutionLabelSet(handle, label, labelSize) &
      bind(C, name='InstitutionLabelSet')
   use iso_c_binding
   implicit none
   type(c_ptr), value :: handle
   integer(c_size_t), intent(in), value :: labelSize
   character(c_char), intent(in) :: label(labelSize)
end subroutine InstitutionLabelSet


!! -----------------------------------------------------------------------------
!! Child: ENDFconversionFlags
!! -----------------------------------------------------------------------------

!! Has
function InstitutionENDFconversionFlagsHas(handle) &
      bind(C, name='InstitutionENDFconversionFlagsHas') &
      result(has)
   use iso_c_binding
   implicit none
   type(c_ptr), intent(in), value :: handle
   integer(c_int) :: has
end function InstitutionENDFconversionFlagsHas

!! Get, const
function InstitutionENDFconversionFlagsGetConst(handle) &
      bind(C, name='InstitutionENDFconversionFlagsGetConst') &
      result(resultHandle)
   use iso_c_binding
   implicit none
   type(c_ptr), intent(in), value :: handle
   type(c_ptr) :: resultHandle
end function InstitutionENDFconversionFlagsGetConst

!! Get
function InstitutionENDFconversionFlagsGet(handle) &
      bind(C, name='InstitutionENDFconversionFlagsGet') &
      result(resultHandle)
   use iso_c_binding
   implicit none
   type(c_ptr), intent(in), value :: handle
   type(c_ptr) :: resultHandle
end function InstitutionENDFconversionFlagsGet

!! Set
subroutine InstitutionENDFconversionFlagsSet(handle, fieldHandle) &
      bind(C, name='InstitutionENDFconversionFlagsSet')
   use iso_c_binding
   implicit none
   type(c_ptr), value :: handle
   type(c_ptr), value :: fieldHandle
end subroutine InstitutionENDFconversionFlagsSet


!! -----------------------------------------------------------------------------
!! -----------------------------------------------------------------------------

end interface
end module generalInstitution
