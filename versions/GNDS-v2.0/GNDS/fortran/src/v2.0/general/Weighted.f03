
!! THIS FILE WAS AUTOGENERATED!
!! DO NOT MODIFY!

module generalWeighted
use iso_c_binding
interface


!! -----------------------------------------------------------------------------
!! Basics
!! Create, Assign, Delete
!! -----------------------------------------------------------------------------

!! Create, default, const
function WeightedDefaultConst() &
      bind(C, name='WeightedDefaultConst')
   use iso_c_binding
   implicit none
   type(c_ptr) :: WeightedDefaultConst
end function WeightedDefaultConst

!! Create, default
function WeightedDefault() &
      bind(C, name='WeightedDefault')
   use iso_c_binding
   implicit none
   type(c_ptr) :: WeightedDefault
end function WeightedDefault

!! Create, general, const
function WeightedCreateConst( &
   XYs1d, &
   evaporation &
) &
      bind(C, name='WeightedCreateConst')
   use iso_c_binding
   implicit none
   type(c_ptr), value :: XYs1d
   type(c_ptr), value :: evaporation
   type(c_ptr) :: WeightedCreateConst
end function WeightedCreateConst

!! Create, general
function WeightedCreate( &
   XYs1d, &
   evaporation &
) &
      bind(C, name='WeightedCreate')
   use iso_c_binding
   implicit none
   type(c_ptr), value :: XYs1d
   type(c_ptr), value :: evaporation
   type(c_ptr) :: WeightedCreate
end function WeightedCreate

!! Assign
subroutine WeightedAssign(handleLHS, handleRHS) &
      bind(C, name='WeightedAssign')
   use iso_c_binding
   implicit none
   type(c_ptr), value :: handleLHS, handleRHS
end subroutine WeightedAssign

!! Delete
subroutine WeightedDelete(handle) &
      bind(C, name='WeightedDelete')
   use iso_c_binding
   implicit none
   type(c_ptr), value :: handle
end subroutine WeightedDelete


!! -----------------------------------------------------------------------------
!! I/O
!! Read, Write, Print
!! Each returns 0 if failure, 1 if success.
!! -----------------------------------------------------------------------------

!! Read from file
function WeightedRead(handle, filename, filenameSize) &
      bind(C, name='WeightedRead')
   use iso_c_binding
   implicit none
   type(c_ptr), value :: handle
   integer(c_size_t), value :: filenameSize
   character(c_char), intent(in) :: filename(filenameSize)
   integer(c_int) :: WeightedRead
end function WeightedRead

!! Write to file
function WeightedWrite(handle, filename, filenameSize) &
      bind(C, name='WeightedWrite')
   use iso_c_binding
   implicit none
   type(c_ptr), intent(in), value :: handle
   integer(c_size_t), value :: filenameSize
   character(c_char), intent(in) :: filename(filenameSize)
   integer(c_int) :: WeightedWrite
end function WeightedWrite

!! Print to standard output, in our prettyprinting format
function WeightedPrint(handle) &
      bind(C, name='WeightedPrint')
   use iso_c_binding
   implicit none
   type(c_ptr), intent(in), value :: handle
   integer(c_int) :: WeightedPrint
end function WeightedPrint

!! Print to standard output, as XML
function WeightedPrintXML(handle) &
      bind(C, name='WeightedPrintXML')
   use iso_c_binding
   implicit none
   type(c_ptr), intent(in), value :: handle
   integer(c_int) :: WeightedPrintXML
end function WeightedPrintXML

!! Print to standard output, as JSON
function WeightedPrintJSON(handle) &
      bind(C, name='WeightedPrintJSON')
   use iso_c_binding
   implicit none
   type(c_ptr), intent(in), value :: handle
   integer(c_int) :: WeightedPrintJSON
end function WeightedPrintJSON


!! -----------------------------------------------------------------------------
!! Child: XYs1d
!! -----------------------------------------------------------------------------

!! Has
function WeightedXYs1dHas(handle) &
      bind(C, name='WeightedXYs1dHas')
   use iso_c_binding
   implicit none
   type(c_ptr), intent(in), value :: handle
   integer(c_int) :: WeightedXYs1dHas
end function WeightedXYs1dHas

!! Get, const
function WeightedXYs1dGetConst(handle) &
      bind(C, name='WeightedXYs1dGetConst')
   use iso_c_binding
   implicit none
   type(c_ptr), intent(in), value :: handle
   type(c_ptr) :: WeightedXYs1dGetConst
end function WeightedXYs1dGetConst

!! Get
function WeightedXYs1dGet(handle) &
      bind(C, name='WeightedXYs1dGet')
   use iso_c_binding
   implicit none
   type(c_ptr), intent(in), value :: handle
   type(c_ptr) :: WeightedXYs1dGet
end function WeightedXYs1dGet

!! Set
subroutine WeightedXYs1dSet(handle, fieldHandle) &
      bind(C, name='WeightedXYs1dSet')
   use iso_c_binding
   implicit none
   type(c_ptr), value :: handle
   type(c_ptr), value :: fieldHandle
end subroutine WeightedXYs1dSet


!! -----------------------------------------------------------------------------
!! Child: evaporation
!! -----------------------------------------------------------------------------

!! Has
function WeightedEvaporationHas(handle) &
      bind(C, name='WeightedEvaporationHas')
   use iso_c_binding
   implicit none
   type(c_ptr), intent(in), value :: handle
   integer(c_int) :: WeightedEvaporationHas
end function WeightedEvaporationHas

!! Get, const
function WeightedEvaporationGetConst(handle) &
      bind(C, name='WeightedEvaporationGetConst')
   use iso_c_binding
   implicit none
   type(c_ptr), intent(in), value :: handle
   type(c_ptr) :: WeightedEvaporationGetConst
end function WeightedEvaporationGetConst

!! Get
function WeightedEvaporationGet(handle) &
      bind(C, name='WeightedEvaporationGet')
   use iso_c_binding
   implicit none
   type(c_ptr), intent(in), value :: handle
   type(c_ptr) :: WeightedEvaporationGet
end function WeightedEvaporationGet

!! Set
subroutine WeightedEvaporationSet(handle, fieldHandle) &
      bind(C, name='WeightedEvaporationSet')
   use iso_c_binding
   implicit none
   type(c_ptr), value :: handle
   type(c_ptr), value :: fieldHandle
end subroutine WeightedEvaporationSet


!! -----------------------------------------------------------------------------
!! -----------------------------------------------------------------------------

end interface
end module generalWeighted
