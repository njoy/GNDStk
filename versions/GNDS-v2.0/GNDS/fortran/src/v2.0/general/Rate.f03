
!! THIS FILE WAS AUTOGENERATED!
!! DO NOT MODIFY!

module generalRate
use iso_c_binding
interface


!! -----------------------------------------------------------------------------
!! Basics
!! Create, Assign, Delete
!! -----------------------------------------------------------------------------

!! Create, default, const
function RateDefaultConst() &
      bind(C, name='RateDefaultConst')
   use iso_c_binding
   implicit none
   type(c_ptr) :: RateDefaultConst
end function RateDefaultConst

!! Create, default
function RateDefault() &
      bind(C, name='RateDefault')
   use iso_c_binding
   implicit none
   type(c_ptr) :: RateDefault
end function RateDefault

!! Create, general, const
function RateCreateConst( &
   Double &
) &
      bind(C, name='RateCreateConst')
   use iso_c_binding
   implicit none
   type(c_ptr), intent(in), value :: Double
   type(c_ptr) :: RateCreateConst
end function RateCreateConst

!! Create, general
function RateCreate( &
   Double &
) &
      bind(C, name='RateCreate')
   use iso_c_binding
   implicit none
   type(c_ptr), intent(in), value :: Double
   type(c_ptr) :: RateCreate
end function RateCreate

!! Assign
subroutine RateAssign(handleLHS, handleRHS) &
      bind(C, name='RateAssign')
   use iso_c_binding
   implicit none
   type(c_ptr), value :: handleLHS
   type(c_ptr), intent(in), value :: handleRHS
end subroutine RateAssign

!! Delete
subroutine RateDelete(handle) &
      bind(C, name='RateDelete')
   use iso_c_binding
   implicit none
   type(c_ptr), value :: handle
end subroutine RateDelete


!! -----------------------------------------------------------------------------
!! I/O
!! Read, Write, Print
!! Each returns 0 if failure, 1 if success.
!! -----------------------------------------------------------------------------

!! Read from file
function RateRead(handle, filename, filenameSize) &
      bind(C, name='RateRead')
   use iso_c_binding
   implicit none
   type(c_ptr), value :: handle
   integer(c_size_t), intent(in), value :: filenameSize
   character(c_char), intent(in) :: filename(filenameSize)
   integer(c_int) :: RateRead
end function RateRead

!! Write to file
function RateWrite(handle, filename, filenameSize) &
      bind(C, name='RateWrite')
   use iso_c_binding
   implicit none
   type(c_ptr), intent(in), value :: handle
   integer(c_size_t), intent(in), value :: filenameSize
   character(c_char), intent(in) :: filename(filenameSize)
   integer(c_int) :: RateWrite
end function RateWrite

!! Print to standard output, in our prettyprinting format
function RatePrint(handle) &
      bind(C, name='RatePrint')
   use iso_c_binding
   implicit none
   type(c_ptr), intent(in), value :: handle
   integer(c_int) :: RatePrint
end function RatePrint

!! Print to standard output, as XML
function RatePrintXML(handle) &
      bind(C, name='RatePrintXML')
   use iso_c_binding
   implicit none
   type(c_ptr), intent(in), value :: handle
   integer(c_int) :: RatePrintXML
end function RatePrintXML

!! Print to standard output, as JSON
function RatePrintJSON(handle) &
      bind(C, name='RatePrintJSON')
   use iso_c_binding
   implicit none
   type(c_ptr), intent(in), value :: handle
   integer(c_int) :: RatePrintJSON
end function RatePrintJSON


!! -----------------------------------------------------------------------------
!! Child: Double
!! -----------------------------------------------------------------------------

!! Has
function RateDoubleHas(handle) &
      bind(C, name='RateDoubleHas')
   use iso_c_binding
   implicit none
   type(c_ptr), intent(in), value :: handle
   integer(c_int) :: RateDoubleHas
end function RateDoubleHas

!! Get, const
function RateDoubleGetConst(handle) &
      bind(C, name='RateDoubleGetConst')
   use iso_c_binding
   implicit none
   type(c_ptr), intent(in), value :: handle
   type(c_ptr) :: RateDoubleGetConst
end function RateDoubleGetConst

!! Get
function RateDoubleGet(handle) &
      bind(C, name='RateDoubleGet')
   use iso_c_binding
   implicit none
   type(c_ptr), value :: handle
   type(c_ptr) :: RateDoubleGet
end function RateDoubleGet

!! Set
subroutine RateDoubleSet(handle, fieldHandle) &
      bind(C, name='RateDoubleSet')
   use iso_c_binding
   implicit none
   type(c_ptr), value :: handle
   type(c_ptr), intent(in), value :: fieldHandle
end subroutine RateDoubleSet


!! -----------------------------------------------------------------------------
!! -----------------------------------------------------------------------------

end interface
end module generalRate
