
!! THIS FILE WAS AUTOGENERATED!
!! DO NOT MODIFY!

module generalPositronEmissionIntensity
use iso_c_binding
interface


!! -----------------------------------------------------------------------------
!! Basics
!! Create, Assign, Delete
!! -----------------------------------------------------------------------------

!! Create, default, const
function PositronEmissionIntensityDefaultConst() &
      bind(C, name='PositronEmissionIntensityDefaultConst')
   use iso_c_binding
   implicit none
   type(c_ptr) :: PositronEmissionIntensityDefaultConst
end function PositronEmissionIntensityDefaultConst

!! Create, default
function PositronEmissionIntensityDefault() &
      bind(C, name='PositronEmissionIntensityDefault')
   use iso_c_binding
   implicit none
   type(c_ptr) :: PositronEmissionIntensityDefault
end function PositronEmissionIntensityDefault

!! Create, general, const
function PositronEmissionIntensityCreateConst( &
   value, &
   uncertainty &
) &
      bind(C, name='PositronEmissionIntensityCreateConst')
   use iso_c_binding
   implicit none
   real(c_double), intent(in), value :: value
   type(c_ptr), intent(in), value :: uncertainty
   type(c_ptr) :: PositronEmissionIntensityCreateConst
end function PositronEmissionIntensityCreateConst

!! Create, general
function PositronEmissionIntensityCreate( &
   value, &
   uncertainty &
) &
      bind(C, name='PositronEmissionIntensityCreate')
   use iso_c_binding
   implicit none
   real(c_double), intent(in), value :: value
   type(c_ptr), intent(in), value :: uncertainty
   type(c_ptr) :: PositronEmissionIntensityCreate
end function PositronEmissionIntensityCreate

!! Assign
subroutine PositronEmissionIntensityAssign(handleLHS, handleRHS) &
      bind(C, name='PositronEmissionIntensityAssign')
   use iso_c_binding
   implicit none
   type(c_ptr), value :: handleLHS
   type(c_ptr), intent(in), value :: handleRHS
end subroutine PositronEmissionIntensityAssign

!! Delete
subroutine PositronEmissionIntensityDelete(handle) &
      bind(C, name='PositronEmissionIntensityDelete')
   use iso_c_binding
   implicit none
   type(c_ptr), value :: handle
end subroutine PositronEmissionIntensityDelete


!! -----------------------------------------------------------------------------
!! I/O
!! Read, Write, Print
!! Each returns 0 if failure, 1 if success.
!! -----------------------------------------------------------------------------

!! Read from file
function PositronEmissionIntensityRead(handle, filename, filenameSize) &
      bind(C, name='PositronEmissionIntensityRead')
   use iso_c_binding
   implicit none
   type(c_ptr), value :: handle
   integer(c_size_t), intent(in), value :: filenameSize
   character(c_char), intent(in) :: filename(filenameSize)
   integer(c_int) :: PositronEmissionIntensityRead
end function PositronEmissionIntensityRead

!! Write to file
function PositronEmissionIntensityWrite(handle, filename, filenameSize) &
      bind(C, name='PositronEmissionIntensityWrite')
   use iso_c_binding
   implicit none
   type(c_ptr), intent(in), value :: handle
   integer(c_size_t), intent(in), value :: filenameSize
   character(c_char), intent(in) :: filename(filenameSize)
   integer(c_int) :: PositronEmissionIntensityWrite
end function PositronEmissionIntensityWrite

!! Print to standard output, in our prettyprinting format
function PositronEmissionIntensityPrint(handle) &
      bind(C, name='PositronEmissionIntensityPrint')
   use iso_c_binding
   implicit none
   type(c_ptr), intent(in), value :: handle
   integer(c_int) :: PositronEmissionIntensityPrint
end function PositronEmissionIntensityPrint

!! Print to standard output, as XML
function PositronEmissionIntensityPrintXML(handle) &
      bind(C, name='PositronEmissionIntensityPrintXML')
   use iso_c_binding
   implicit none
   type(c_ptr), intent(in), value :: handle
   integer(c_int) :: PositronEmissionIntensityPrintXML
end function PositronEmissionIntensityPrintXML

!! Print to standard output, as JSON
function PositronEmissionIntensityPrintJSON(handle) &
      bind(C, name='PositronEmissionIntensityPrintJSON')
   use iso_c_binding
   implicit none
   type(c_ptr), intent(in), value :: handle
   integer(c_int) :: PositronEmissionIntensityPrintJSON
end function PositronEmissionIntensityPrintJSON


!! -----------------------------------------------------------------------------
!! Metadatum: value
!! -----------------------------------------------------------------------------

!! Has
function PositronEmissionIntensityValueHas(handle) &
      bind(C, name='PositronEmissionIntensityValueHas')
   use iso_c_binding
   implicit none
   type(c_ptr), intent(in), value :: handle
   integer(c_int) :: PositronEmissionIntensityValueHas
end function PositronEmissionIntensityValueHas

!! Get
function PositronEmissionIntensityValueGet(handle) &
      bind(C, name='PositronEmissionIntensityValueGet')
   use iso_c_binding
   implicit none
   type(c_ptr), intent(in), value :: handle
   real(c_double) :: PositronEmissionIntensityValueGet
end function PositronEmissionIntensityValueGet

!! Set
subroutine PositronEmissionIntensityValueSet(handle, value) &
      bind(C, name='PositronEmissionIntensityValueSet')
   use iso_c_binding
   implicit none
   type(c_ptr), value :: handle
   real(c_double), intent(in), value :: value
end subroutine PositronEmissionIntensityValueSet


!! -----------------------------------------------------------------------------
!! Child: uncertainty
!! -----------------------------------------------------------------------------

!! Has
function PositronEmissionIntensityUncertaintyHas(handle) &
      bind(C, name='PositronEmissionIntensityUncertaintyHas')
   use iso_c_binding
   implicit none
   type(c_ptr), intent(in), value :: handle
   integer(c_int) :: PositronEmissionIntensityUncertaintyHas
end function PositronEmissionIntensityUncertaintyHas

!! Get, const
function PositronEmissionIntensityUncertaintyGetConst(handle) &
      bind(C, name='PositronEmissionIntensityUncertaintyGetConst')
   use iso_c_binding
   implicit none
   type(c_ptr), intent(in), value :: handle
   type(c_ptr) :: PositronEmissionIntensityUncertaintyGetConst
end function PositronEmissionIntensityUncertaintyGetConst

!! Get
function PositronEmissionIntensityUncertaintyGet(handle) &
      bind(C, name='PositronEmissionIntensityUncertaintyGet')
   use iso_c_binding
   implicit none
   type(c_ptr), value :: handle
   type(c_ptr) :: PositronEmissionIntensityUncertaintyGet
end function PositronEmissionIntensityUncertaintyGet

!! Set
subroutine PositronEmissionIntensityUncertaintySet(handle, fieldHandle) &
      bind(C, name='PositronEmissionIntensityUncertaintySet')
   use iso_c_binding
   implicit none
   type(c_ptr), value :: handle
   type(c_ptr), intent(in), value :: fieldHandle
end subroutine PositronEmissionIntensityUncertaintySet


!! -----------------------------------------------------------------------------
!! -----------------------------------------------------------------------------

end interface
end module generalPositronEmissionIntensity
