
!! THIS FILE WAS AUTOGENERATED!
!! DO NOT MODIFY!

module generalFreeGasApproximation
use iso_c_binding
interface


!! -----------------------------------------------------------------------------
!! Basics
!! Create, Assign, Delete
!! -----------------------------------------------------------------------------

!! Create, default, const
function FreeGasApproximationDefaultConst() &
      bind(C, name='FreeGasApproximationDefaultConst')
   use iso_c_binding
   implicit none
   type(c_ptr) :: FreeGasApproximationDefaultConst
end function FreeGasApproximationDefaultConst

!! Create, default, non-const
function FreeGasApproximationDefault() &
      bind(C, name='FreeGasApproximationDefault')
   use iso_c_binding
   implicit none
   type(c_ptr) :: FreeGasApproximationDefault
end function FreeGasApproximationDefault

!! Create, general, const
function FreeGasApproximationCreateConst( &
) &
      bind(C, name='FreeGasApproximationCreateConst')
   use iso_c_binding
   implicit none
   type(c_ptr) :: FreeGasApproximationCreateConst
end function FreeGasApproximationCreateConst

!! Create, general, non-const
function FreeGasApproximationCreate( &
) &
      bind(C, name='FreeGasApproximationCreate')
   use iso_c_binding
   implicit none
   type(c_ptr) :: FreeGasApproximationCreate
end function FreeGasApproximationCreate

!! Assign
subroutine FreeGasApproximationAssign(handleLHS, handleRHS) &
      bind(C, name='FreeGasApproximationAssign')
   use iso_c_binding
   implicit none
   type(c_ptr), value :: handleLHS
   type(c_ptr), intent(in), value :: handleRHS
end subroutine FreeGasApproximationAssign

!! Delete
subroutine FreeGasApproximationDelete(handle) &
      bind(C, name='FreeGasApproximationDelete')
   use iso_c_binding
   implicit none
   type(c_ptr), value :: handle
end subroutine FreeGasApproximationDelete


!! -----------------------------------------------------------------------------
!! I/O
!! Read, Write, Print
!! Each returns 0 if failure, 1 if success.
!! -----------------------------------------------------------------------------

!! Read from file
!! File can be XML, JSON, or HDF5.
!! We'll examine the file's contents to determine its type automatically.
function FreeGasApproximationRead(handle, filename, filenameSize) &
      bind(C, name='FreeGasApproximationRead')
   use iso_c_binding
   implicit none
   type(c_ptr), value :: handle
   integer(c_size_t), intent(in), value :: filenameSize
   character(c_char), intent(in) :: filename(filenameSize)
   integer(c_int) :: FreeGasApproximationRead
end function FreeGasApproximationRead

!! Write to file
!! File can be XML, JSON, or HDF5.
!! We'll use filename's extension to determine the type you want written.
function FreeGasApproximationWrite(handle, filename, filenameSize) &
      bind(C, name='FreeGasApproximationWrite')
   use iso_c_binding
   implicit none
   type(c_ptr), intent(in), value :: handle
   integer(c_size_t), intent(in), value :: filenameSize
   character(c_char), intent(in) :: filename(filenameSize)
   integer(c_int) :: FreeGasApproximationWrite
end function FreeGasApproximationWrite

!! Print to standard output, in our prettyprinting format
function FreeGasApproximationPrint(handle) &
      bind(C, name='FreeGasApproximationPrint')
   use iso_c_binding
   implicit none
   type(c_ptr), intent(in), value :: handle
   integer(c_int) :: FreeGasApproximationPrint
end function FreeGasApproximationPrint

!! Print to standard output, as XML
function FreeGasApproximationPrintXML(handle) &
      bind(C, name='FreeGasApproximationPrintXML')
   use iso_c_binding
   implicit none
   type(c_ptr), intent(in), value :: handle
   integer(c_int) :: FreeGasApproximationPrintXML
end function FreeGasApproximationPrintXML

!! Print to standard output, as JSON
function FreeGasApproximationPrintJSON(handle) &
      bind(C, name='FreeGasApproximationPrintJSON')
   use iso_c_binding
   implicit none
   type(c_ptr), intent(in), value :: handle
   integer(c_int) :: FreeGasApproximationPrintJSON
end function FreeGasApproximationPrintJSON


!! -----------------------------------------------------------------------------
!! -----------------------------------------------------------------------------

end interface
end module generalFreeGasApproximation
