
!! THIS FILE WAS AUTOGENERATED!
!! DO NOT MODIFY!

module generalTitle
use iso_c_binding
interface


!! -----------------------------------------------------------------------------
!! Basics
!! Create, Assign, Delete
!! -----------------------------------------------------------------------------

!! Create, default, const
function TitleDefaultConst() &
      bind(C, name='TitleDefaultConst') &
      result(handle)
   use iso_c_binding
   implicit none
   type(c_ptr) :: handle
end function TitleDefaultConst

!! Create, default
function TitleDefault() &
      bind(C, name='TitleDefault') &
      result(handle)
   use iso_c_binding
   implicit none
   type(c_ptr) :: handle
end function TitleDefault

!! Create, general, const
function TitleCreateConst( &
) &
      bind(C, name='TitleCreateConst') &
      result(handle)
   use iso_c_binding
   implicit none
   type(c_ptr) :: handle
end function TitleCreateConst

!! Create, general
function TitleCreate( &
) &
      bind(C, name='TitleCreate') &
      result(handle)
   use iso_c_binding
   implicit none
   type(c_ptr) :: handle
end function TitleCreate

!! Assign
subroutine TitleAssign(handleLHS, handleRHS) &
      bind(C, name='TitleAssign')
   use iso_c_binding
   implicit none
   type(c_ptr), value :: handleLHS, handleRHS
end subroutine TitleAssign

!! Delete
subroutine TitleDelete(handle) &
      bind(C, name='TitleDelete')
   use iso_c_binding
   implicit none
   type(c_ptr), value :: handle
end subroutine TitleDelete


!! -----------------------------------------------------------------------------
!! I/O
!! Read, Write, Print
!! Each returns 0 if failure, 1 if success.
!! -----------------------------------------------------------------------------

!! Read from file
function TitleRead(handle, filename, filenameSize) &
      bind(C, name='TitleRead') &
      result(success)
   use iso_c_binding
   implicit none
   type(c_ptr), value :: handle
   integer(c_size_t), value :: filenameSize
   character(c_char), intent(in) :: filename(filenameSize)
   integer(c_int) :: success
end function TitleRead

!! Write to file
function TitleWrite(handle, filename, filenameSize) &
      bind(C, name='TitleWrite') &
      result(success)
   use iso_c_binding
   implicit none
   type(c_ptr), intent(in), value :: handle
   integer(c_size_t), value :: filenameSize
   character(c_char), intent(in) :: filename(filenameSize)
   integer(c_int) :: success
end function TitleWrite

!! Print to standard output, in our prettyprinting format
function TitlePrint(handle) &
      bind(C, name='TitlePrint') &
      result(success)
   use iso_c_binding
   implicit none
   type(c_ptr), intent(in), value :: handle
   integer(c_int) :: success
end function TitlePrint

!! Print to standard output, as XML
function TitlePrintXML(handle) &
      bind(C, name='TitlePrintXML') &
      result(success)
   use iso_c_binding
   implicit none
   type(c_ptr), intent(in), value :: handle
   integer(c_int) :: success
end function TitlePrintXML

!! Print to standard output, as JSON
function TitlePrintJSON(handle) &
      bind(C, name='TitlePrintJSON') &
      result(success)
   use iso_c_binding
   implicit none
   type(c_ptr), intent(in), value :: handle
   integer(c_int) :: success
end function TitlePrintJSON


!! -----------------------------------------------------------------------------
!! -----------------------------------------------------------------------------

end interface
end module generalTitle
