
!! THIS FILE WAS AUTOGENERATED!
!! DO NOT MODIFY!

module generalRutherfordScattering
use iso_c_binding
interface


!! -----------------------------------------------------------------------------
!! Basics
!! Create, Assign, Delete
!! -----------------------------------------------------------------------------

!! Create, default, const
function RutherfordScatteringDefaultConst() &
      bind(C, name='RutherfordScatteringDefaultConst') &
      result(handle)
   use iso_c_binding
   implicit none
   type(c_ptr) :: handle
end function RutherfordScatteringDefaultConst

!! Create, default
function RutherfordScatteringDefault() &
      bind(C, name='RutherfordScatteringDefault') &
      result(handle)
   use iso_c_binding
   implicit none
   type(c_ptr) :: handle
end function RutherfordScatteringDefault

!! Create, general, const
function RutherfordScatteringCreateConst( &) &
      bind(C, name='RutherfordScatteringCreateConst') &
      result(handle)
   use iso_c_binding
   implicit none
   type(c_ptr) :: handle
end function RutherfordScatteringCreateConst

!! Create, general
function RutherfordScatteringCreate( &) &
      bind(C, name='RutherfordScatteringCreate') &
      result(handle)
   use iso_c_binding
   implicit none
   type(c_ptr) :: handle
end function RutherfordScatteringCreate

!! Assign
subroutine RutherfordScatteringAssign(handleLHS, handleRHS) &
      bind(C, name='RutherfordScatteringAssign')
   use iso_c_binding
   implicit none
   type(c_ptr), value :: handleLHS, handleRHS
end subroutine RutherfordScatteringAssign

!! Delete
subroutine RutherfordScatteringDelete(handle) &
      bind(C, name='RutherfordScatteringDelete')
   use iso_c_binding
   implicit none
   type(c_ptr), value :: handle
end subroutine RutherfordScatteringDelete


!! -----------------------------------------------------------------------------
!! I/O
!! Read, Write, Print
!! Each returns 0 if failure, 1 if success.
!! -----------------------------------------------------------------------------

!! Read from file
function RutherfordScatteringRead(handle, filename, filenameSize) &
      bind(C, name='RutherfordScatteringRead') &
      result(success)
   use iso_c_binding
   implicit none
   type(c_ptr), value :: handle
   integer(c_size_t), value :: filenameSize
   character(c_char), intent(in) :: filename(filenameSize)
   integer(c_int) :: success
end function RutherfordScatteringRead

!! Write to file
function RutherfordScatteringWrite(handle, filename, filenameSize) &
      bind(C, name='RutherfordScatteringWrite') &
      result(success)
   use iso_c_binding
   implicit none
   type(c_ptr), intent(in), value :: handle
   integer(c_size_t), value :: filenameSize
   character(c_char), intent(in) :: filename(filenameSize)
   integer(c_int) :: success
end function RutherfordScatteringWrite

!! Print to standard output, in our prettyprinting format
function RutherfordScatteringPrint(handle) &
      bind(C, name='RutherfordScatteringPrint') &
      result(success)
   use iso_c_binding
   implicit none
   type(c_ptr), intent(in), value :: handle
   integer(c_int) :: success
end function RutherfordScatteringPrint

!! Print to standard output, as XML
function RutherfordScatteringPrintXML(handle) &
      bind(C, name='RutherfordScatteringPrintXML') &
      result(success)
   use iso_c_binding
   implicit none
   type(c_ptr), intent(in), value :: handle
   integer(c_int) :: success
end function RutherfordScatteringPrintXML

!! Print to standard output, as JSON
function RutherfordScatteringPrintJSON(handle) &
      bind(C, name='RutherfordScatteringPrintJSON') &
      result(success)
   use iso_c_binding
   implicit none
   type(c_ptr), intent(in), value :: handle
   integer(c_int) :: success
end function RutherfordScatteringPrintJSON


!! -----------------------------------------------------------------------------
!! -----------------------------------------------------------------------------

end interface
end module generalRutherfordScattering
