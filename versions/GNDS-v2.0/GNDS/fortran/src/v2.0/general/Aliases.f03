
!! THIS FILE WAS AUTOGENERATED!
!! DO NOT MODIFY!

module generalAliases
use iso_c_binding
interface


!! -----------------------------------------------------------------------------
!! Basics
!! Create, Assign, Delete
!! -----------------------------------------------------------------------------

!! Create, default, const
function AliasesDefaultConst() &
      bind(C, name='AliasesDefaultConst')
   use iso_c_binding
   implicit none
   type(c_ptr) :: AliasesDefaultConst
end function AliasesDefaultConst

!! Create, default
function AliasesDefault() &
      bind(C, name='AliasesDefault')
   use iso_c_binding
   implicit none
   type(c_ptr) :: AliasesDefault
end function AliasesDefault

!! Create, general, const
function AliasesCreateConst( &
   alias, aliasSize, &
   metaStable, metaStableSize &
) &
      bind(C, name='AliasesCreateConst')
   use iso_c_binding
   implicit none
   integer(c_size_t), intent(in), value :: aliasSize
   type(c_ptr), intent(in) :: alias(aliasSize)
   integer(c_size_t), intent(in), value :: metaStableSize
   type(c_ptr), intent(in) :: metaStable(metaStableSize)
   type(c_ptr) :: AliasesCreateConst
end function AliasesCreateConst

!! Create, general
function AliasesCreate( &
   alias, aliasSize, &
   metaStable, metaStableSize &
) &
      bind(C, name='AliasesCreate')
   use iso_c_binding
   implicit none
   integer(c_size_t), intent(in), value :: aliasSize
   type(c_ptr), intent(in) :: alias(aliasSize)
   integer(c_size_t), intent(in), value :: metaStableSize
   type(c_ptr), intent(in) :: metaStable(metaStableSize)
   type(c_ptr) :: AliasesCreate
end function AliasesCreate

!! Assign
subroutine AliasesAssign(handleLHS, handleRHS) &
      bind(C, name='AliasesAssign')
   use iso_c_binding
   implicit none
   type(c_ptr), value :: handleLHS
   type(c_ptr), intent(in), value :: handleRHS
end subroutine AliasesAssign

!! Delete
subroutine AliasesDelete(handle) &
      bind(C, name='AliasesDelete')
   use iso_c_binding
   implicit none
   type(c_ptr), value :: handle
end subroutine AliasesDelete


!! -----------------------------------------------------------------------------
!! I/O
!! Read, Write, Print
!! Each returns 0 if failure, 1 if success.
!! -----------------------------------------------------------------------------

!! Read from file
function AliasesRead(handle, filename, filenameSize) &
      bind(C, name='AliasesRead')
   use iso_c_binding
   implicit none
   type(c_ptr), value :: handle
   integer(c_size_t), intent(in), value :: filenameSize
   character(c_char), intent(in) :: filename(filenameSize)
   integer(c_int) :: AliasesRead
end function AliasesRead

!! Write to file
function AliasesWrite(handle, filename, filenameSize) &
      bind(C, name='AliasesWrite')
   use iso_c_binding
   implicit none
   type(c_ptr), intent(in), value :: handle
   integer(c_size_t), intent(in), value :: filenameSize
   character(c_char), intent(in) :: filename(filenameSize)
   integer(c_int) :: AliasesWrite
end function AliasesWrite

!! Print to standard output, in our prettyprinting format
function AliasesPrint(handle) &
      bind(C, name='AliasesPrint')
   use iso_c_binding
   implicit none
   type(c_ptr), intent(in), value :: handle
   integer(c_int) :: AliasesPrint
end function AliasesPrint

!! Print to standard output, as XML
function AliasesPrintXML(handle) &
      bind(C, name='AliasesPrintXML')
   use iso_c_binding
   implicit none
   type(c_ptr), intent(in), value :: handle
   integer(c_int) :: AliasesPrintXML
end function AliasesPrintXML

!! Print to standard output, as JSON
function AliasesPrintJSON(handle) &
      bind(C, name='AliasesPrintJSON')
   use iso_c_binding
   implicit none
   type(c_ptr), intent(in), value :: handle
   integer(c_int) :: AliasesPrintJSON
end function AliasesPrintJSON


!! -----------------------------------------------------------------------------
!! Child: alias
!! -----------------------------------------------------------------------------

!! Has
function AliasesAliasHas(handle) &
      bind(C, name='AliasesAliasHas')
   use iso_c_binding
   implicit none
   type(c_ptr), intent(in), value :: handle
   integer(c_int) :: AliasesAliasHas
end function AliasesAliasHas

!! Clear
subroutine AliasesAliasClear(handle) &
      bind(C, name='AliasesAliasClear')
   use iso_c_binding
   implicit none
   type(c_ptr), value :: handle
end subroutine AliasesAliasClear

!! Size
function AliasesAliasSize(handle) &
      bind(C, name='AliasesAliasSize')
   use iso_c_binding
   implicit none
   type(c_ptr), intent(in), value :: handle
   integer(c_size_t) :: AliasesAliasSize
end function AliasesAliasSize

!! Add
subroutine AliasesAliasAdd(handle, fieldHandle) &
      bind(C, name='AliasesAliasAdd')
   use iso_c_binding
   implicit none
   type(c_ptr), value :: handle
   type(c_ptr), intent(in), value :: fieldHandle
end subroutine AliasesAliasAdd

!! Get, by index \in [0,size), const
function AliasesAliasGetConst(handle, index) &
      bind(C, name='AliasesAliasGetConst')
   use iso_c_binding
   implicit none
   type(c_ptr), intent(in), value :: handle
   integer(c_size_t), intent(in), value :: index
   type(c_ptr) :: AliasesAliasGetConst
end function AliasesAliasGetConst

!! Get, by index \in [0,size)
function AliasesAliasGet(handle, index) &
      bind(C, name='AliasesAliasGet')
   use iso_c_binding
   implicit none
   type(c_ptr), value :: handle
   integer(c_size_t), intent(in), value :: index
   type(c_ptr) :: AliasesAliasGet
end function AliasesAliasGet

!! Set, by index \in [0,size)
subroutine AliasesAliasSet(handle, index, fieldHandle) &
      bind(C, name='AliasesAliasSet')
   use iso_c_binding
   implicit none
   type(c_ptr), value :: handle
   integer(c_size_t), intent(in), value :: index
   type(c_ptr), intent(in), value :: fieldHandle
end subroutine AliasesAliasSet

!! ------------------------
!! Re: metadatum id
!! ------------------------

!! Has, by id
function AliasesAliasHasById(handle, meta, metaSize) &
      bind(C, name='AliasesAliasHasById')
   use iso_c_binding
   implicit none
   type(c_ptr), intent(in), value :: handle
   integer(c_size_t), intent(in), value :: metaSize
   character(c_char), intent(in) :: meta(metaSize)
   integer(c_int) :: AliasesAliasHasById
end function AliasesAliasHasById

!! Get, by id, const
function AliasesAliasGetByIdConst(handle, meta, metaSize) &
      bind(C, name='AliasesAliasGetByIdConst')
   use iso_c_binding
   implicit none
   type(c_ptr), intent(in), value :: handle
   integer(c_size_t), intent(in), value :: metaSize
   character(c_char), intent(in) :: meta(metaSize)
   type(c_ptr) :: AliasesAliasGetByIdConst
end function AliasesAliasGetByIdConst

!! Get, by id
function AliasesAliasGetById(handle, meta, metaSize) &
      bind(C, name='AliasesAliasGetById')
   use iso_c_binding
   implicit none
   type(c_ptr), value :: handle
   integer(c_size_t), intent(in), value :: metaSize
   character(c_char), intent(in) :: meta(metaSize)
   type(c_ptr) :: AliasesAliasGetById
end function AliasesAliasGetById

!! Set, by id
subroutine AliasesAliasSetById(handle, meta, metaSize, fieldHandle) &
      bind(C, name='AliasesAliasSetById')
   use iso_c_binding
   implicit none
   type(c_ptr), value :: handle
   integer(c_size_t), intent(in), value :: metaSize
   character(c_char), intent(in) :: meta(metaSize)
   type(c_ptr), intent(in), value :: fieldHandle
end subroutine AliasesAliasSetById

!! ------------------------
!! Re: metadatum pid
!! ------------------------

!! Has, by pid
function AliasesAliasHasByPid(handle, meta, metaSize) &
      bind(C, name='AliasesAliasHasByPid')
   use iso_c_binding
   implicit none
   type(c_ptr), intent(in), value :: handle
   integer(c_size_t), intent(in), value :: metaSize
   character(c_char), intent(in) :: meta(metaSize)
   integer(c_int) :: AliasesAliasHasByPid
end function AliasesAliasHasByPid

!! Get, by pid, const
function AliasesAliasGetByPidConst(handle, meta, metaSize) &
      bind(C, name='AliasesAliasGetByPidConst')
   use iso_c_binding
   implicit none
   type(c_ptr), intent(in), value :: handle
   integer(c_size_t), intent(in), value :: metaSize
   character(c_char), intent(in) :: meta(metaSize)
   type(c_ptr) :: AliasesAliasGetByPidConst
end function AliasesAliasGetByPidConst

!! Get, by pid
function AliasesAliasGetByPid(handle, meta, metaSize) &
      bind(C, name='AliasesAliasGetByPid')
   use iso_c_binding
   implicit none
   type(c_ptr), value :: handle
   integer(c_size_t), intent(in), value :: metaSize
   character(c_char), intent(in) :: meta(metaSize)
   type(c_ptr) :: AliasesAliasGetByPid
end function AliasesAliasGetByPid

!! Set, by pid
subroutine AliasesAliasSetByPid(handle, meta, metaSize, fieldHandle) &
      bind(C, name='AliasesAliasSetByPid')
   use iso_c_binding
   implicit none
   type(c_ptr), value :: handle
   integer(c_size_t), intent(in), value :: metaSize
   character(c_char), intent(in) :: meta(metaSize)
   type(c_ptr), intent(in), value :: fieldHandle
end subroutine AliasesAliasSetByPid


!! -----------------------------------------------------------------------------
!! Child: metaStable
!! -----------------------------------------------------------------------------

!! Has
function AliasesMetaStableHas(handle) &
      bind(C, name='AliasesMetaStableHas')
   use iso_c_binding
   implicit none
   type(c_ptr), intent(in), value :: handle
   integer(c_int) :: AliasesMetaStableHas
end function AliasesMetaStableHas

!! Clear
subroutine AliasesMetaStableClear(handle) &
      bind(C, name='AliasesMetaStableClear')
   use iso_c_binding
   implicit none
   type(c_ptr), value :: handle
end subroutine AliasesMetaStableClear

!! Size
function AliasesMetaStableSize(handle) &
      bind(C, name='AliasesMetaStableSize')
   use iso_c_binding
   implicit none
   type(c_ptr), intent(in), value :: handle
   integer(c_size_t) :: AliasesMetaStableSize
end function AliasesMetaStableSize

!! Add
subroutine AliasesMetaStableAdd(handle, fieldHandle) &
      bind(C, name='AliasesMetaStableAdd')
   use iso_c_binding
   implicit none
   type(c_ptr), value :: handle
   type(c_ptr), intent(in), value :: fieldHandle
end subroutine AliasesMetaStableAdd

!! Get, by index \in [0,size), const
function AliasesMetaStableGetConst(handle, index) &
      bind(C, name='AliasesMetaStableGetConst')
   use iso_c_binding
   implicit none
   type(c_ptr), intent(in), value :: handle
   integer(c_size_t), intent(in), value :: index
   type(c_ptr) :: AliasesMetaStableGetConst
end function AliasesMetaStableGetConst

!! Get, by index \in [0,size)
function AliasesMetaStableGet(handle, index) &
      bind(C, name='AliasesMetaStableGet')
   use iso_c_binding
   implicit none
   type(c_ptr), value :: handle
   integer(c_size_t), intent(in), value :: index
   type(c_ptr) :: AliasesMetaStableGet
end function AliasesMetaStableGet

!! Set, by index \in [0,size)
subroutine AliasesMetaStableSet(handle, index, fieldHandle) &
      bind(C, name='AliasesMetaStableSet')
   use iso_c_binding
   implicit none
   type(c_ptr), value :: handle
   integer(c_size_t), intent(in), value :: index
   type(c_ptr), intent(in), value :: fieldHandle
end subroutine AliasesMetaStableSet

!! ------------------------
!! Re: metadatum id
!! ------------------------

!! Has, by id
function AliasesMetaStableHasById(handle, meta, metaSize) &
      bind(C, name='AliasesMetaStableHasById')
   use iso_c_binding
   implicit none
   type(c_ptr), intent(in), value :: handle
   integer(c_size_t), intent(in), value :: metaSize
   character(c_char), intent(in) :: meta(metaSize)
   integer(c_int) :: AliasesMetaStableHasById
end function AliasesMetaStableHasById

!! Get, by id, const
function AliasesMetaStableGetByIdConst(handle, meta, metaSize) &
      bind(C, name='AliasesMetaStableGetByIdConst')
   use iso_c_binding
   implicit none
   type(c_ptr), intent(in), value :: handle
   integer(c_size_t), intent(in), value :: metaSize
   character(c_char), intent(in) :: meta(metaSize)
   type(c_ptr) :: AliasesMetaStableGetByIdConst
end function AliasesMetaStableGetByIdConst

!! Get, by id
function AliasesMetaStableGetById(handle, meta, metaSize) &
      bind(C, name='AliasesMetaStableGetById')
   use iso_c_binding
   implicit none
   type(c_ptr), value :: handle
   integer(c_size_t), intent(in), value :: metaSize
   character(c_char), intent(in) :: meta(metaSize)
   type(c_ptr) :: AliasesMetaStableGetById
end function AliasesMetaStableGetById

!! Set, by id
subroutine AliasesMetaStableSetById(handle, meta, metaSize, fieldHandle) &
      bind(C, name='AliasesMetaStableSetById')
   use iso_c_binding
   implicit none
   type(c_ptr), value :: handle
   integer(c_size_t), intent(in), value :: metaSize
   character(c_char), intent(in) :: meta(metaSize)
   type(c_ptr), intent(in), value :: fieldHandle
end subroutine AliasesMetaStableSetById

!! ------------------------
!! Re: metadatum pid
!! ------------------------

!! Has, by pid
function AliasesMetaStableHasByPid(handle, meta, metaSize) &
      bind(C, name='AliasesMetaStableHasByPid')
   use iso_c_binding
   implicit none
   type(c_ptr), intent(in), value :: handle
   integer(c_size_t), intent(in), value :: metaSize
   character(c_char), intent(in) :: meta(metaSize)
   integer(c_int) :: AliasesMetaStableHasByPid
end function AliasesMetaStableHasByPid

!! Get, by pid, const
function AliasesMetaStableGetByPidConst(handle, meta, metaSize) &
      bind(C, name='AliasesMetaStableGetByPidConst')
   use iso_c_binding
   implicit none
   type(c_ptr), intent(in), value :: handle
   integer(c_size_t), intent(in), value :: metaSize
   character(c_char), intent(in) :: meta(metaSize)
   type(c_ptr) :: AliasesMetaStableGetByPidConst
end function AliasesMetaStableGetByPidConst

!! Get, by pid
function AliasesMetaStableGetByPid(handle, meta, metaSize) &
      bind(C, name='AliasesMetaStableGetByPid')
   use iso_c_binding
   implicit none
   type(c_ptr), value :: handle
   integer(c_size_t), intent(in), value :: metaSize
   character(c_char), intent(in) :: meta(metaSize)
   type(c_ptr) :: AliasesMetaStableGetByPid
end function AliasesMetaStableGetByPid

!! Set, by pid
subroutine AliasesMetaStableSetByPid(handle, meta, metaSize, fieldHandle) &
      bind(C, name='AliasesMetaStableSetByPid')
   use iso_c_binding
   implicit none
   type(c_ptr), value :: handle
   integer(c_size_t), intent(in), value :: metaSize
   character(c_char), intent(in) :: meta(metaSize)
   type(c_ptr), intent(in), value :: fieldHandle
end subroutine AliasesMetaStableSetByPid

!! ------------------------
!! Re: metadatum metaStableIndex
!! ------------------------

!! Has, by metaStableIndex
function AliasesMetaStableHasByMetaStableIndex(handle, meta) &
      bind(C, name='AliasesMetaStableHasByMetaStableIndex')
   use iso_c_binding
   implicit none
   type(c_ptr), intent(in), value :: handle
   integer(c_int), intent(in), value :: meta
   integer(c_int) :: AliasesMetaStableHasByMetaStableIndex
end function AliasesMetaStableHasByMetaStableIndex

!! Get, by metaStableIndex, const
function AliasesMetaStableGetByMetaStableIndexConst(handle, meta) &
      bind(C, name='AliasesMetaStableGetByMetaStableIndexConst')
   use iso_c_binding
   implicit none
   type(c_ptr), intent(in), value :: handle
   integer(c_int), intent(in), value :: meta
   type(c_ptr) :: AliasesMetaStableGetByMetaStableIndexConst
end function AliasesMetaStableGetByMetaStableIndexConst

!! Get, by metaStableIndex
function AliasesMetaStableGetByMetaStableIndex(handle, meta) &
      bind(C, name='AliasesMetaStableGetByMetaStableIndex')
   use iso_c_binding
   implicit none
   type(c_ptr), value :: handle
   integer(c_int), intent(in), value :: meta
   type(c_ptr) :: AliasesMetaStableGetByMetaStableIndex
end function AliasesMetaStableGetByMetaStableIndex

!! Set, by metaStableIndex
subroutine AliasesMetaStableSetByMetaStableIndex(handle, meta, fieldHandle) &
      bind(C, name='AliasesMetaStableSetByMetaStableIndex')
   use iso_c_binding
   implicit none
   type(c_ptr), value :: handle
   integer(c_int), intent(in), value :: meta
   type(c_ptr), intent(in), value :: fieldHandle
end subroutine AliasesMetaStableSetByMetaStableIndex


!! -----------------------------------------------------------------------------
!! -----------------------------------------------------------------------------

end interface
end module generalAliases
