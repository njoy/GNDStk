
!! THIS FILE WAS AUTOGENERATED!
!! DO NOT MODIFY!

module generalParameterLink
use iso_c_binding
interface


!! -----------------------------------------------------------------------------
!! Basics
!! Create, Assign, Delete
!! -----------------------------------------------------------------------------

!! Create, default, const
function ParameterLinkDefaultConst() &
      bind(C, name='ParameterLinkDefaultConst') &
      result(handle)
   use iso_c_binding
   implicit none
   type(c_ptr) :: handle
end function ParameterLinkDefaultConst

!! Create, default
function ParameterLinkDefault() &
      bind(C, name='ParameterLinkDefault') &
      result(handle)
   use iso_c_binding
   implicit none
   type(c_ptr) :: handle
end function ParameterLinkDefault

!! Create, general, const
function ParameterLinkCreateConst( &
   label, &
   href, &
   nParameters, &
   matrixStartIndex, &
   labelSize, &
   hrefSize &
) &
      bind(C, name='ParameterLinkCreateConst') &
      result(handle)
   use iso_c_binding
   implicit none
   integer(c_size_t), intent(in), value :: labelSize
   character(c_char), intent(in) :: label(labelSize)
   integer(c_size_t), intent(in), value :: hrefSize
   character(c_char), intent(in) :: href(hrefSize)
   integer(c_int), value, intent(in) :: nParameters
   integer(c_int), value, intent(in) :: matrixStartIndex
   type(c_ptr) :: handle
end function ParameterLinkCreateConst

!! Create, general
function ParameterLinkCreate( &
   label, &
   href, &
   nParameters, &
   matrixStartIndex, &
   labelSize, &
   hrefSize &
) &
      bind(C, name='ParameterLinkCreate') &
      result(handle)
   use iso_c_binding
   implicit none
   integer(c_size_t), intent(in), value :: labelSize
   character(c_char), intent(in) :: label(labelSize)
   integer(c_size_t), intent(in), value :: hrefSize
   character(c_char), intent(in) :: href(hrefSize)
   integer(c_int), value, intent(in) :: nParameters
   integer(c_int), value, intent(in) :: matrixStartIndex
   type(c_ptr) :: handle
end function ParameterLinkCreate

!! Assign
subroutine ParameterLinkAssign(handleLHS, handleRHS) &
      bind(C, name='ParameterLinkAssign')
   use iso_c_binding
   implicit none
   type(c_ptr), value :: handleLHS, handleRHS
end subroutine ParameterLinkAssign

!! Delete
subroutine ParameterLinkDelete(handle) &
      bind(C, name='ParameterLinkDelete')
   use iso_c_binding
   implicit none
   type(c_ptr), value :: handle
end subroutine ParameterLinkDelete


!! -----------------------------------------------------------------------------
!! I/O
!! Read, Write, Print
!! Each returns 0 if failure, 1 if success.
!! -----------------------------------------------------------------------------

!! Read from file
function ParameterLinkRead(handle, filename, filenameSize) &
      bind(C, name='ParameterLinkRead') &
      result(success)
   use iso_c_binding
   implicit none
   type(c_ptr), value :: handle
   integer(c_size_t), value :: filenameSize
   character(c_char), intent(in) :: filename(filenameSize)
   integer(c_int) :: success
end function ParameterLinkRead

!! Write to file
function ParameterLinkWrite(handle, filename, filenameSize) &
      bind(C, name='ParameterLinkWrite') &
      result(success)
   use iso_c_binding
   implicit none
   type(c_ptr), intent(in), value :: handle
   integer(c_size_t), value :: filenameSize
   character(c_char), intent(in) :: filename(filenameSize)
   integer(c_int) :: success
end function ParameterLinkWrite

!! Print to standard output, in our prettyprinting format
function ParameterLinkPrint(handle) &
      bind(C, name='ParameterLinkPrint') &
      result(success)
   use iso_c_binding
   implicit none
   type(c_ptr), intent(in), value :: handle
   integer(c_int) :: success
end function ParameterLinkPrint

!! Print to standard output, as XML
function ParameterLinkPrintXML(handle) &
      bind(C, name='ParameterLinkPrintXML') &
      result(success)
   use iso_c_binding
   implicit none
   type(c_ptr), intent(in), value :: handle
   integer(c_int) :: success
end function ParameterLinkPrintXML

!! Print to standard output, as JSON
function ParameterLinkPrintJSON(handle) &
      bind(C, name='ParameterLinkPrintJSON') &
      result(success)
   use iso_c_binding
   implicit none
   type(c_ptr), intent(in), value :: handle
   integer(c_int) :: success
end function ParameterLinkPrintJSON


!! -----------------------------------------------------------------------------
!! Metadatum: label
!! -----------------------------------------------------------------------------

!! Has
function ParameterLinkLabelHas(handle) &
      bind(C, name='ParameterLinkLabelHas') &
      result(has)
   use iso_c_binding
   implicit none
   type(c_ptr), intent(in), value :: handle
   integer(c_int) :: has
end function ParameterLinkLabelHas

!! Get
function ParameterLinkLabelGet(handle) &
      bind(C, name='ParameterLinkLabelGet') &
      result(label)
   use iso_c_binding
   implicit none
   type(c_ptr), intent(in), value :: handle
   type(c_ptr) :: label
end function ParameterLinkLabelGet

!! Set
subroutine ParameterLinkLabelSet(handle, label, labelSize) &
      bind(C, name='ParameterLinkLabelSet')
   use iso_c_binding
   implicit none
   type(c_ptr), value :: handle
   integer(c_size_t), intent(in), value :: labelSize
   character(c_char), intent(in) :: label(labelSize)
end subroutine ParameterLinkLabelSet


!! -----------------------------------------------------------------------------
!! Metadatum: href
!! -----------------------------------------------------------------------------

!! Has
function ParameterLinkHrefHas(handle) &
      bind(C, name='ParameterLinkHrefHas') &
      result(has)
   use iso_c_binding
   implicit none
   type(c_ptr), intent(in), value :: handle
   integer(c_int) :: has
end function ParameterLinkHrefHas

!! Get
function ParameterLinkHrefGet(handle) &
      bind(C, name='ParameterLinkHrefGet') &
      result(href)
   use iso_c_binding
   implicit none
   type(c_ptr), intent(in), value :: handle
   type(c_ptr) :: href
end function ParameterLinkHrefGet

!! Set
subroutine ParameterLinkHrefSet(handle, href, hrefSize) &
      bind(C, name='ParameterLinkHrefSet')
   use iso_c_binding
   implicit none
   type(c_ptr), value :: handle
   integer(c_size_t), intent(in), value :: hrefSize
   character(c_char), intent(in) :: href(hrefSize)
end subroutine ParameterLinkHrefSet


!! -----------------------------------------------------------------------------
!! Metadatum: nParameters
!! -----------------------------------------------------------------------------

!! Has
function ParameterLinkNParametersHas(handle) &
      bind(C, name='ParameterLinkNParametersHas') &
      result(has)
   use iso_c_binding
   implicit none
   type(c_ptr), intent(in), value :: handle
   integer(c_int) :: has
end function ParameterLinkNParametersHas

!! Get
function ParameterLinkNParametersGet(handle) &
      bind(C, name='ParameterLinkNParametersGet') &
      result(nParameters)
   use iso_c_binding
   implicit none
   type(c_ptr), intent(in), value :: handle
   integer(c_int) :: nParameters
end function ParameterLinkNParametersGet

!! Set
subroutine ParameterLinkNParametersSet(handle, nParameters, nParametersSize) &
      bind(C, name='ParameterLinkNParametersSet')
   use iso_c_binding
   implicit none
   type(c_ptr), value :: handle
   integer(c_size_t), intent(in), value :: nParametersSize
   character(c_char), intent(in) :: nParameters(nParametersSize)
end subroutine ParameterLinkNParametersSet


!! -----------------------------------------------------------------------------
!! Metadatum: matrixStartIndex
!! -----------------------------------------------------------------------------

!! Has
function ParameterLinkMatrixStartIndexHas(handle) &
      bind(C, name='ParameterLinkMatrixStartIndexHas') &
      result(has)
   use iso_c_binding
   implicit none
   type(c_ptr), intent(in), value :: handle
   integer(c_int) :: has
end function ParameterLinkMatrixStartIndexHas

!! Get
function ParameterLinkMatrixStartIndexGet(handle) &
      bind(C, name='ParameterLinkMatrixStartIndexGet') &
      result(matrixStartIndex)
   use iso_c_binding
   implicit none
   type(c_ptr), intent(in), value :: handle
   integer(c_int) :: matrixStartIndex
end function ParameterLinkMatrixStartIndexGet

!! Set
subroutine ParameterLinkMatrixStartIndexSet(handle, matrixStartIndex, matrixStartIndexSize) &
      bind(C, name='ParameterLinkMatrixStartIndexSet')
   use iso_c_binding
   implicit none
   type(c_ptr), value :: handle
   integer(c_size_t), intent(in), value :: matrixStartIndexSize
   character(c_char), intent(in) :: matrixStartIndex(matrixStartIndexSize)
end subroutine ParameterLinkMatrixStartIndexSet


!! -----------------------------------------------------------------------------
!! -----------------------------------------------------------------------------

end interface
end module generalParameterLink
