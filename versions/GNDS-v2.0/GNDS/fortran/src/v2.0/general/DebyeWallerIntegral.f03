
!! THIS FILE WAS AUTOGENERATED!
!! DO NOT MODIFY!

module generalDebyeWallerIntegral
use iso_c_binding
interface


!! -----------------------------------------------------------------------------
!! Basics
!! Create, Assign, Delete
!! -----------------------------------------------------------------------------

!! Create, default, const
function DebyeWallerIntegralDefaultConst() &
      bind(C, name='DebyeWallerIntegralDefaultConst')
   use iso_c_binding
   implicit none
   type(c_ptr) :: DebyeWallerIntegralDefaultConst
end function DebyeWallerIntegralDefaultConst

!! Create, default, non-const
function DebyeWallerIntegralDefault() &
      bind(C, name='DebyeWallerIntegralDefault')
   use iso_c_binding
   implicit none
   type(c_ptr) :: DebyeWallerIntegralDefault
end function DebyeWallerIntegralDefault

!! Create, general, const
function DebyeWallerIntegralCreateConst( &
   XYs1d &
) &
      bind(C, name='DebyeWallerIntegralCreateConst')
   use iso_c_binding
   implicit none
   type(c_ptr), intent(in), value :: XYs1d
   type(c_ptr) :: DebyeWallerIntegralCreateConst
end function DebyeWallerIntegralCreateConst

!! Create, general, non-const
function DebyeWallerIntegralCreate( &
   XYs1d &
) &
      bind(C, name='DebyeWallerIntegralCreate')
   use iso_c_binding
   implicit none
   type(c_ptr), intent(in), value :: XYs1d
   type(c_ptr) :: DebyeWallerIntegralCreate
end function DebyeWallerIntegralCreate

!! Assign
subroutine DebyeWallerIntegralAssign(handleLHS, handleRHS) &
      bind(C, name='DebyeWallerIntegralAssign')
   use iso_c_binding
   implicit none
   type(c_ptr), value :: handleLHS
   type(c_ptr), intent(in), value :: handleRHS
end subroutine DebyeWallerIntegralAssign

!! Delete
subroutine DebyeWallerIntegralDelete(handle) &
      bind(C, name='DebyeWallerIntegralDelete')
   use iso_c_binding
   implicit none
   type(c_ptr), value :: handle
end subroutine DebyeWallerIntegralDelete


!! -----------------------------------------------------------------------------
!! I/O
!! Read, Write, Print
!! Each returns 0 if failure, 1 if success.
!! -----------------------------------------------------------------------------

!! Read from file
!! File can be XML, JSON, or HDF5.
!! We'll examine the file's contents to determine its type automatically.
function DebyeWallerIntegralRead(handle, filename, filenameSize) &
      bind(C, name='DebyeWallerIntegralRead')
   use iso_c_binding
   implicit none
   type(c_ptr), value :: handle
   integer(c_size_t), intent(in), value :: filenameSize
   character(c_char), intent(in) :: filename(filenameSize)
   integer(c_int) :: DebyeWallerIntegralRead
end function DebyeWallerIntegralRead

!! Write to file
!! File can be XML, JSON, or HDF5.
!! We'll use filename's extension to determine the type you want written.
function DebyeWallerIntegralWrite(handle, filename, filenameSize) &
      bind(C, name='DebyeWallerIntegralWrite')
   use iso_c_binding
   implicit none
   type(c_ptr), intent(in), value :: handle
   integer(c_size_t), intent(in), value :: filenameSize
   character(c_char), intent(in) :: filename(filenameSize)
   integer(c_int) :: DebyeWallerIntegralWrite
end function DebyeWallerIntegralWrite

!! Print to standard output, in our prettyprinting format
function DebyeWallerIntegralPrint(handle) &
      bind(C, name='DebyeWallerIntegralPrint')
   use iso_c_binding
   implicit none
   type(c_ptr), intent(in), value :: handle
   integer(c_int) :: DebyeWallerIntegralPrint
end function DebyeWallerIntegralPrint

!! Print to standard output, as XML
function DebyeWallerIntegralPrintXML(handle) &
      bind(C, name='DebyeWallerIntegralPrintXML')
   use iso_c_binding
   implicit none
   type(c_ptr), intent(in), value :: handle
   integer(c_int) :: DebyeWallerIntegralPrintXML
end function DebyeWallerIntegralPrintXML

!! Print to standard output, as JSON
function DebyeWallerIntegralPrintJSON(handle) &
      bind(C, name='DebyeWallerIntegralPrintJSON')
   use iso_c_binding
   implicit none
   type(c_ptr), intent(in), value :: handle
   integer(c_int) :: DebyeWallerIntegralPrintJSON
end function DebyeWallerIntegralPrintJSON


!! -----------------------------------------------------------------------------
!! Child: XYs1d
!! -----------------------------------------------------------------------------

!! Has
function DebyeWallerIntegralXYs1dHas(handle) &
      bind(C, name='DebyeWallerIntegralXYs1dHas')
   use iso_c_binding
   implicit none
   type(c_ptr), intent(in), value :: handle
   integer(c_int) :: DebyeWallerIntegralXYs1dHas
end function DebyeWallerIntegralXYs1dHas

!! Get, const
function DebyeWallerIntegralXYs1dGetConst(handle) &
      bind(C, name='DebyeWallerIntegralXYs1dGetConst')
   use iso_c_binding
   implicit none
   type(c_ptr), intent(in), value :: handle
   type(c_ptr) :: DebyeWallerIntegralXYs1dGetConst
end function DebyeWallerIntegralXYs1dGetConst

!! Get, non-const
function DebyeWallerIntegralXYs1dGet(handle) &
      bind(C, name='DebyeWallerIntegralXYs1dGet')
   use iso_c_binding
   implicit none
   type(c_ptr), value :: handle
   type(c_ptr) :: DebyeWallerIntegralXYs1dGet
end function DebyeWallerIntegralXYs1dGet

!! Set
subroutine DebyeWallerIntegralXYs1dSet(handle, fieldHandle) &
      bind(C, name='DebyeWallerIntegralXYs1dSet')
   use iso_c_binding
   implicit none
   type(c_ptr), value :: handle
   type(c_ptr), intent(in), value :: fieldHandle
end subroutine DebyeWallerIntegralXYs1dSet


!! -----------------------------------------------------------------------------
!! -----------------------------------------------------------------------------

end interface
end module generalDebyeWallerIntegral
