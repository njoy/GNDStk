
!! THIS FILE WAS AUTOGENERATED!
!! DO NOT MODIFY!

module generalSummand
use iso_c_binding
interface


!! -----------------------------------------------------------------------------
!! Basics
!! Create, Assign, Delete
!! -----------------------------------------------------------------------------

!! Create, default, const
function SummandDefaultConst() &
      bind(C, name='SummandDefaultConst')
   use iso_c_binding
   implicit none
   type(c_ptr) :: SummandDefaultConst
end function SummandDefaultConst

!! Create, default
function SummandDefault() &
      bind(C, name='SummandDefault')
   use iso_c_binding
   implicit none
   type(c_ptr) :: SummandDefault
end function SummandDefault

!! Create, general, const
function SummandCreateConst( &
   ENDF_MFMT, &
   coefficient, &
   href, &
   ENDF_MFMTSize, &
   coefficientSize, &
   hrefSize &
) &
      bind(C, name='SummandCreateConst')
   use iso_c_binding
   implicit none
   integer(c_size_t), intent(in), value :: ENDF_MFMTSize
   character(c_char), intent(in) :: ENDF_MFMT(ENDF_MFMTSize)
   integer(c_size_t), intent(in), value :: coefficientSize
   character(c_char), intent(in) :: coefficient(coefficientSize)
   integer(c_size_t), intent(in), value :: hrefSize
   character(c_char), intent(in) :: href(hrefSize)
   type(c_ptr) :: SummandCreateConst
end function SummandCreateConst

!! Create, general
function SummandCreate( &
   ENDF_MFMT, &
   coefficient, &
   href, &
   ENDF_MFMTSize, &
   coefficientSize, &
   hrefSize &
) &
      bind(C, name='SummandCreate')
   use iso_c_binding
   implicit none
   integer(c_size_t), intent(in), value :: ENDF_MFMTSize
   character(c_char), intent(in) :: ENDF_MFMT(ENDF_MFMTSize)
   integer(c_size_t), intent(in), value :: coefficientSize
   character(c_char), intent(in) :: coefficient(coefficientSize)
   integer(c_size_t), intent(in), value :: hrefSize
   character(c_char), intent(in) :: href(hrefSize)
   type(c_ptr) :: SummandCreate
end function SummandCreate

!! Assign
subroutine SummandAssign(handleLHS, handleRHS) &
      bind(C, name='SummandAssign')
   use iso_c_binding
   implicit none
   type(c_ptr), value :: handleLHS, handleRHS
end subroutine SummandAssign

!! Delete
subroutine SummandDelete(handle) &
      bind(C, name='SummandDelete')
   use iso_c_binding
   implicit none
   type(c_ptr), value :: handle
end subroutine SummandDelete


!! -----------------------------------------------------------------------------
!! I/O
!! Read, Write, Print
!! Each returns 0 if failure, 1 if success.
!! -----------------------------------------------------------------------------

!! Read from file
function SummandRead(handle, filename, filenameSize) &
      bind(C, name='SummandRead')
   use iso_c_binding
   implicit none
   type(c_ptr), value :: handle
   integer(c_size_t), value :: filenameSize
   character(c_char), intent(in) :: filename(filenameSize)
   integer(c_int) :: SummandRead
end function SummandRead

!! Write to file
function SummandWrite(handle, filename, filenameSize) &
      bind(C, name='SummandWrite')
   use iso_c_binding
   implicit none
   type(c_ptr), intent(in), value :: handle
   integer(c_size_t), value :: filenameSize
   character(c_char), intent(in) :: filename(filenameSize)
   integer(c_int) :: SummandWrite
end function SummandWrite

!! Print to standard output, in our prettyprinting format
function SummandPrint(handle) &
      bind(C, name='SummandPrint')
   use iso_c_binding
   implicit none
   type(c_ptr), intent(in), value :: handle
   integer(c_int) :: SummandPrint
end function SummandPrint

!! Print to standard output, as XML
function SummandPrintXML(handle) &
      bind(C, name='SummandPrintXML')
   use iso_c_binding
   implicit none
   type(c_ptr), intent(in), value :: handle
   integer(c_int) :: SummandPrintXML
end function SummandPrintXML

!! Print to standard output, as JSON
function SummandPrintJSON(handle) &
      bind(C, name='SummandPrintJSON')
   use iso_c_binding
   implicit none
   type(c_ptr), intent(in), value :: handle
   integer(c_int) :: SummandPrintJSON
end function SummandPrintJSON


!! -----------------------------------------------------------------------------
!! Metadatum: ENDF_MFMT
!! -----------------------------------------------------------------------------

!! Has
function SummandENDFMFMTHas(handle) &
      bind(C, name='SummandENDFMFMTHas')
   use iso_c_binding
   implicit none
   type(c_ptr), intent(in), value :: handle
   integer(c_int) :: SummandENDFMFMTHas
end function SummandENDFMFMTHas

!! Get
function SummandENDFMFMTGet(handle) &
      bind(C, name='SummandENDFMFMTGet')
   use iso_c_binding
   implicit none
   type(c_ptr), intent(in), value :: handle
   type(c_ptr) :: SummandENDFMFMTGet
end function SummandENDFMFMTGet

!! Set
subroutine SummandENDFMFMTSet(handle, ENDF_MFMT, ENDF_MFMTSize) &
      bind(C, name='SummandENDFMFMTSet')
   use iso_c_binding
   implicit none
   type(c_ptr), value :: handle
   integer(c_size_t), intent(in), value :: ENDF_MFMTSize
   character(c_char), intent(in) :: ENDF_MFMT(ENDF_MFMTSize)
end subroutine SummandENDFMFMTSet


!! -----------------------------------------------------------------------------
!! Metadatum: coefficient
!! -----------------------------------------------------------------------------

!! Has
function SummandCoefficientHas(handle) &
      bind(C, name='SummandCoefficientHas')
   use iso_c_binding
   implicit none
   type(c_ptr), intent(in), value :: handle
   integer(c_int) :: SummandCoefficientHas
end function SummandCoefficientHas

!! Get
function SummandCoefficientGet(handle) &
      bind(C, name='SummandCoefficientGet')
   use iso_c_binding
   implicit none
   type(c_ptr), intent(in), value :: handle
   type(c_ptr) :: SummandCoefficientGet
end function SummandCoefficientGet

!! Set
subroutine SummandCoefficientSet(handle, coefficient, coefficientSize) &
      bind(C, name='SummandCoefficientSet')
   use iso_c_binding
   implicit none
   type(c_ptr), value :: handle
   integer(c_size_t), intent(in), value :: coefficientSize
   character(c_char), intent(in) :: coefficient(coefficientSize)
end subroutine SummandCoefficientSet


!! -----------------------------------------------------------------------------
!! Metadatum: href
!! -----------------------------------------------------------------------------

!! Has
function SummandHrefHas(handle) &
      bind(C, name='SummandHrefHas')
   use iso_c_binding
   implicit none
   type(c_ptr), intent(in), value :: handle
   integer(c_int) :: SummandHrefHas
end function SummandHrefHas

!! Get
function SummandHrefGet(handle) &
      bind(C, name='SummandHrefGet')
   use iso_c_binding
   implicit none
   type(c_ptr), intent(in), value :: handle
   type(c_ptr) :: SummandHrefGet
end function SummandHrefGet

!! Set
subroutine SummandHrefSet(handle, href, hrefSize) &
      bind(C, name='SummandHrefSet')
   use iso_c_binding
   implicit none
   type(c_ptr), value :: handle
   integer(c_size_t), intent(in), value :: hrefSize
   character(c_char), intent(in) :: href(hrefSize)
end subroutine SummandHrefSet


!! -----------------------------------------------------------------------------
!! -----------------------------------------------------------------------------

end interface
end module generalSummand
