
!! THIS FILE WAS AUTOGENERATED!
!! DO NOT MODIFY!

module generalDecayModes
use iso_c_binding
interface


!! -----------------------------------------------------------------------------
!! Basics
!! Create, Assign, Delete
!! -----------------------------------------------------------------------------

!! Create, default, const
function DecayModesDefaultConst() &
      bind(C, name='DecayModesDefaultConst')
   use iso_c_binding
   implicit none
   type(c_ptr) :: DecayModesDefaultConst
end function DecayModesDefaultConst

!! Create, default, non-const
function DecayModesDefault() &
      bind(C, name='DecayModesDefault')
   use iso_c_binding
   implicit none
   type(c_ptr) :: DecayModesDefault
end function DecayModesDefault

!! Create, general, const
function DecayModesCreateConst( &
   decayMode, decayModeSize &
) &
      bind(C, name='DecayModesCreateConst')
   use iso_c_binding
   implicit none
   integer(c_size_t), intent(in), value :: decayModeSize
   type(c_ptr), intent(in) :: decayMode(decayModeSize)
   type(c_ptr) :: DecayModesCreateConst
end function DecayModesCreateConst

!! Create, general, non-const
function DecayModesCreate( &
   decayMode, decayModeSize &
) &
      bind(C, name='DecayModesCreate')
   use iso_c_binding
   implicit none
   integer(c_size_t), intent(in), value :: decayModeSize
   type(c_ptr), intent(in) :: decayMode(decayModeSize)
   type(c_ptr) :: DecayModesCreate
end function DecayModesCreate

!! Assign
subroutine DecayModesAssign(handleLHS, handleRHS) &
      bind(C, name='DecayModesAssign')
   use iso_c_binding
   implicit none
   type(c_ptr), value :: handleLHS
   type(c_ptr), intent(in), value :: handleRHS
end subroutine DecayModesAssign

!! Delete
subroutine DecayModesDelete(handle) &
      bind(C, name='DecayModesDelete')
   use iso_c_binding
   implicit none
   type(c_ptr), value :: handle
end subroutine DecayModesDelete


!! -----------------------------------------------------------------------------
!! I/O
!! Read, Write, Print
!! Each returns 0 if failure, 1 if success.
!! -----------------------------------------------------------------------------

!! Read from file
!! File can be XML, JSON, or HDF5.
!! We'll examine the file's contents to determine its type automatically.
function DecayModesRead(handle, filename, filenameSize) &
      bind(C, name='DecayModesRead')
   use iso_c_binding
   implicit none
   type(c_ptr), value :: handle
   integer(c_size_t), intent(in), value :: filenameSize
   character(c_char), intent(in) :: filename(filenameSize)
   integer(c_int) :: DecayModesRead
end function DecayModesRead

!! Write to file
!! File can be XML, JSON, or HDF5.
!! We'll use filename's extension to determine the type you want written.
function DecayModesWrite(handle, filename, filenameSize) &
      bind(C, name='DecayModesWrite')
   use iso_c_binding
   implicit none
   type(c_ptr), intent(in), value :: handle
   integer(c_size_t), intent(in), value :: filenameSize
   character(c_char), intent(in) :: filename(filenameSize)
   integer(c_int) :: DecayModesWrite
end function DecayModesWrite

!! Print to standard output, in our prettyprinting format
function DecayModesPrint(handle) &
      bind(C, name='DecayModesPrint')
   use iso_c_binding
   implicit none
   type(c_ptr), intent(in), value :: handle
   integer(c_int) :: DecayModesPrint
end function DecayModesPrint

!! Print to standard output, as XML
function DecayModesPrintXML(handle) &
      bind(C, name='DecayModesPrintXML')
   use iso_c_binding
   implicit none
   type(c_ptr), intent(in), value :: handle
   integer(c_int) :: DecayModesPrintXML
end function DecayModesPrintXML

!! Print to standard output, as JSON
function DecayModesPrintJSON(handle) &
      bind(C, name='DecayModesPrintJSON')
   use iso_c_binding
   implicit none
   type(c_ptr), intent(in), value :: handle
   integer(c_int) :: DecayModesPrintJSON
end function DecayModesPrintJSON


!! -----------------------------------------------------------------------------
!! Child: decayMode
!! -----------------------------------------------------------------------------

!! Has
function DecayModesDecayModeHas(handle) &
      bind(C, name='DecayModesDecayModeHas')
   use iso_c_binding
   implicit none
   type(c_ptr), intent(in), value :: handle
   integer(c_int) :: DecayModesDecayModeHas
end function DecayModesDecayModeHas

!! Clear
subroutine DecayModesDecayModeClear(handle) &
      bind(C, name='DecayModesDecayModeClear')
   use iso_c_binding
   implicit none
   type(c_ptr), value :: handle
end subroutine DecayModesDecayModeClear

!! Size
function DecayModesDecayModeSize(handle) &
      bind(C, name='DecayModesDecayModeSize')
   use iso_c_binding
   implicit none
   type(c_ptr), intent(in), value :: handle
   integer(c_size_t) :: DecayModesDecayModeSize
end function DecayModesDecayModeSize

!! Add
subroutine DecayModesDecayModeAdd(handle, fieldHandle) &
      bind(C, name='DecayModesDecayModeAdd')
   use iso_c_binding
   implicit none
   type(c_ptr), value :: handle
   type(c_ptr), intent(in), value :: fieldHandle
end subroutine DecayModesDecayModeAdd

!! Get, by index \in [0,size), const
function DecayModesDecayModeGetConst(handle, index) &
      bind(C, name='DecayModesDecayModeGetConst')
   use iso_c_binding
   implicit none
   type(c_ptr), intent(in), value :: handle
   integer(c_size_t), intent(in), value :: index
   type(c_ptr) :: DecayModesDecayModeGetConst
end function DecayModesDecayModeGetConst

!! Get, by index \in [0,size), non-const
function DecayModesDecayModeGet(handle, index) &
      bind(C, name='DecayModesDecayModeGet')
   use iso_c_binding
   implicit none
   type(c_ptr), value :: handle
   integer(c_size_t), intent(in), value :: index
   type(c_ptr) :: DecayModesDecayModeGet
end function DecayModesDecayModeGet

!! Set, by index \in [0,size)
subroutine DecayModesDecayModeSet(handle, index, fieldHandle) &
      bind(C, name='DecayModesDecayModeSet')
   use iso_c_binding
   implicit none
   type(c_ptr), value :: handle
   integer(c_size_t), intent(in), value :: index
   type(c_ptr), intent(in), value :: fieldHandle
end subroutine DecayModesDecayModeSet

!! ------------------------
!! Re: metadatum label
!! ------------------------

!! Has, by label
function DecayModesDecayModeHasByLabel(handle, meta, metaSize) &
      bind(C, name='DecayModesDecayModeHasByLabel')
   use iso_c_binding
   implicit none
   type(c_ptr), intent(in), value :: handle
   integer(c_size_t), intent(in), value :: metaSize
   character(c_char), intent(in) :: meta(metaSize)
   integer(c_int) :: DecayModesDecayModeHasByLabel
end function DecayModesDecayModeHasByLabel

!! Get, by label, const
function DecayModesDecayModeGetByLabelConst(handle, meta, metaSize) &
      bind(C, name='DecayModesDecayModeGetByLabelConst')
   use iso_c_binding
   implicit none
   type(c_ptr), intent(in), value :: handle
   integer(c_size_t), intent(in), value :: metaSize
   character(c_char), intent(in) :: meta(metaSize)
   type(c_ptr) :: DecayModesDecayModeGetByLabelConst
end function DecayModesDecayModeGetByLabelConst

!! Get, by label, non-const
function DecayModesDecayModeGetByLabel(handle, meta, metaSize) &
      bind(C, name='DecayModesDecayModeGetByLabel')
   use iso_c_binding
   implicit none
   type(c_ptr), value :: handle
   integer(c_size_t), intent(in), value :: metaSize
   character(c_char), intent(in) :: meta(metaSize)
   type(c_ptr) :: DecayModesDecayModeGetByLabel
end function DecayModesDecayModeGetByLabel

!! Set, by label
subroutine DecayModesDecayModeSetByLabel(handle, meta, metaSize, fieldHandle) &
      bind(C, name='DecayModesDecayModeSetByLabel')
   use iso_c_binding
   implicit none
   type(c_ptr), value :: handle
   integer(c_size_t), intent(in), value :: metaSize
   character(c_char), intent(in) :: meta(metaSize)
   type(c_ptr), intent(in), value :: fieldHandle
end subroutine DecayModesDecayModeSetByLabel

!! ------------------------
!! Re: metadatum mode
!! ------------------------

!! Has, by mode
function DecayModesDecayModeHasByMode(handle, meta, metaSize) &
      bind(C, name='DecayModesDecayModeHasByMode')
   use iso_c_binding
   implicit none
   type(c_ptr), intent(in), value :: handle
   integer(c_size_t), intent(in), value :: metaSize
   character(c_char), intent(in) :: meta(metaSize)
   integer(c_int) :: DecayModesDecayModeHasByMode
end function DecayModesDecayModeHasByMode

!! Get, by mode, const
function DecayModesDecayModeGetByModeConst(handle, meta, metaSize) &
      bind(C, name='DecayModesDecayModeGetByModeConst')
   use iso_c_binding
   implicit none
   type(c_ptr), intent(in), value :: handle
   integer(c_size_t), intent(in), value :: metaSize
   character(c_char), intent(in) :: meta(metaSize)
   type(c_ptr) :: DecayModesDecayModeGetByModeConst
end function DecayModesDecayModeGetByModeConst

!! Get, by mode, non-const
function DecayModesDecayModeGetByMode(handle, meta, metaSize) &
      bind(C, name='DecayModesDecayModeGetByMode')
   use iso_c_binding
   implicit none
   type(c_ptr), value :: handle
   integer(c_size_t), intent(in), value :: metaSize
   character(c_char), intent(in) :: meta(metaSize)
   type(c_ptr) :: DecayModesDecayModeGetByMode
end function DecayModesDecayModeGetByMode

!! Set, by mode
subroutine DecayModesDecayModeSetByMode(handle, meta, metaSize, fieldHandle) &
      bind(C, name='DecayModesDecayModeSetByMode')
   use iso_c_binding
   implicit none
   type(c_ptr), value :: handle
   integer(c_size_t), intent(in), value :: metaSize
   character(c_char), intent(in) :: meta(metaSize)
   type(c_ptr), intent(in), value :: fieldHandle
end subroutine DecayModesDecayModeSetByMode


!! -----------------------------------------------------------------------------
!! -----------------------------------------------------------------------------

end interface
end module generalDecayModes
