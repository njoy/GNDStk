
!! THIS FILE WAS AUTOGENERATED!
!! DO NOT MODIFY!

module generalDecayModes
use iso_c_binding
interface


!! -----------------------------------------------------------------------------
!! Basics
!! Create, Assign, Delete
!! -----------------------------------------------------------------------------

!! Create, default, const
function DecayModesDefaultConst() &
      bind(C, name='DecayModesDefaultConst') &
      result(handle)
   use iso_c_binding
   implicit none
   type(c_ptr) :: handle
end function DecayModesDefaultConst

!! Create, default
function DecayModesDefault() &
      bind(C, name='DecayModesDefault') &
      result(handle)
   use iso_c_binding
   implicit none
   type(c_ptr) :: handle
end function DecayModesDefault

!! Create, general, const
function DecayModesCreateConst( &
   decayMode, decayModeSize &
) &
      bind(C, name='DecayModesCreateConst') &
      result(handle)
   use iso_c_binding
   implicit none
   integer(c_size_t), value :: decayModeSize
   type(c_ptr) :: decayMode(decayModeSize)
   type(c_ptr) :: handle
end function DecayModesCreateConst

!! Create, general
function DecayModesCreate( &
   decayMode, decayModeSize &
) &
      bind(C, name='DecayModesCreate') &
      result(handle)
   use iso_c_binding
   implicit none
   integer(c_size_t), value :: decayModeSize
   type(c_ptr) :: decayMode(decayModeSize)
   type(c_ptr) :: handle
end function DecayModesCreate

!! Assign
subroutine DecayModesAssign(handleLHS, handleRHS) &
      bind(C, name='DecayModesAssign')
   use iso_c_binding
   implicit none
   type(c_ptr), value :: handleLHS, handleRHS
end subroutine DecayModesAssign

!! Delete
subroutine DecayModesDelete(handle) &
      bind(C, name='DecayModesDelete')
   use iso_c_binding
   implicit none
   type(c_ptr), value :: handle
end subroutine DecayModesDelete


!! -----------------------------------------------------------------------------
!! I/O
!! Read, Write, Print
!! Each returns 0 if failure, 1 if success.
!! -----------------------------------------------------------------------------

!! Read from file
function DecayModesRead(handle, filename, filenameSize) &
      bind(C, name='DecayModesRead') &
      result(success)
   use iso_c_binding
   implicit none
   type(c_ptr), value :: handle
   integer(c_size_t), value :: filenameSize
   character(c_char), intent(in) :: filename(filenameSize)
   integer(c_int) :: success
end function DecayModesRead

!! Write to file
function DecayModesWrite(handle, filename, filenameSize) &
      bind(C, name='DecayModesWrite') &
      result(success)
   use iso_c_binding
   implicit none
   type(c_ptr), intent(in), value :: handle
   integer(c_size_t), value :: filenameSize
   character(c_char), intent(in) :: filename(filenameSize)
   integer(c_int) :: success
end function DecayModesWrite

!! Print to standard output, in our prettyprinting format
function DecayModesPrint(handle) &
      bind(C, name='DecayModesPrint') &
      result(success)
   use iso_c_binding
   implicit none
   type(c_ptr), intent(in), value :: handle
   integer(c_int) :: success
end function DecayModesPrint

!! Print to standard output, as XML
function DecayModesPrintXML(handle) &
      bind(C, name='DecayModesPrintXML') &
      result(success)
   use iso_c_binding
   implicit none
   type(c_ptr), intent(in), value :: handle
   integer(c_int) :: success
end function DecayModesPrintXML

!! Print to standard output, as JSON
function DecayModesPrintJSON(handle) &
      bind(C, name='DecayModesPrintJSON') &
      result(success)
   use iso_c_binding
   implicit none
   type(c_ptr), intent(in), value :: handle
   integer(c_int) :: success
end function DecayModesPrintJSON


!! -----------------------------------------------------------------------------
!! Child: decayMode
!! -----------------------------------------------------------------------------

!! Has
function DecayModesDecayModeHas(handle) &
      bind(C, name='DecayModesDecayModeHas') &
      result(has)
   use iso_c_binding
   implicit none
   type(c_ptr), intent(in), value :: handle
   integer(c_int) :: has
end function DecayModesDecayModeHas

!! Clear
subroutine DecayModesDecayModeClear(handle) &
      bind(C, name='DecayModesDecayModeClear')
   use iso_c_binding
   implicit none
   type(c_ptr), value :: handle
end subroutine DecayModesDecayModeClear

!! Size
function DecayModesDecayModeSize(handle) &
      bind(C, name='DecayModesDecayModeSize') &
      result(vectorSize)
   use iso_c_binding
   implicit none
   type(c_ptr), intent(in), value :: handle
   integer(c_size_t) :: vectorSize
end function DecayModesDecayModeSize

!! Add
subroutine DecayModesDecayModeAdd(handle, fieldHandle) &
      bind(C, name='DecayModesDecayModeAdd')
   use iso_c_binding
   implicit none
   type(c_ptr), value :: handle
   type(c_ptr), intent(in), value :: fieldHandle
end subroutine DecayModesDecayModeAdd

!! Get, by index \in [0,size), const
function DecayModesDecayModeGetConst(handle, index) &
      bind(C, name='DecayModesDecayModeGetConst') &
      result(resultHandle)
   use iso_c_binding
   implicit none
   type(c_ptr), intent(in), value :: handle
   integer(c_size_t), intent(in), value :: index
   type(c_ptr) :: resultHandle
end function DecayModesDecayModeGetConst

!! Get, by index \in [0,size)
function DecayModesDecayModeGet(handle, index) &
      bind(C, name='DecayModesDecayModeGet') &
      result(resultHandle)
   use iso_c_binding
   implicit none
   type(c_ptr), value :: handle
   integer(c_size_t), intent(in), value :: index
   type(c_ptr) :: resultHandle
end function DecayModesDecayModeGet

!! Set, by index \in [0,size)
subroutine DecayModesDecayModeSet(handle, index, fieldHandle) &
      bind(C, name='DecayModesDecayModeSet')
   use iso_c_binding
   implicit none
   type(c_ptr), value :: handle
   integer(c_size_t), intent(in), value :: index
   type(c_ptr), intent(in), value :: fieldHandle
end subroutine DecayModesDecayModeSet

!! ------------------------
!! Re: metadatum label
!! ------------------------

!! Has, by label
function DecayModesDecayModeHasByLabel(handle, meta, metaSize) &
      bind(C, name='DecayModesDecayModeHasByLabel') &
      result(has)
   use iso_c_binding
   implicit none
   type(c_ptr), intent(in), value :: handle
   integer(c_size_t), intent(in), value :: metaSize
   character(c_char), intent(in) :: meta(metaSize)
   integer(c_int) :: has
end function DecayModesDecayModeHasByLabel

!! Get, by label, const
function DecayModesDecayModeGetByLabelConst(handle, meta, metaSize) &
      bind(C, name='DecayModesDecayModeGetByLabelConst') &
      result(resultHandle)
   use iso_c_binding
   implicit none
   type(c_ptr), intent(in), value :: handle
   integer(c_size_t), intent(in), value :: metaSize
   character(c_char), intent(in) :: meta(metaSize)
   type(c_ptr) :: resultHandle
end function DecayModesDecayModeGetByLabelConst

!! Get, by label
function DecayModesDecayModeGetByLabel(handle, meta, metaSize) &
      bind(C, name='DecayModesDecayModeGetByLabel') &
      result(resultHandle)
   use iso_c_binding
   implicit none
   type(c_ptr), value :: handle
   integer(c_size_t), intent(in), value :: metaSize
   character(c_char), intent(in) :: meta(metaSize)
   type(c_ptr) :: resultHandle
end function DecayModesDecayModeGetByLabel

!! Set, by label
subroutine DecayModesDecayModeSetByLabel(handle, meta, metaSize, fieldHandle) &
      bind(C, name='DecayModesDecayModeSetByLabel')
   use iso_c_binding
   implicit none
   type(c_ptr), intent(in), value :: handle
   integer(c_size_t), intent(in), value :: metaSize
   character(c_char), intent(in) :: meta(metaSize)
   type(c_ptr), intent(in), value :: fieldHandle
end subroutine DecayModesDecayModeSetByLabel

!! ------------------------
!! Re: metadatum mode
!! ------------------------

!! Has, by mode
function DecayModesDecayModeHasByMode(handle, meta, metaSize) &
      bind(C, name='DecayModesDecayModeHasByMode') &
      result(has)
   use iso_c_binding
   implicit none
   type(c_ptr), intent(in), value :: handle
   integer(c_size_t), intent(in), value :: metaSize
   character(c_char), intent(in) :: meta(metaSize)
   integer(c_int) :: has
end function DecayModesDecayModeHasByMode

!! Get, by mode, const
function DecayModesDecayModeGetByModeConst(handle, meta, metaSize) &
      bind(C, name='DecayModesDecayModeGetByModeConst') &
      result(resultHandle)
   use iso_c_binding
   implicit none
   type(c_ptr), intent(in), value :: handle
   integer(c_size_t), intent(in), value :: metaSize
   character(c_char), intent(in) :: meta(metaSize)
   type(c_ptr) :: resultHandle
end function DecayModesDecayModeGetByModeConst

!! Get, by mode
function DecayModesDecayModeGetByMode(handle, meta, metaSize) &
      bind(C, name='DecayModesDecayModeGetByMode') &
      result(resultHandle)
   use iso_c_binding
   implicit none
   type(c_ptr), value :: handle
   integer(c_size_t), intent(in), value :: metaSize
   character(c_char), intent(in) :: meta(metaSize)
   type(c_ptr) :: resultHandle
end function DecayModesDecayModeGetByMode

!! Set, by mode
subroutine DecayModesDecayModeSetByMode(handle, meta, metaSize, fieldHandle) &
      bind(C, name='DecayModesDecayModeSetByMode')
   use iso_c_binding
   implicit none
   type(c_ptr), intent(in), value :: handle
   integer(c_size_t), intent(in), value :: metaSize
   character(c_char), intent(in) :: meta(metaSize)
   type(c_ptr), intent(in), value :: fieldHandle
end subroutine DecayModesDecayModeSetByMode


!! -----------------------------------------------------------------------------
!! -----------------------------------------------------------------------------

end interface
end module generalDecayModes
