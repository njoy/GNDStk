
!! THIS FILE WAS AUTOGENERATED!
!! DO NOT MODIFY!

module generalInternalConversionCoefficients
use iso_c_binding
interface


!! -----------------------------------------------------------------------------
!! Basics
!! Create, Assign, Delete
!! -----------------------------------------------------------------------------

!! Create, default, const
function InternalConversionCoefficientsDefaultConst() &
      bind(C, name='InternalConversionCoefficientsDefaultConst') &
      result(handle)
   use iso_c_binding
   implicit none
   type(c_ptr) :: handle
end function InternalConversionCoefficientsDefaultConst

!! Create, default
function InternalConversionCoefficientsDefault() &
      bind(C, name='InternalConversionCoefficientsDefault') &
      result(handle)
   use iso_c_binding
   implicit none
   type(c_ptr) :: handle
end function InternalConversionCoefficientsDefault

!! Create, general, const
function InternalConversionCoefficientsCreateConst( &
   shell, shellSize &
) &
      bind(C, name='InternalConversionCoefficientsCreateConst') &
      result(handle)
   use iso_c_binding
   implicit none
   integer(c_size_t), value :: shellSize
   type(c_ptr) :: shell(shellSize)
   type(c_ptr) :: handle
end function InternalConversionCoefficientsCreateConst

!! Create, general
function InternalConversionCoefficientsCreate( &
   shell, shellSize &
) &
      bind(C, name='InternalConversionCoefficientsCreate') &
      result(handle)
   use iso_c_binding
   implicit none
   integer(c_size_t), value :: shellSize
   type(c_ptr) :: shell(shellSize)
   type(c_ptr) :: handle
end function InternalConversionCoefficientsCreate

!! Assign
subroutine InternalConversionCoefficientsAssign(handleLHS, handleRHS) &
      bind(C, name='InternalConversionCoefficientsAssign')
   use iso_c_binding
   implicit none
   type(c_ptr), value :: handleLHS, handleRHS
end subroutine InternalConversionCoefficientsAssign

!! Delete
subroutine InternalConversionCoefficientsDelete(handle) &
      bind(C, name='InternalConversionCoefficientsDelete')
   use iso_c_binding
   implicit none
   type(c_ptr), value :: handle
end subroutine InternalConversionCoefficientsDelete


!! -----------------------------------------------------------------------------
!! I/O
!! Read, Write, Print
!! Each returns 0 if failure, 1 if success.
!! -----------------------------------------------------------------------------

!! Read from file
function InternalConversionCoefficientsRead(handle, filename, filenameSize) &
      bind(C, name='InternalConversionCoefficientsRead') &
      result(success)
   use iso_c_binding
   implicit none
   type(c_ptr), value :: handle
   integer(c_size_t), value :: filenameSize
   character(c_char), intent(in) :: filename(filenameSize)
   integer(c_int) :: success
end function InternalConversionCoefficientsRead

!! Write to file
function InternalConversionCoefficientsWrite(handle, filename, filenameSize) &
      bind(C, name='InternalConversionCoefficientsWrite') &
      result(success)
   use iso_c_binding
   implicit none
   type(c_ptr), intent(in), value :: handle
   integer(c_size_t), value :: filenameSize
   character(c_char), intent(in) :: filename(filenameSize)
   integer(c_int) :: success
end function InternalConversionCoefficientsWrite

!! Print to standard output, in our prettyprinting format
function InternalConversionCoefficientsPrint(handle) &
      bind(C, name='InternalConversionCoefficientsPrint') &
      result(success)
   use iso_c_binding
   implicit none
   type(c_ptr), intent(in), value :: handle
   integer(c_int) :: success
end function InternalConversionCoefficientsPrint

!! Print to standard output, as XML
function InternalConversionCoefficientsPrintXML(handle) &
      bind(C, name='InternalConversionCoefficientsPrintXML') &
      result(success)
   use iso_c_binding
   implicit none
   type(c_ptr), intent(in), value :: handle
   integer(c_int) :: success
end function InternalConversionCoefficientsPrintXML

!! Print to standard output, as JSON
function InternalConversionCoefficientsPrintJSON(handle) &
      bind(C, name='InternalConversionCoefficientsPrintJSON') &
      result(success)
   use iso_c_binding
   implicit none
   type(c_ptr), intent(in), value :: handle
   integer(c_int) :: success
end function InternalConversionCoefficientsPrintJSON


!! -----------------------------------------------------------------------------
!! Child: shell
!! -----------------------------------------------------------------------------

!! Has
function InternalConversionCoefficientsShellHas(handle) &
      bind(C, name='InternalConversionCoefficientsShellHas') &
      result(has)
   use iso_c_binding
   implicit none
   type(c_ptr), intent(in), value :: handle
   integer(c_int) :: has
end function InternalConversionCoefficientsShellHas

!! Clear
subroutine InternalConversionCoefficientsShellClear(handle) &
      bind(C, name='InternalConversionCoefficientsShellClear')
   use iso_c_binding
   implicit none
   type(c_ptr), value :: handle
end subroutine InternalConversionCoefficientsShellClear

!! Size
function InternalConversionCoefficientsShellSize(handle) &
      bind(C, name='InternalConversionCoefficientsShellSize') &
      result(vectorSize)
   use iso_c_binding
   implicit none
   type(c_ptr), intent(in), value :: handle
   integer(c_size_t) :: vectorSize
end function InternalConversionCoefficientsShellSize

!! Add
subroutine InternalConversionCoefficientsShellAdd(handle, fieldHandle) &
      bind(C, name='InternalConversionCoefficientsShellAdd')
   use iso_c_binding
   implicit none
   type(c_ptr), value :: handle
   type(c_ptr), intent(in), value :: fieldHandle
end subroutine InternalConversionCoefficientsShellAdd

!! Get, by index \in [0,size), const
function InternalConversionCoefficientsShellGetConst(handle, index) &
      bind(C, name='InternalConversionCoefficientsShellGetConst') &
      result(resultHandle)
   use iso_c_binding
   implicit none
   type(c_ptr), intent(in), value :: handle
   integer(c_size_t), intent(in), value :: index
   type(c_ptr) :: resultHandle
end function InternalConversionCoefficientsShellGetConst

!! Get, by index \in [0,size)
function InternalConversionCoefficientsShellGet(handle, index) &
      bind(C, name='InternalConversionCoefficientsShellGet') &
      result(resultHandle)
   use iso_c_binding
   implicit none
   type(c_ptr), value :: handle
   integer(c_size_t), intent(in), value :: index
   type(c_ptr) :: resultHandle
end function InternalConversionCoefficientsShellGet

!! Set, by index \in [0,size)
subroutine InternalConversionCoefficientsShellSet(handle, index, fieldHandle) &
      bind(C, name='InternalConversionCoefficientsShellSet')
   use iso_c_binding
   implicit none
   type(c_ptr), value :: handle
   integer(c_size_t), intent(in), value :: index
   type(c_ptr), intent(in), value :: fieldHandle
end subroutine InternalConversionCoefficientsShellSet

!! ------------------------
!! Re: metadatum label
!! ------------------------

!! Has, by label
function InternalConversionCoefficientsShellHasByLabel(handle, meta, metaSize) &
      bind(C, name='InternalConversionCoefficientsShellHasByLabel') &
      result(has)
   use iso_c_binding
   implicit none
   type(c_ptr), intent(in), value :: handle
   integer(c_size_t), intent(in), value :: metaSize
   character(c_char), intent(in) :: meta(metaSize)
   integer(c_int) :: has
end function InternalConversionCoefficientsShellHasByLabel

!! Get, by label, const
function InternalConversionCoefficientsShellGetByLabelConst(handle, meta, metaSize) &
      bind(C, name='InternalConversionCoefficientsShellGetByLabelConst') &
      result(resultHandle)
   use iso_c_binding
   implicit none
   type(c_ptr), intent(in), value :: handle
   integer(c_size_t), intent(in), value :: metaSize
   character(c_char), intent(in) :: meta(metaSize)
   type(c_ptr) :: resultHandle
end function InternalConversionCoefficientsShellGetByLabelConst

!! Get, by label
function InternalConversionCoefficientsShellGetByLabel(handle, meta, metaSize) &
      bind(C, name='InternalConversionCoefficientsShellGetByLabel') &
      result(resultHandle)
   use iso_c_binding
   implicit none
   type(c_ptr), value :: handle
   integer(c_size_t), intent(in), value :: metaSize
   character(c_char), intent(in) :: meta(metaSize)
   type(c_ptr) :: resultHandle
end function InternalConversionCoefficientsShellGetByLabel

!! Set, by label
subroutine InternalConversionCoefficientsShellSetByLabel(handle, meta, metaSize, fieldHandle) &
      bind(C, name='InternalConversionCoefficientsShellSetByLabel')
   use iso_c_binding
   implicit none
   type(c_ptr), intent(in), value :: handle
   integer(c_size_t), intent(in), value :: metaSize
   character(c_char), intent(in) :: meta(metaSize)
   type(c_ptr), intent(in), value :: fieldHandle
end subroutine InternalConversionCoefficientsShellSetByLabel

!! ------------------------
!! Re: metadatum value
!! ------------------------

!! Has, by value
function InternalConversionCoefficientsShellHasByValue(handle, meta) &
      bind(C, name='InternalConversionCoefficientsShellHasByValue') &
      result(has)
   use iso_c_binding
   implicit none
   type(c_ptr), intent(in), value :: handle
   real(c_double), value, intent(in) :: meta
   integer(c_int) :: has
end function InternalConversionCoefficientsShellHasByValue

!! Get, by value, const
function InternalConversionCoefficientsShellGetByValueConst(handle, meta) &
      bind(C, name='InternalConversionCoefficientsShellGetByValueConst') &
      result(resultHandle)
   use iso_c_binding
   implicit none
   type(c_ptr), intent(in), value :: handle
   real(c_double), value, intent(in) :: meta
   type(c_ptr) :: resultHandle
end function InternalConversionCoefficientsShellGetByValueConst

!! Get, by value
function InternalConversionCoefficientsShellGetByValue(handle, meta) &
      bind(C, name='InternalConversionCoefficientsShellGetByValue') &
      result(resultHandle)
   use iso_c_binding
   implicit none
   type(c_ptr), value :: handle
   real(c_double), value, intent(in) :: meta
   type(c_ptr) :: resultHandle
end function InternalConversionCoefficientsShellGetByValue

!! Set, by value
subroutine InternalConversionCoefficientsShellSetByValue(handle, meta, fieldHandle) &
      bind(C, name='InternalConversionCoefficientsShellSetByValue')
   use iso_c_binding
   implicit none
   type(c_ptr), intent(in), value :: handle
   real(c_double), value, intent(in) :: meta
   type(c_ptr), intent(in), value :: fieldHandle
end subroutine InternalConversionCoefficientsShellSetByValue


!! -----------------------------------------------------------------------------
!! -----------------------------------------------------------------------------

end interface
end module generalInternalConversionCoefficients
