
!! THIS FILE WAS AUTOGENERATED!
!! DO NOT MODIFY!

module generalParameterCovarianceMatrix
use iso_c_binding
interface


!! -----------------------------------------------------------------------------
!! Basics
!! Create, Assign, Delete
!! -----------------------------------------------------------------------------

!! Create, default, const
function ParameterCovarianceMatrixDefaultConst() &
      bind(C, name='ParameterCovarianceMatrixDefaultConst')
   use iso_c_binding
   implicit none
   type(c_ptr) :: ParameterCovarianceMatrixDefaultConst
end function ParameterCovarianceMatrixDefaultConst

!! Create, default, non-const
function ParameterCovarianceMatrixDefault() &
      bind(C, name='ParameterCovarianceMatrixDefault')
   use iso_c_binding
   implicit none
   type(c_ptr) :: ParameterCovarianceMatrixDefault
end function ParameterCovarianceMatrixDefault

!! Create, general, const
function ParameterCovarianceMatrixCreateConst( &
   label, &
   type1, &
   array, &
   parameters, &
   labelSize, &
   type1Size &
) &
      bind(C, name='ParameterCovarianceMatrixCreateConst')
   use iso_c_binding
   implicit none
   integer(c_size_t), intent(in), value :: labelSize
   character(c_char), intent(in) :: label(labelSize)
   integer(c_size_t), intent(in), value :: type1Size
   character(c_char), intent(in) :: type1(type1Size)
   type(c_ptr), intent(in), value :: array
   type(c_ptr), intent(in), value :: parameters
   type(c_ptr) :: ParameterCovarianceMatrixCreateConst
end function ParameterCovarianceMatrixCreateConst

!! Create, general, non-const
function ParameterCovarianceMatrixCreate( &
   label, &
   type1, &
   array, &
   parameters, &
   labelSize, &
   type1Size &
) &
      bind(C, name='ParameterCovarianceMatrixCreate')
   use iso_c_binding
   implicit none
   integer(c_size_t), intent(in), value :: labelSize
   character(c_char), intent(in) :: label(labelSize)
   integer(c_size_t), intent(in), value :: type1Size
   character(c_char), intent(in) :: type1(type1Size)
   type(c_ptr), intent(in), value :: array
   type(c_ptr), intent(in), value :: parameters
   type(c_ptr) :: ParameterCovarianceMatrixCreate
end function ParameterCovarianceMatrixCreate

!! Assign
subroutine ParameterCovarianceMatrixAssign(handleLHS, handleRHS) &
      bind(C, name='ParameterCovarianceMatrixAssign')
   use iso_c_binding
   implicit none
   type(c_ptr), value :: handleLHS
   type(c_ptr), intent(in), value :: handleRHS
end subroutine ParameterCovarianceMatrixAssign

!! Delete
subroutine ParameterCovarianceMatrixDelete(handle) &
      bind(C, name='ParameterCovarianceMatrixDelete')
   use iso_c_binding
   implicit none
   type(c_ptr), value :: handle
end subroutine ParameterCovarianceMatrixDelete


!! -----------------------------------------------------------------------------
!! I/O
!! Read, Write, Print
!! Each returns 0 if failure, 1 if success.
!! -----------------------------------------------------------------------------

!! Read from file
!! File can be XML, JSON, or HDF5.
!! We'll examine the file's contents to determine its type automatically.
function ParameterCovarianceMatrixRead(handle, filename, filenameSize) &
      bind(C, name='ParameterCovarianceMatrixRead')
   use iso_c_binding
   implicit none
   type(c_ptr), value :: handle
   integer(c_size_t), intent(in), value :: filenameSize
   character(c_char), intent(in) :: filename(filenameSize)
   integer(c_int) :: ParameterCovarianceMatrixRead
end function ParameterCovarianceMatrixRead

!! Write to file
!! File can be XML, JSON, or HDF5.
!! We'll use filename's extension to determine the type you want written.
function ParameterCovarianceMatrixWrite(handle, filename, filenameSize) &
      bind(C, name='ParameterCovarianceMatrixWrite')
   use iso_c_binding
   implicit none
   type(c_ptr), intent(in), value :: handle
   integer(c_size_t), intent(in), value :: filenameSize
   character(c_char), intent(in) :: filename(filenameSize)
   integer(c_int) :: ParameterCovarianceMatrixWrite
end function ParameterCovarianceMatrixWrite

!! Print to standard output, in our prettyprinting format
function ParameterCovarianceMatrixPrint(handle) &
      bind(C, name='ParameterCovarianceMatrixPrint')
   use iso_c_binding
   implicit none
   type(c_ptr), intent(in), value :: handle
   integer(c_int) :: ParameterCovarianceMatrixPrint
end function ParameterCovarianceMatrixPrint

!! Print to standard output, as XML
function ParameterCovarianceMatrixPrintXML(handle) &
      bind(C, name='ParameterCovarianceMatrixPrintXML')
   use iso_c_binding
   implicit none
   type(c_ptr), intent(in), value :: handle
   integer(c_int) :: ParameterCovarianceMatrixPrintXML
end function ParameterCovarianceMatrixPrintXML

!! Print to standard output, as JSON
function ParameterCovarianceMatrixPrintJSON(handle) &
      bind(C, name='ParameterCovarianceMatrixPrintJSON')
   use iso_c_binding
   implicit none
   type(c_ptr), intent(in), value :: handle
   integer(c_int) :: ParameterCovarianceMatrixPrintJSON
end function ParameterCovarianceMatrixPrintJSON


!! -----------------------------------------------------------------------------
!! Metadatum: label
!! -----------------------------------------------------------------------------

!! Has
function ParameterCovarianceMatrixLabelHas(handle) &
      bind(C, name='ParameterCovarianceMatrixLabelHas')
   use iso_c_binding
   implicit none
   type(c_ptr), intent(in), value :: handle
   integer(c_int) :: ParameterCovarianceMatrixLabelHas
end function ParameterCovarianceMatrixLabelHas

!! Get
function ParameterCovarianceMatrixLabelGet(handle) &
      bind(C, name='ParameterCovarianceMatrixLabelGet')
   use iso_c_binding
   implicit none
   type(c_ptr), intent(in), value :: handle
   type(c_ptr) :: ParameterCovarianceMatrixLabelGet
end function ParameterCovarianceMatrixLabelGet

!! Set
subroutine ParameterCovarianceMatrixLabelSet(handle, label, labelSize) &
      bind(C, name='ParameterCovarianceMatrixLabelSet')
   use iso_c_binding
   implicit none
   type(c_ptr), value :: handle
   integer(c_size_t), intent(in), value :: labelSize
   character(c_char), intent(in) :: label(labelSize)
end subroutine ParameterCovarianceMatrixLabelSet


!! -----------------------------------------------------------------------------
!! Metadatum: type
!! -----------------------------------------------------------------------------

!! Has
function ParameterCovarianceMatrixTypeHas(handle) &
      bind(C, name='ParameterCovarianceMatrixTypeHas')
   use iso_c_binding
   implicit none
   type(c_ptr), intent(in), value :: handle
   integer(c_int) :: ParameterCovarianceMatrixTypeHas
end function ParameterCovarianceMatrixTypeHas

!! Get
function ParameterCovarianceMatrixTypeGet(handle) &
      bind(C, name='ParameterCovarianceMatrixTypeGet')
   use iso_c_binding
   implicit none
   type(c_ptr), intent(in), value :: handle
   type(c_ptr) :: ParameterCovarianceMatrixTypeGet
end function ParameterCovarianceMatrixTypeGet

!! Set
subroutine ParameterCovarianceMatrixTypeSet(handle, type1, type1Size) &
      bind(C, name='ParameterCovarianceMatrixTypeSet')
   use iso_c_binding
   implicit none
   type(c_ptr), value :: handle
   integer(c_size_t), intent(in), value :: type1Size
   character(c_char), intent(in) :: type1(type1Size)
end subroutine ParameterCovarianceMatrixTypeSet


!! -----------------------------------------------------------------------------
!! Child: array
!! -----------------------------------------------------------------------------

!! Has
function ParameterCovarianceMatrixArrayHas(handle) &
      bind(C, name='ParameterCovarianceMatrixArrayHas')
   use iso_c_binding
   implicit none
   type(c_ptr), intent(in), value :: handle
   integer(c_int) :: ParameterCovarianceMatrixArrayHas
end function ParameterCovarianceMatrixArrayHas

!! Get, const
function ParameterCovarianceMatrixArrayGetConst(handle) &
      bind(C, name='ParameterCovarianceMatrixArrayGetConst')
   use iso_c_binding
   implicit none
   type(c_ptr), intent(in), value :: handle
   type(c_ptr) :: ParameterCovarianceMatrixArrayGetConst
end function ParameterCovarianceMatrixArrayGetConst

!! Get, non-const
function ParameterCovarianceMatrixArrayGet(handle) &
      bind(C, name='ParameterCovarianceMatrixArrayGet')
   use iso_c_binding
   implicit none
   type(c_ptr), value :: handle
   type(c_ptr) :: ParameterCovarianceMatrixArrayGet
end function ParameterCovarianceMatrixArrayGet

!! Set
subroutine ParameterCovarianceMatrixArraySet(handle, fieldHandle) &
      bind(C, name='ParameterCovarianceMatrixArraySet')
   use iso_c_binding
   implicit none
   type(c_ptr), value :: handle
   type(c_ptr), intent(in), value :: fieldHandle
end subroutine ParameterCovarianceMatrixArraySet


!! -----------------------------------------------------------------------------
!! Child: parameters
!! -----------------------------------------------------------------------------

!! Has
function ParameterCovarianceMatrixParametersHas(handle) &
      bind(C, name='ParameterCovarianceMatrixParametersHas')
   use iso_c_binding
   implicit none
   type(c_ptr), intent(in), value :: handle
   integer(c_int) :: ParameterCovarianceMatrixParametersHas
end function ParameterCovarianceMatrixParametersHas

!! Get, const
function ParameterCovarianceMatrixParametersGetConst(handle) &
      bind(C, name='ParameterCovarianceMatrixParametersGetConst')
   use iso_c_binding
   implicit none
   type(c_ptr), intent(in), value :: handle
   type(c_ptr) :: ParameterCovarianceMatrixParametersGetConst
end function ParameterCovarianceMatrixParametersGetConst

!! Get, non-const
function ParameterCovarianceMatrixParametersGet(handle) &
      bind(C, name='ParameterCovarianceMatrixParametersGet')
   use iso_c_binding
   implicit none
   type(c_ptr), value :: handle
   type(c_ptr) :: ParameterCovarianceMatrixParametersGet
end function ParameterCovarianceMatrixParametersGet

!! Set
subroutine ParameterCovarianceMatrixParametersSet(handle, fieldHandle) &
      bind(C, name='ParameterCovarianceMatrixParametersSet')
   use iso_c_binding
   implicit none
   type(c_ptr), value :: handle
   type(c_ptr), intent(in), value :: fieldHandle
end subroutine ParameterCovarianceMatrixParametersSet


!! -----------------------------------------------------------------------------
!! -----------------------------------------------------------------------------

end interface
end module generalParameterCovarianceMatrix
