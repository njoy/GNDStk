
!! THIS FILE WAS AUTOGENERATED!
!! DO NOT MODIFY!

module generalGeneralEvaporation
use iso_c_binding
interface


!! -----------------------------------------------------------------------------
!! Basics
!! Create, Assign, Delete
!! -----------------------------------------------------------------------------

!! Create, default, const
function GeneralEvaporationDefaultConst() &
      bind(C, name='GeneralEvaporationDefaultConst')
   use iso_c_binding
   implicit none
   type(c_ptr) :: GeneralEvaporationDefaultConst
end function GeneralEvaporationDefaultConst

!! Create, default, non-const
function GeneralEvaporationDefault() &
      bind(C, name='GeneralEvaporationDefault')
   use iso_c_binding
   implicit none
   type(c_ptr) :: GeneralEvaporationDefault
end function GeneralEvaporationDefault

!! Create, general, const
function GeneralEvaporationCreateConst( &
   U, &
   theta, &
   g &
) &
      bind(C, name='GeneralEvaporationCreateConst')
   use iso_c_binding
   implicit none
   type(c_ptr), intent(in), value :: U
   type(c_ptr), intent(in), value :: theta
   type(c_ptr), intent(in), value :: g
   type(c_ptr) :: GeneralEvaporationCreateConst
end function GeneralEvaporationCreateConst

!! Create, general, non-const
function GeneralEvaporationCreate( &
   U, &
   theta, &
   g &
) &
      bind(C, name='GeneralEvaporationCreate')
   use iso_c_binding
   implicit none
   type(c_ptr), intent(in), value :: U
   type(c_ptr), intent(in), value :: theta
   type(c_ptr), intent(in), value :: g
   type(c_ptr) :: GeneralEvaporationCreate
end function GeneralEvaporationCreate

!! Assign
subroutine GeneralEvaporationAssign(handleLHS, handleRHS) &
      bind(C, name='GeneralEvaporationAssign')
   use iso_c_binding
   implicit none
   type(c_ptr), value :: handleLHS
   type(c_ptr), intent(in), value :: handleRHS
end subroutine GeneralEvaporationAssign

!! Delete
subroutine GeneralEvaporationDelete(handle) &
      bind(C, name='GeneralEvaporationDelete')
   use iso_c_binding
   implicit none
   type(c_ptr), value :: handle
end subroutine GeneralEvaporationDelete


!! -----------------------------------------------------------------------------
!! I/O
!! Read, Write, Print
!! Each returns 0 if failure, 1 if success.
!! -----------------------------------------------------------------------------

!! Read from file
!! File can be XML, JSON, or HDF5.
!! We'll examine the file's contents to determine its type automatically.
function GeneralEvaporationRead(handle, filename, filenameSize) &
      bind(C, name='GeneralEvaporationRead')
   use iso_c_binding
   implicit none
   type(c_ptr), value :: handle
   integer(c_size_t), intent(in), value :: filenameSize
   character(c_char), intent(in) :: filename(filenameSize)
   integer(c_int) :: GeneralEvaporationRead
end function GeneralEvaporationRead

!! Write to file
!! File can be XML, JSON, or HDF5.
!! We'll use filename's extension to determine the type you want written.
function GeneralEvaporationWrite(handle, filename, filenameSize) &
      bind(C, name='GeneralEvaporationWrite')
   use iso_c_binding
   implicit none
   type(c_ptr), intent(in), value :: handle
   integer(c_size_t), intent(in), value :: filenameSize
   character(c_char), intent(in) :: filename(filenameSize)
   integer(c_int) :: GeneralEvaporationWrite
end function GeneralEvaporationWrite

!! Print to standard output, in our prettyprinting format
function GeneralEvaporationPrint(handle) &
      bind(C, name='GeneralEvaporationPrint')
   use iso_c_binding
   implicit none
   type(c_ptr), intent(in), value :: handle
   integer(c_int) :: GeneralEvaporationPrint
end function GeneralEvaporationPrint

!! Print to standard output, as XML
function GeneralEvaporationPrintXML(handle) &
      bind(C, name='GeneralEvaporationPrintXML')
   use iso_c_binding
   implicit none
   type(c_ptr), intent(in), value :: handle
   integer(c_int) :: GeneralEvaporationPrintXML
end function GeneralEvaporationPrintXML

!! Print to standard output, as JSON
function GeneralEvaporationPrintJSON(handle) &
      bind(C, name='GeneralEvaporationPrintJSON')
   use iso_c_binding
   implicit none
   type(c_ptr), intent(in), value :: handle
   integer(c_int) :: GeneralEvaporationPrintJSON
end function GeneralEvaporationPrintJSON


!! -----------------------------------------------------------------------------
!! Child: U
!! -----------------------------------------------------------------------------

!! Has
function GeneralEvaporationUHas(handle) &
      bind(C, name='GeneralEvaporationUHas')
   use iso_c_binding
   implicit none
   type(c_ptr), intent(in), value :: handle
   integer(c_int) :: GeneralEvaporationUHas
end function GeneralEvaporationUHas

!! Get, const
function GeneralEvaporationUGetConst(handle) &
      bind(C, name='GeneralEvaporationUGetConst')
   use iso_c_binding
   implicit none
   type(c_ptr), intent(in), value :: handle
   type(c_ptr) :: GeneralEvaporationUGetConst
end function GeneralEvaporationUGetConst

!! Get, non-const
function GeneralEvaporationUGet(handle) &
      bind(C, name='GeneralEvaporationUGet')
   use iso_c_binding
   implicit none
   type(c_ptr), value :: handle
   type(c_ptr) :: GeneralEvaporationUGet
end function GeneralEvaporationUGet

!! Set
subroutine GeneralEvaporationUSet(handle, fieldHandle) &
      bind(C, name='GeneralEvaporationUSet')
   use iso_c_binding
   implicit none
   type(c_ptr), value :: handle
   type(c_ptr), intent(in), value :: fieldHandle
end subroutine GeneralEvaporationUSet


!! -----------------------------------------------------------------------------
!! Child: theta
!! -----------------------------------------------------------------------------

!! Has
function GeneralEvaporationThetaHas(handle) &
      bind(C, name='GeneralEvaporationThetaHas')
   use iso_c_binding
   implicit none
   type(c_ptr), intent(in), value :: handle
   integer(c_int) :: GeneralEvaporationThetaHas
end function GeneralEvaporationThetaHas

!! Get, const
function GeneralEvaporationThetaGetConst(handle) &
      bind(C, name='GeneralEvaporationThetaGetConst')
   use iso_c_binding
   implicit none
   type(c_ptr), intent(in), value :: handle
   type(c_ptr) :: GeneralEvaporationThetaGetConst
end function GeneralEvaporationThetaGetConst

!! Get, non-const
function GeneralEvaporationThetaGet(handle) &
      bind(C, name='GeneralEvaporationThetaGet')
   use iso_c_binding
   implicit none
   type(c_ptr), value :: handle
   type(c_ptr) :: GeneralEvaporationThetaGet
end function GeneralEvaporationThetaGet

!! Set
subroutine GeneralEvaporationThetaSet(handle, fieldHandle) &
      bind(C, name='GeneralEvaporationThetaSet')
   use iso_c_binding
   implicit none
   type(c_ptr), value :: handle
   type(c_ptr), intent(in), value :: fieldHandle
end subroutine GeneralEvaporationThetaSet


!! -----------------------------------------------------------------------------
!! Child: g
!! -----------------------------------------------------------------------------

!! Has
function GeneralEvaporationGHas(handle) &
      bind(C, name='GeneralEvaporationGHas')
   use iso_c_binding
   implicit none
   type(c_ptr), intent(in), value :: handle
   integer(c_int) :: GeneralEvaporationGHas
end function GeneralEvaporationGHas

!! Get, const
function GeneralEvaporationGGetConst(handle) &
      bind(C, name='GeneralEvaporationGGetConst')
   use iso_c_binding
   implicit none
   type(c_ptr), intent(in), value :: handle
   type(c_ptr) :: GeneralEvaporationGGetConst
end function GeneralEvaporationGGetConst

!! Get, non-const
function GeneralEvaporationGGet(handle) &
      bind(C, name='GeneralEvaporationGGet')
   use iso_c_binding
   implicit none
   type(c_ptr), value :: handle
   type(c_ptr) :: GeneralEvaporationGGet
end function GeneralEvaporationGGet

!! Set
subroutine GeneralEvaporationGSet(handle, fieldHandle) &
      bind(C, name='GeneralEvaporationGSet')
   use iso_c_binding
   implicit none
   type(c_ptr), value :: handle
   type(c_ptr), intent(in), value :: fieldHandle
end subroutine GeneralEvaporationGSet


!! -----------------------------------------------------------------------------
!! -----------------------------------------------------------------------------

end interface
end module generalGeneralEvaporation
