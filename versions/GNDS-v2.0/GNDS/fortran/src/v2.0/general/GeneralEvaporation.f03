
!! THIS FILE WAS AUTOGENERATED!
!! DO NOT MODIFY!

module generalGeneralEvaporation
use iso_c_binding
interface


!! -----------------------------------------------------------------------------
!! Basics
!! Create, Assign, Delete
!! -----------------------------------------------------------------------------

!! Create, default, const
function GeneralEvaporationDefaultConst() &
      bind(C, name='GeneralEvaporationDefaultConst') &
      result(handle)
   use iso_c_binding
   implicit none
   type(c_ptr) :: handle
end function GeneralEvaporationDefaultConst

!! Create, default
function GeneralEvaporationDefault() &
      bind(C, name='GeneralEvaporationDefault') &
      result(handle)
   use iso_c_binding
   implicit none
   type(c_ptr) :: handle
end function GeneralEvaporationDefault

!! Create, general, const
function GeneralEvaporationCreateConst( &
   U, &
   theta, &
   g &
) &
      bind(C, name='GeneralEvaporationCreateConst') &
      result(handle)
   use iso_c_binding
   implicit none
   type(c_ptr), value :: U
   type(c_ptr), value :: theta
   type(c_ptr), value :: g
   type(c_ptr) :: handle
end function GeneralEvaporationCreateConst

!! Create, general
function GeneralEvaporationCreate( &
   U, &
   theta, &
   g &
) &
      bind(C, name='GeneralEvaporationCreate') &
      result(handle)
   use iso_c_binding
   implicit none
   type(c_ptr), value :: U
   type(c_ptr), value :: theta
   type(c_ptr), value :: g
   type(c_ptr) :: handle
end function GeneralEvaporationCreate

!! Assign
subroutine GeneralEvaporationAssign(handleLHS, handleRHS) &
      bind(C, name='GeneralEvaporationAssign')
   use iso_c_binding
   implicit none
   type(c_ptr), value :: handleLHS, handleRHS
end subroutine GeneralEvaporationAssign

!! Delete
subroutine GeneralEvaporationDelete(handle) &
      bind(C, name='GeneralEvaporationDelete')
   use iso_c_binding
   implicit none
   type(c_ptr), value :: handle
end subroutine GeneralEvaporationDelete


!! -----------------------------------------------------------------------------
!! I/O
!! Read, Write, Print
!! Each returns 0 if failure, 1 if success.
!! -----------------------------------------------------------------------------

!! Read from file
function GeneralEvaporationRead(handle, filename, filenameSize) &
      bind(C, name='GeneralEvaporationRead') &
      result(success)
   use iso_c_binding
   implicit none
   type(c_ptr), value :: handle
   integer(c_size_t), value :: filenameSize
   character(c_char), intent(in) :: filename(filenameSize)
   integer(c_int) :: success
end function GeneralEvaporationRead

!! Write to file
function GeneralEvaporationWrite(handle, filename, filenameSize) &
      bind(C, name='GeneralEvaporationWrite') &
      result(success)
   use iso_c_binding
   implicit none
   type(c_ptr), intent(in), value :: handle
   integer(c_size_t), value :: filenameSize
   character(c_char), intent(in) :: filename(filenameSize)
   integer(c_int) :: success
end function GeneralEvaporationWrite

!! Print to standard output, in our prettyprinting format
function GeneralEvaporationPrint(handle) &
      bind(C, name='GeneralEvaporationPrint') &
      result(success)
   use iso_c_binding
   implicit none
   type(c_ptr), intent(in), value :: handle
   integer(c_int) :: success
end function GeneralEvaporationPrint

!! Print to standard output, as XML
function GeneralEvaporationPrintXML(handle) &
      bind(C, name='GeneralEvaporationPrintXML') &
      result(success)
   use iso_c_binding
   implicit none
   type(c_ptr), intent(in), value :: handle
   integer(c_int) :: success
end function GeneralEvaporationPrintXML

!! Print to standard output, as JSON
function GeneralEvaporationPrintJSON(handle) &
      bind(C, name='GeneralEvaporationPrintJSON') &
      result(success)
   use iso_c_binding
   implicit none
   type(c_ptr), intent(in), value :: handle
   integer(c_int) :: success
end function GeneralEvaporationPrintJSON


!! -----------------------------------------------------------------------------
!! Child: U
!! -----------------------------------------------------------------------------

!! Has
function GeneralEvaporationUHas(handle) &
      bind(C, name='GeneralEvaporationUHas') &
      result(has)
   use iso_c_binding
   implicit none
   type(c_ptr), intent(in), value :: handle
   integer(c_int) :: has
end function GeneralEvaporationUHas

!! Get, const
function GeneralEvaporationUGetConst(handle) &
      bind(C, name='GeneralEvaporationUGetConst') &
      result(resultHandle)
   use iso_c_binding
   implicit none
   type(c_ptr), intent(in), value :: handle
   type(c_ptr) :: resultHandle
end function GeneralEvaporationUGetConst

!! Get
function GeneralEvaporationUGet(handle) &
      bind(C, name='GeneralEvaporationUGet') &
      result(resultHandle)
   use iso_c_binding
   implicit none
   type(c_ptr), intent(in), value :: handle
   type(c_ptr) :: resultHandle
end function GeneralEvaporationUGet

!! Set
subroutine GeneralEvaporationUSet(handle, fieldHandle) &
      bind(C, name='GeneralEvaporationUSet')
   use iso_c_binding
   implicit none
   type(c_ptr), value :: handle
   type(c_ptr), value :: fieldHandle
end subroutine GeneralEvaporationUSet


!! -----------------------------------------------------------------------------
!! Child: theta
!! -----------------------------------------------------------------------------

!! Has
function GeneralEvaporationThetaHas(handle) &
      bind(C, name='GeneralEvaporationThetaHas') &
      result(has)
   use iso_c_binding
   implicit none
   type(c_ptr), intent(in), value :: handle
   integer(c_int) :: has
end function GeneralEvaporationThetaHas

!! Get, const
function GeneralEvaporationThetaGetConst(handle) &
      bind(C, name='GeneralEvaporationThetaGetConst') &
      result(resultHandle)
   use iso_c_binding
   implicit none
   type(c_ptr), intent(in), value :: handle
   type(c_ptr) :: resultHandle
end function GeneralEvaporationThetaGetConst

!! Get
function GeneralEvaporationThetaGet(handle) &
      bind(C, name='GeneralEvaporationThetaGet') &
      result(resultHandle)
   use iso_c_binding
   implicit none
   type(c_ptr), intent(in), value :: handle
   type(c_ptr) :: resultHandle
end function GeneralEvaporationThetaGet

!! Set
subroutine GeneralEvaporationThetaSet(handle, fieldHandle) &
      bind(C, name='GeneralEvaporationThetaSet')
   use iso_c_binding
   implicit none
   type(c_ptr), value :: handle
   type(c_ptr), value :: fieldHandle
end subroutine GeneralEvaporationThetaSet


!! -----------------------------------------------------------------------------
!! Child: g
!! -----------------------------------------------------------------------------

!! Has
function GeneralEvaporationGHas(handle) &
      bind(C, name='GeneralEvaporationGHas') &
      result(has)
   use iso_c_binding
   implicit none
   type(c_ptr), intent(in), value :: handle
   integer(c_int) :: has
end function GeneralEvaporationGHas

!! Get, const
function GeneralEvaporationGGetConst(handle) &
      bind(C, name='GeneralEvaporationGGetConst') &
      result(resultHandle)
   use iso_c_binding
   implicit none
   type(c_ptr), intent(in), value :: handle
   type(c_ptr) :: resultHandle
end function GeneralEvaporationGGetConst

!! Get
function GeneralEvaporationGGet(handle) &
      bind(C, name='GeneralEvaporationGGet') &
      result(resultHandle)
   use iso_c_binding
   implicit none
   type(c_ptr), intent(in), value :: handle
   type(c_ptr) :: resultHandle
end function GeneralEvaporationGGet

!! Set
subroutine GeneralEvaporationGSet(handle, fieldHandle) &
      bind(C, name='GeneralEvaporationGSet')
   use iso_c_binding
   implicit none
   type(c_ptr), value :: handle
   type(c_ptr), value :: fieldHandle
end subroutine GeneralEvaporationGSet


!! -----------------------------------------------------------------------------
!! -----------------------------------------------------------------------------

end interface
end module generalGeneralEvaporation
