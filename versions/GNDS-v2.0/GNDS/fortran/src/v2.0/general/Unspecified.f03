
!! THIS FILE WAS AUTOGENERATED!
!! DO NOT MODIFY!

module generalUnspecified
use iso_c_binding
interface


!! -----------------------------------------------------------------------------
!! Basics
!! Create, Assign, Delete
!! -----------------------------------------------------------------------------

!! Create, default, const
function UnspecifiedDefaultConst() &
      bind(C, name='UnspecifiedDefaultConst') &
      result(handle)
   use iso_c_binding
   implicit none
   type(c_ptr) :: handle
end function UnspecifiedDefaultConst

!! Create, default
function UnspecifiedDefault() &
      bind(C, name='UnspecifiedDefault') &
      result(handle)
   use iso_c_binding
   implicit none
   type(c_ptr) :: handle
end function UnspecifiedDefault

!! Create, general, const
function UnspecifiedCreateConst( &
   label, &
   productFrame, &
   labelSize, &
   productFrameSize &
) &
      bind(C, name='UnspecifiedCreateConst') &
      result(handle)
   use iso_c_binding
   implicit none
   integer(c_size_t), intent(in), value :: labelSize
   character(c_char), intent(in) :: label(labelSize)
   integer(c_size_t), intent(in), value :: productFrameSize
   character(c_char), intent(in) :: productFrame(productFrameSize)
   type(c_ptr) :: handle
end function UnspecifiedCreateConst

!! Create, general
function UnspecifiedCreate( &
   label, &
   productFrame, &
   labelSize, &
   productFrameSize &
) &
      bind(C, name='UnspecifiedCreate') &
      result(handle)
   use iso_c_binding
   implicit none
   integer(c_size_t), intent(in), value :: labelSize
   character(c_char), intent(in) :: label(labelSize)
   integer(c_size_t), intent(in), value :: productFrameSize
   character(c_char), intent(in) :: productFrame(productFrameSize)
   type(c_ptr) :: handle
end function UnspecifiedCreate

!! Assign
subroutine UnspecifiedAssign(handleLHS, handleRHS) &
      bind(C, name='UnspecifiedAssign')
   use iso_c_binding
   implicit none
   type(c_ptr), value :: handleLHS, handleRHS
end subroutine UnspecifiedAssign

!! Delete
subroutine UnspecifiedDelete(handle) &
      bind(C, name='UnspecifiedDelete')
   use iso_c_binding
   implicit none
   type(c_ptr), value :: handle
end subroutine UnspecifiedDelete


!! -----------------------------------------------------------------------------
!! I/O
!! Read, Write, Print
!! Each returns 0 if failure, 1 if success.
!! -----------------------------------------------------------------------------

!! Read from file
function UnspecifiedRead(handle, filename, filenameSize) &
      bind(C, name='UnspecifiedRead') &
      result(success)
   use iso_c_binding
   implicit none
   type(c_ptr), value :: handle
   integer(c_size_t), value :: filenameSize
   character(c_char), intent(in) :: filename(filenameSize)
   integer(c_int) :: success
end function UnspecifiedRead

!! Write to file
function UnspecifiedWrite(handle, filename, filenameSize) &
      bind(C, name='UnspecifiedWrite') &
      result(success)
   use iso_c_binding
   implicit none
   type(c_ptr), intent(in), value :: handle
   integer(c_size_t), value :: filenameSize
   character(c_char), intent(in) :: filename(filenameSize)
   integer(c_int) :: success
end function UnspecifiedWrite

!! Print to standard output, in our prettyprinting format
function UnspecifiedPrint(handle) &
      bind(C, name='UnspecifiedPrint') &
      result(success)
   use iso_c_binding
   implicit none
   type(c_ptr), intent(in), value :: handle
   integer(c_int) :: success
end function UnspecifiedPrint

!! Print to standard output, as XML
function UnspecifiedPrintXML(handle) &
      bind(C, name='UnspecifiedPrintXML') &
      result(success)
   use iso_c_binding
   implicit none
   type(c_ptr), intent(in), value :: handle
   integer(c_int) :: success
end function UnspecifiedPrintXML

!! Print to standard output, as JSON
function UnspecifiedPrintJSON(handle) &
      bind(C, name='UnspecifiedPrintJSON') &
      result(success)
   use iso_c_binding
   implicit none
   type(c_ptr), intent(in), value :: handle
   integer(c_int) :: success
end function UnspecifiedPrintJSON


!! -----------------------------------------------------------------------------
!! Metadatum: label
!! -----------------------------------------------------------------------------

!! Has
function UnspecifiedLabelHas(handle) &
      bind(C, name='UnspecifiedLabelHas') &
      result(has)
   use iso_c_binding
   implicit none
   type(c_ptr), intent(in), value :: handle
   integer(c_int) :: has
end function UnspecifiedLabelHas

!! Get
function UnspecifiedLabelGet(handle) &
      bind(C, name='UnspecifiedLabelGet') &
      result(label)
   use iso_c_binding
   implicit none
   type(c_ptr), intent(in), value :: handle
   type(c_ptr) :: label
end function UnspecifiedLabelGet

!! Set
subroutine UnspecifiedLabelSet(handle, label, labelSize) &
      bind(C, name='UnspecifiedLabelSet')
   use iso_c_binding
   implicit none
   type(c_ptr), value :: handle
   integer(c_size_t), intent(in), value :: labelSize
   character(c_char), intent(in) :: label(labelSize)
end subroutine UnspecifiedLabelSet


!! -----------------------------------------------------------------------------
!! Metadatum: productFrame
!! -----------------------------------------------------------------------------

!! Has
function UnspecifiedProductFrameHas(handle) &
      bind(C, name='UnspecifiedProductFrameHas') &
      result(has)
   use iso_c_binding
   implicit none
   type(c_ptr), intent(in), value :: handle
   integer(c_int) :: has
end function UnspecifiedProductFrameHas

!! Get
function UnspecifiedProductFrameGet(handle) &
      bind(C, name='UnspecifiedProductFrameGet') &
      result(productFrame)
   use iso_c_binding
   implicit none
   type(c_ptr), intent(in), value :: handle
   type(c_ptr) :: productFrame
end function UnspecifiedProductFrameGet

!! Set
subroutine UnspecifiedProductFrameSet(handle, productFrame, productFrameSize) &
      bind(C, name='UnspecifiedProductFrameSet')
   use iso_c_binding
   implicit none
   type(c_ptr), value :: handle
   integer(c_size_t), intent(in), value :: productFrameSize
   character(c_char), intent(in) :: productFrame(productFrameSize)
end subroutine UnspecifiedProductFrameSet


!! -----------------------------------------------------------------------------
!! -----------------------------------------------------------------------------

end interface
end module generalUnspecified
