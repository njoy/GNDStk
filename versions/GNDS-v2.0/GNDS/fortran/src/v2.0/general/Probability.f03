
!! THIS FILE WAS AUTOGENERATED!
!! DO NOT MODIFY!

module generalProbability
use iso_c_binding
interface


!! -----------------------------------------------------------------------------
!! Basics
!! Create, Assign, Delete
!! -----------------------------------------------------------------------------

!! Create, default, const
function ProbabilityDefaultConst() &
      bind(C, name='ProbabilityDefaultConst')
   use iso_c_binding
   implicit none
   type(c_ptr) :: ProbabilityDefaultConst
end function ProbabilityDefaultConst

!! Create, default
function ProbabilityDefault() &
      bind(C, name='ProbabilityDefault')
   use iso_c_binding
   implicit none
   type(c_ptr) :: ProbabilityDefault
end function ProbabilityDefault

!! Create, general, const
function ProbabilityCreateConst( &
   Double &
) &
      bind(C, name='ProbabilityCreateConst')
   use iso_c_binding
   implicit none
   type(c_ptr), value :: Double
   type(c_ptr) :: ProbabilityCreateConst
end function ProbabilityCreateConst

!! Create, general
function ProbabilityCreate( &
   Double &
) &
      bind(C, name='ProbabilityCreate')
   use iso_c_binding
   implicit none
   type(c_ptr), value :: Double
   type(c_ptr) :: ProbabilityCreate
end function ProbabilityCreate

!! Assign
subroutine ProbabilityAssign(handleLHS, handleRHS) &
      bind(C, name='ProbabilityAssign')
   use iso_c_binding
   implicit none
   type(c_ptr), value :: handleLHS, handleRHS
end subroutine ProbabilityAssign

!! Delete
subroutine ProbabilityDelete(handle) &
      bind(C, name='ProbabilityDelete')
   use iso_c_binding
   implicit none
   type(c_ptr), value :: handle
end subroutine ProbabilityDelete


!! -----------------------------------------------------------------------------
!! I/O
!! Read, Write, Print
!! Each returns 0 if failure, 1 if success.
!! -----------------------------------------------------------------------------

!! Read from file
function ProbabilityRead(handle, filename, filenameSize) &
      bind(C, name='ProbabilityRead')
   use iso_c_binding
   implicit none
   type(c_ptr), value :: handle
   integer(c_size_t), value :: filenameSize
   character(c_char), intent(in) :: filename(filenameSize)
   integer(c_int) :: ProbabilityRead
end function ProbabilityRead

!! Write to file
function ProbabilityWrite(handle, filename, filenameSize) &
      bind(C, name='ProbabilityWrite')
   use iso_c_binding
   implicit none
   type(c_ptr), intent(in), value :: handle
   integer(c_size_t), value :: filenameSize
   character(c_char), intent(in) :: filename(filenameSize)
   integer(c_int) :: ProbabilityWrite
end function ProbabilityWrite

!! Print to standard output, in our prettyprinting format
function ProbabilityPrint(handle) &
      bind(C, name='ProbabilityPrint')
   use iso_c_binding
   implicit none
   type(c_ptr), intent(in), value :: handle
   integer(c_int) :: ProbabilityPrint
end function ProbabilityPrint

!! Print to standard output, as XML
function ProbabilityPrintXML(handle) &
      bind(C, name='ProbabilityPrintXML')
   use iso_c_binding
   implicit none
   type(c_ptr), intent(in), value :: handle
   integer(c_int) :: ProbabilityPrintXML
end function ProbabilityPrintXML

!! Print to standard output, as JSON
function ProbabilityPrintJSON(handle) &
      bind(C, name='ProbabilityPrintJSON')
   use iso_c_binding
   implicit none
   type(c_ptr), intent(in), value :: handle
   integer(c_int) :: ProbabilityPrintJSON
end function ProbabilityPrintJSON


!! -----------------------------------------------------------------------------
!! Child: Double
!! -----------------------------------------------------------------------------

!! Has
function ProbabilityDoubleHas(handle) &
      bind(C, name='ProbabilityDoubleHas')
   use iso_c_binding
   implicit none
   type(c_ptr), intent(in), value :: handle
   integer(c_int) :: ProbabilityDoubleHas
end function ProbabilityDoubleHas

!! Get, const
function ProbabilityDoubleGetConst(handle) &
      bind(C, name='ProbabilityDoubleGetConst')
   use iso_c_binding
   implicit none
   type(c_ptr), intent(in), value :: handle
   type(c_ptr) :: ProbabilityDoubleGetConst
end function ProbabilityDoubleGetConst

!! Get
function ProbabilityDoubleGet(handle) &
      bind(C, name='ProbabilityDoubleGet')
   use iso_c_binding
   implicit none
   type(c_ptr), intent(in), value :: handle
   type(c_ptr) :: ProbabilityDoubleGet
end function ProbabilityDoubleGet

!! Set
subroutine ProbabilityDoubleSet(handle, fieldHandle) &
      bind(C, name='ProbabilityDoubleSet')
   use iso_c_binding
   implicit none
   type(c_ptr), value :: handle
   type(c_ptr), value :: fieldHandle
end subroutine ProbabilityDoubleSet


!! -----------------------------------------------------------------------------
!! -----------------------------------------------------------------------------

end interface
end module generalProbability
