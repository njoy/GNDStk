
!! THIS FILE WAS AUTOGENERATED!
!! DO NOT MODIFY!

module generalListOfCovariances
use iso_c_binding
interface


!! -----------------------------------------------------------------------------
!! Basics
!! Create, Assign, Delete
!! -----------------------------------------------------------------------------

!! Create, default, const
function ListOfCovariancesDefaultConst() &
      bind(C, name='ListOfCovariancesDefaultConst')
   use iso_c_binding
   implicit none
   type(c_ptr) :: ListOfCovariancesDefaultConst
end function ListOfCovariancesDefaultConst

!! Create, default, non-const
function ListOfCovariancesDefault() &
      bind(C, name='ListOfCovariancesDefault')
   use iso_c_binding
   implicit none
   type(c_ptr) :: ListOfCovariancesDefault
end function ListOfCovariancesDefault

!! Create, general, const
function ListOfCovariancesCreateConst( &
   covariance, covarianceSize &
) &
      bind(C, name='ListOfCovariancesCreateConst')
   use iso_c_binding
   implicit none
   integer(c_size_t), intent(in), value :: covarianceSize
   type(c_ptr), intent(in) :: covariance(covarianceSize)
   type(c_ptr) :: ListOfCovariancesCreateConst
end function ListOfCovariancesCreateConst

!! Create, general, non-const
function ListOfCovariancesCreate( &
   covariance, covarianceSize &
) &
      bind(C, name='ListOfCovariancesCreate')
   use iso_c_binding
   implicit none
   integer(c_size_t), intent(in), value :: covarianceSize
   type(c_ptr), intent(in) :: covariance(covarianceSize)
   type(c_ptr) :: ListOfCovariancesCreate
end function ListOfCovariancesCreate

!! Assign
subroutine ListOfCovariancesAssign(handleLHS, handleRHS) &
      bind(C, name='ListOfCovariancesAssign')
   use iso_c_binding
   implicit none
   type(c_ptr), value :: handleLHS
   type(c_ptr), intent(in), value :: handleRHS
end subroutine ListOfCovariancesAssign

!! Delete
subroutine ListOfCovariancesDelete(handle) &
      bind(C, name='ListOfCovariancesDelete')
   use iso_c_binding
   implicit none
   type(c_ptr), value :: handle
end subroutine ListOfCovariancesDelete


!! -----------------------------------------------------------------------------
!! I/O
!! Read, Write, Print
!! Each returns 0 if failure, 1 if success.
!! -----------------------------------------------------------------------------

!! Read from file
!! File can be XML, JSON, or HDF5.
!! We'll examine the file's contents to determine its type automatically.
function ListOfCovariancesRead(handle, filename, filenameSize) &
      bind(C, name='ListOfCovariancesRead')
   use iso_c_binding
   implicit none
   type(c_ptr), value :: handle
   integer(c_size_t), intent(in), value :: filenameSize
   character(c_char), intent(in) :: filename(filenameSize)
   integer(c_int) :: ListOfCovariancesRead
end function ListOfCovariancesRead

!! Write to file
!! File can be XML, JSON, or HDF5.
!! We'll use filename's extension to determine the type you want written.
function ListOfCovariancesWrite(handle, filename, filenameSize) &
      bind(C, name='ListOfCovariancesWrite')
   use iso_c_binding
   implicit none
   type(c_ptr), intent(in), value :: handle
   integer(c_size_t), intent(in), value :: filenameSize
   character(c_char), intent(in) :: filename(filenameSize)
   integer(c_int) :: ListOfCovariancesWrite
end function ListOfCovariancesWrite

!! Print to standard output, in our prettyprinting format
function ListOfCovariancesPrint(handle) &
      bind(C, name='ListOfCovariancesPrint')
   use iso_c_binding
   implicit none
   type(c_ptr), intent(in), value :: handle
   integer(c_int) :: ListOfCovariancesPrint
end function ListOfCovariancesPrint

!! Print to standard output, as XML
function ListOfCovariancesPrintXML(handle) &
      bind(C, name='ListOfCovariancesPrintXML')
   use iso_c_binding
   implicit none
   type(c_ptr), intent(in), value :: handle
   integer(c_int) :: ListOfCovariancesPrintXML
end function ListOfCovariancesPrintXML

!! Print to standard output, as JSON
function ListOfCovariancesPrintJSON(handle) &
      bind(C, name='ListOfCovariancesPrintJSON')
   use iso_c_binding
   implicit none
   type(c_ptr), intent(in), value :: handle
   integer(c_int) :: ListOfCovariancesPrintJSON
end function ListOfCovariancesPrintJSON


!! -----------------------------------------------------------------------------
!! Child: covariance
!! -----------------------------------------------------------------------------

!! Has
function ListOfCovariancesCovarianceHas(handle) &
      bind(C, name='ListOfCovariancesCovarianceHas')
   use iso_c_binding
   implicit none
   type(c_ptr), intent(in), value :: handle
   integer(c_int) :: ListOfCovariancesCovarianceHas
end function ListOfCovariancesCovarianceHas

!! Clear
subroutine ListOfCovariancesCovarianceClear(handle) &
      bind(C, name='ListOfCovariancesCovarianceClear')
   use iso_c_binding
   implicit none
   type(c_ptr), value :: handle
end subroutine ListOfCovariancesCovarianceClear

!! Size
function ListOfCovariancesCovarianceSize(handle) &
      bind(C, name='ListOfCovariancesCovarianceSize')
   use iso_c_binding
   implicit none
   type(c_ptr), intent(in), value :: handle
   integer(c_size_t) :: ListOfCovariancesCovarianceSize
end function ListOfCovariancesCovarianceSize

!! Add
subroutine ListOfCovariancesCovarianceAdd(handle, fieldHandle) &
      bind(C, name='ListOfCovariancesCovarianceAdd')
   use iso_c_binding
   implicit none
   type(c_ptr), value :: handle
   type(c_ptr), intent(in), value :: fieldHandle
end subroutine ListOfCovariancesCovarianceAdd

!! Get, by index \in [0,size), const
function ListOfCovariancesCovarianceGetConst(handle, index) &
      bind(C, name='ListOfCovariancesCovarianceGetConst')
   use iso_c_binding
   implicit none
   type(c_ptr), intent(in), value :: handle
   integer(c_size_t), intent(in), value :: index
   type(c_ptr) :: ListOfCovariancesCovarianceGetConst
end function ListOfCovariancesCovarianceGetConst

!! Get, by index \in [0,size), non-const
function ListOfCovariancesCovarianceGet(handle, index) &
      bind(C, name='ListOfCovariancesCovarianceGet')
   use iso_c_binding
   implicit none
   type(c_ptr), value :: handle
   integer(c_size_t), intent(in), value :: index
   type(c_ptr) :: ListOfCovariancesCovarianceGet
end function ListOfCovariancesCovarianceGet

!! Set, by index \in [0,size)
subroutine ListOfCovariancesCovarianceSet(handle, index, fieldHandle) &
      bind(C, name='ListOfCovariancesCovarianceSet')
   use iso_c_binding
   implicit none
   type(c_ptr), value :: handle
   integer(c_size_t), intent(in), value :: index
   type(c_ptr), intent(in), value :: fieldHandle
end subroutine ListOfCovariancesCovarianceSet

!! ------------------------
!! Re: metadatum label
!! ------------------------

!! Has, by label
function ListOfCovariancesCovarianceHasByLabel(handle, meta, metaSize) &
      bind(C, name='ListOfCovariancesCovarianceHasByLabel')
   use iso_c_binding
   implicit none
   type(c_ptr), intent(in), value :: handle
   integer(c_size_t), intent(in), value :: metaSize
   character(c_char), intent(in) :: meta(metaSize)
   integer(c_int) :: ListOfCovariancesCovarianceHasByLabel
end function ListOfCovariancesCovarianceHasByLabel

!! Get, by label, const
function ListOfCovariancesCovarianceGetByLabelConst(handle, meta, metaSize) &
      bind(C, name='ListOfCovariancesCovarianceGetByLabelConst')
   use iso_c_binding
   implicit none
   type(c_ptr), intent(in), value :: handle
   integer(c_size_t), intent(in), value :: metaSize
   character(c_char), intent(in) :: meta(metaSize)
   type(c_ptr) :: ListOfCovariancesCovarianceGetByLabelConst
end function ListOfCovariancesCovarianceGetByLabelConst

!! Get, by label, non-const
function ListOfCovariancesCovarianceGetByLabel(handle, meta, metaSize) &
      bind(C, name='ListOfCovariancesCovarianceGetByLabel')
   use iso_c_binding
   implicit none
   type(c_ptr), value :: handle
   integer(c_size_t), intent(in), value :: metaSize
   character(c_char), intent(in) :: meta(metaSize)
   type(c_ptr) :: ListOfCovariancesCovarianceGetByLabel
end function ListOfCovariancesCovarianceGetByLabel

!! Set, by label
subroutine ListOfCovariancesCovarianceSetByLabel(handle, meta, metaSize, fieldHandle) &
      bind(C, name='ListOfCovariancesCovarianceSetByLabel')
   use iso_c_binding
   implicit none
   type(c_ptr), value :: handle
   integer(c_size_t), intent(in), value :: metaSize
   character(c_char), intent(in) :: meta(metaSize)
   type(c_ptr), intent(in), value :: fieldHandle
end subroutine ListOfCovariancesCovarianceSetByLabel

!! ------------------------
!! Re: metadatum href
!! ------------------------

!! Has, by href
function ListOfCovariancesCovarianceHasByHref(handle, meta, metaSize) &
      bind(C, name='ListOfCovariancesCovarianceHasByHref')
   use iso_c_binding
   implicit none
   type(c_ptr), intent(in), value :: handle
   integer(c_size_t), intent(in), value :: metaSize
   character(c_char), intent(in) :: meta(metaSize)
   integer(c_int) :: ListOfCovariancesCovarianceHasByHref
end function ListOfCovariancesCovarianceHasByHref

!! Get, by href, const
function ListOfCovariancesCovarianceGetByHrefConst(handle, meta, metaSize) &
      bind(C, name='ListOfCovariancesCovarianceGetByHrefConst')
   use iso_c_binding
   implicit none
   type(c_ptr), intent(in), value :: handle
   integer(c_size_t), intent(in), value :: metaSize
   character(c_char), intent(in) :: meta(metaSize)
   type(c_ptr) :: ListOfCovariancesCovarianceGetByHrefConst
end function ListOfCovariancesCovarianceGetByHrefConst

!! Get, by href, non-const
function ListOfCovariancesCovarianceGetByHref(handle, meta, metaSize) &
      bind(C, name='ListOfCovariancesCovarianceGetByHref')
   use iso_c_binding
   implicit none
   type(c_ptr), value :: handle
   integer(c_size_t), intent(in), value :: metaSize
   character(c_char), intent(in) :: meta(metaSize)
   type(c_ptr) :: ListOfCovariancesCovarianceGetByHref
end function ListOfCovariancesCovarianceGetByHref

!! Set, by href
subroutine ListOfCovariancesCovarianceSetByHref(handle, meta, metaSize, fieldHandle) &
      bind(C, name='ListOfCovariancesCovarianceSetByHref')
   use iso_c_binding
   implicit none
   type(c_ptr), value :: handle
   integer(c_size_t), intent(in), value :: metaSize
   character(c_char), intent(in) :: meta(metaSize)
   type(c_ptr), intent(in), value :: fieldHandle
end subroutine ListOfCovariancesCovarianceSetByHref


!! -----------------------------------------------------------------------------
!! -----------------------------------------------------------------------------

end interface
end module generalListOfCovariances
