
!! THIS FILE WAS AUTOGENERATED!
!! DO NOT MODIFY!

module generalUnorthodoxes
use iso_c_binding
interface


!! -----------------------------------------------------------------------------
!! Basics
!! Create, Assign, Delete
!! -----------------------------------------------------------------------------

!! Create, default, const
function UnorthodoxesDefaultConst() &
      bind(C, name='UnorthodoxesDefaultConst')
   use iso_c_binding
   implicit none
   type(c_ptr) :: UnorthodoxesDefaultConst
end function UnorthodoxesDefaultConst

!! Create, default, non-const
function UnorthodoxesDefault() &
      bind(C, name='UnorthodoxesDefault')
   use iso_c_binding
   implicit none
   type(c_ptr) :: UnorthodoxesDefault
end function UnorthodoxesDefault

!! Create, general, const
function UnorthodoxesCreateConst( &
   unorthodox, unorthodoxSize &
) &
      bind(C, name='UnorthodoxesCreateConst')
   use iso_c_binding
   implicit none
   integer(c_size_t), intent(in), value :: unorthodoxSize
   type(c_ptr), intent(in) :: unorthodox(unorthodoxSize)
   type(c_ptr) :: UnorthodoxesCreateConst
end function UnorthodoxesCreateConst

!! Create, general, non-const
function UnorthodoxesCreate( &
   unorthodox, unorthodoxSize &
) &
      bind(C, name='UnorthodoxesCreate')
   use iso_c_binding
   implicit none
   integer(c_size_t), intent(in), value :: unorthodoxSize
   type(c_ptr), intent(in) :: unorthodox(unorthodoxSize)
   type(c_ptr) :: UnorthodoxesCreate
end function UnorthodoxesCreate

!! Assign
subroutine UnorthodoxesAssign(handleLHS, handleRHS) &
      bind(C, name='UnorthodoxesAssign')
   use iso_c_binding
   implicit none
   type(c_ptr), value :: handleLHS
   type(c_ptr), intent(in), value :: handleRHS
end subroutine UnorthodoxesAssign

!! Delete
subroutine UnorthodoxesDelete(handle) &
      bind(C, name='UnorthodoxesDelete')
   use iso_c_binding
   implicit none
   type(c_ptr), value :: handle
end subroutine UnorthodoxesDelete


!! -----------------------------------------------------------------------------
!! I/O
!! Read, Write, Print
!! Each returns 0 if failure, 1 if success.
!! -----------------------------------------------------------------------------

!! Read from file
!! File can be XML, JSON, or HDF5.
!! We'll examine the file's contents to determine its type automatically.
function UnorthodoxesRead(handle, filename, filenameSize) &
      bind(C, name='UnorthodoxesRead')
   use iso_c_binding
   implicit none
   type(c_ptr), value :: handle
   integer(c_size_t), intent(in), value :: filenameSize
   character(c_char), intent(in) :: filename(filenameSize)
   integer(c_int) :: UnorthodoxesRead
end function UnorthodoxesRead

!! Write to file
!! File can be XML, JSON, or HDF5.
!! We'll use filename's extension to determine the type you want written.
function UnorthodoxesWrite(handle, filename, filenameSize) &
      bind(C, name='UnorthodoxesWrite')
   use iso_c_binding
   implicit none
   type(c_ptr), intent(in), value :: handle
   integer(c_size_t), intent(in), value :: filenameSize
   character(c_char), intent(in) :: filename(filenameSize)
   integer(c_int) :: UnorthodoxesWrite
end function UnorthodoxesWrite

!! Print to standard output, in our prettyprinting format
function UnorthodoxesPrint(handle) &
      bind(C, name='UnorthodoxesPrint')
   use iso_c_binding
   implicit none
   type(c_ptr), intent(in), value :: handle
   integer(c_int) :: UnorthodoxesPrint
end function UnorthodoxesPrint

!! Print to standard output, as XML
function UnorthodoxesPrintXML(handle) &
      bind(C, name='UnorthodoxesPrintXML')
   use iso_c_binding
   implicit none
   type(c_ptr), intent(in), value :: handle
   integer(c_int) :: UnorthodoxesPrintXML
end function UnorthodoxesPrintXML

!! Print to standard output, as JSON
function UnorthodoxesPrintJSON(handle) &
      bind(C, name='UnorthodoxesPrintJSON')
   use iso_c_binding
   implicit none
   type(c_ptr), intent(in), value :: handle
   integer(c_int) :: UnorthodoxesPrintJSON
end function UnorthodoxesPrintJSON


!! -----------------------------------------------------------------------------
!! Child: unorthodox
!! -----------------------------------------------------------------------------

!! Has
function UnorthodoxesUnorthodoxHas(handle) &
      bind(C, name='UnorthodoxesUnorthodoxHas')
   use iso_c_binding
   implicit none
   type(c_ptr), intent(in), value :: handle
   integer(c_int) :: UnorthodoxesUnorthodoxHas
end function UnorthodoxesUnorthodoxHas

!! Clear
subroutine UnorthodoxesUnorthodoxClear(handle) &
      bind(C, name='UnorthodoxesUnorthodoxClear')
   use iso_c_binding
   implicit none
   type(c_ptr), value :: handle
end subroutine UnorthodoxesUnorthodoxClear

!! Size
function UnorthodoxesUnorthodoxSize(handle) &
      bind(C, name='UnorthodoxesUnorthodoxSize')
   use iso_c_binding
   implicit none
   type(c_ptr), intent(in), value :: handle
   integer(c_size_t) :: UnorthodoxesUnorthodoxSize
end function UnorthodoxesUnorthodoxSize

!! Add
subroutine UnorthodoxesUnorthodoxAdd(handle, fieldHandle) &
      bind(C, name='UnorthodoxesUnorthodoxAdd')
   use iso_c_binding
   implicit none
   type(c_ptr), value :: handle
   type(c_ptr), intent(in), value :: fieldHandle
end subroutine UnorthodoxesUnorthodoxAdd

!! Get, by index \in [0,size), const
function UnorthodoxesUnorthodoxGetConst(handle, index) &
      bind(C, name='UnorthodoxesUnorthodoxGetConst')
   use iso_c_binding
   implicit none
   type(c_ptr), intent(in), value :: handle
   integer(c_size_t), intent(in), value :: index
   type(c_ptr) :: UnorthodoxesUnorthodoxGetConst
end function UnorthodoxesUnorthodoxGetConst

!! Get, by index \in [0,size), non-const
function UnorthodoxesUnorthodoxGet(handle, index) &
      bind(C, name='UnorthodoxesUnorthodoxGet')
   use iso_c_binding
   implicit none
   type(c_ptr), value :: handle
   integer(c_size_t), intent(in), value :: index
   type(c_ptr) :: UnorthodoxesUnorthodoxGet
end function UnorthodoxesUnorthodoxGet

!! Set, by index \in [0,size)
subroutine UnorthodoxesUnorthodoxSet(handle, index, fieldHandle) &
      bind(C, name='UnorthodoxesUnorthodoxSet')
   use iso_c_binding
   implicit none
   type(c_ptr), value :: handle
   integer(c_size_t), intent(in), value :: index
   type(c_ptr), intent(in), value :: fieldHandle
end subroutine UnorthodoxesUnorthodoxSet

!! ------------------------
!! Re: metadatum id
!! ------------------------

!! Has, by id
function UnorthodoxesUnorthodoxHasById(handle, meta, metaSize) &
      bind(C, name='UnorthodoxesUnorthodoxHasById')
   use iso_c_binding
   implicit none
   type(c_ptr), intent(in), value :: handle
   integer(c_size_t), intent(in), value :: metaSize
   character(c_char), intent(in) :: meta(metaSize)
   integer(c_int) :: UnorthodoxesUnorthodoxHasById
end function UnorthodoxesUnorthodoxHasById

!! Get, by id, const
function UnorthodoxesUnorthodoxGetByIdConst(handle, meta, metaSize) &
      bind(C, name='UnorthodoxesUnorthodoxGetByIdConst')
   use iso_c_binding
   implicit none
   type(c_ptr), intent(in), value :: handle
   integer(c_size_t), intent(in), value :: metaSize
   character(c_char), intent(in) :: meta(metaSize)
   type(c_ptr) :: UnorthodoxesUnorthodoxGetByIdConst
end function UnorthodoxesUnorthodoxGetByIdConst

!! Get, by id, non-const
function UnorthodoxesUnorthodoxGetById(handle, meta, metaSize) &
      bind(C, name='UnorthodoxesUnorthodoxGetById')
   use iso_c_binding
   implicit none
   type(c_ptr), value :: handle
   integer(c_size_t), intent(in), value :: metaSize
   character(c_char), intent(in) :: meta(metaSize)
   type(c_ptr) :: UnorthodoxesUnorthodoxGetById
end function UnorthodoxesUnorthodoxGetById

!! Set, by id
subroutine UnorthodoxesUnorthodoxSetById(handle, meta, metaSize, fieldHandle) &
      bind(C, name='UnorthodoxesUnorthodoxSetById')
   use iso_c_binding
   implicit none
   type(c_ptr), value :: handle
   integer(c_size_t), intent(in), value :: metaSize
   character(c_char), intent(in) :: meta(metaSize)
   type(c_ptr), intent(in), value :: fieldHandle
end subroutine UnorthodoxesUnorthodoxSetById


!! -----------------------------------------------------------------------------
!! -----------------------------------------------------------------------------

end interface
end module generalUnorthodoxes
