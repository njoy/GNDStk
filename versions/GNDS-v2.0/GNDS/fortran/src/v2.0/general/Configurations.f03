
!! THIS FILE WAS AUTOGENERATED!
!! DO NOT MODIFY!

module generalConfigurations
use iso_c_binding
interface


!! -----------------------------------------------------------------------------
!! Basics
!! Create, Assign, Delete
!! -----------------------------------------------------------------------------

!! Create, default, const
function ConfigurationsDefaultConst() &
      bind(C, name='ConfigurationsDefaultConst')
   use iso_c_binding
   implicit none
   type(c_ptr) :: ConfigurationsDefaultConst
end function ConfigurationsDefaultConst

!! Create, default
function ConfigurationsDefault() &
      bind(C, name='ConfigurationsDefault')
   use iso_c_binding
   implicit none
   type(c_ptr) :: ConfigurationsDefault
end function ConfigurationsDefault

!! Create, general, const
function ConfigurationsCreateConst( &
   configuration, configurationSize &
) &
      bind(C, name='ConfigurationsCreateConst')
   use iso_c_binding
   implicit none
   integer(c_size_t), value :: configurationSize
   type(c_ptr) :: configuration(configurationSize)
   type(c_ptr) :: ConfigurationsCreateConst
end function ConfigurationsCreateConst

!! Create, general
function ConfigurationsCreate( &
   configuration, configurationSize &
) &
      bind(C, name='ConfigurationsCreate')
   use iso_c_binding
   implicit none
   integer(c_size_t), value :: configurationSize
   type(c_ptr) :: configuration(configurationSize)
   type(c_ptr) :: ConfigurationsCreate
end function ConfigurationsCreate

!! Assign
subroutine ConfigurationsAssign(handleLHS, handleRHS) &
      bind(C, name='ConfigurationsAssign')
   use iso_c_binding
   implicit none
   type(c_ptr), value :: handleLHS, handleRHS
end subroutine ConfigurationsAssign

!! Delete
subroutine ConfigurationsDelete(handle) &
      bind(C, name='ConfigurationsDelete')
   use iso_c_binding
   implicit none
   type(c_ptr), value :: handle
end subroutine ConfigurationsDelete


!! -----------------------------------------------------------------------------
!! I/O
!! Read, Write, Print
!! Each returns 0 if failure, 1 if success.
!! -----------------------------------------------------------------------------

!! Read from file
function ConfigurationsRead(handle, filename, filenameSize) &
      bind(C, name='ConfigurationsRead')
   use iso_c_binding
   implicit none
   type(c_ptr), value :: handle
   integer(c_size_t), value :: filenameSize
   character(c_char), intent(in) :: filename(filenameSize)
   integer(c_int) :: ConfigurationsRead
end function ConfigurationsRead

!! Write to file
function ConfigurationsWrite(handle, filename, filenameSize) &
      bind(C, name='ConfigurationsWrite')
   use iso_c_binding
   implicit none
   type(c_ptr), intent(in), value :: handle
   integer(c_size_t), value :: filenameSize
   character(c_char), intent(in) :: filename(filenameSize)
   integer(c_int) :: ConfigurationsWrite
end function ConfigurationsWrite

!! Print to standard output, in our prettyprinting format
function ConfigurationsPrint(handle) &
      bind(C, name='ConfigurationsPrint')
   use iso_c_binding
   implicit none
   type(c_ptr), intent(in), value :: handle
   integer(c_int) :: ConfigurationsPrint
end function ConfigurationsPrint

!! Print to standard output, as XML
function ConfigurationsPrintXML(handle) &
      bind(C, name='ConfigurationsPrintXML')
   use iso_c_binding
   implicit none
   type(c_ptr), intent(in), value :: handle
   integer(c_int) :: ConfigurationsPrintXML
end function ConfigurationsPrintXML

!! Print to standard output, as JSON
function ConfigurationsPrintJSON(handle) &
      bind(C, name='ConfigurationsPrintJSON')
   use iso_c_binding
   implicit none
   type(c_ptr), intent(in), value :: handle
   integer(c_int) :: ConfigurationsPrintJSON
end function ConfigurationsPrintJSON


!! -----------------------------------------------------------------------------
!! Child: configuration
!! -----------------------------------------------------------------------------

!! Has
function ConfigurationsConfigurationHas(handle) &
      bind(C, name='ConfigurationsConfigurationHas')
   use iso_c_binding
   implicit none
   type(c_ptr), intent(in), value :: handle
   integer(c_int) :: ConfigurationsConfigurationHas
end function ConfigurationsConfigurationHas

!! Clear
subroutine ConfigurationsConfigurationClear(handle) &
      bind(C, name='ConfigurationsConfigurationClear')
   use iso_c_binding
   implicit none
   type(c_ptr), value :: handle
end subroutine ConfigurationsConfigurationClear

!! Size
function ConfigurationsConfigurationSize(handle) &
      bind(C, name='ConfigurationsConfigurationSize')
   use iso_c_binding
   implicit none
   type(c_ptr), intent(in), value :: handle
   integer(c_size_t) :: ConfigurationsConfigurationSize
end function ConfigurationsConfigurationSize

!! Add
subroutine ConfigurationsConfigurationAdd(handle, fieldHandle) &
      bind(C, name='ConfigurationsConfigurationAdd')
   use iso_c_binding
   implicit none
   type(c_ptr), value :: handle
   type(c_ptr), intent(in), value :: fieldHandle
end subroutine ConfigurationsConfigurationAdd

!! Get, by index \in [0,size), const
function ConfigurationsConfigurationGetConst(handle, index) &
      bind(C, name='ConfigurationsConfigurationGetConst')
   use iso_c_binding
   implicit none
   type(c_ptr), intent(in), value :: handle
   integer(c_size_t), intent(in), value :: index
   type(c_ptr) :: ConfigurationsConfigurationGetConst
end function ConfigurationsConfigurationGetConst

!! Get, by index \in [0,size)
function ConfigurationsConfigurationGet(handle, index) &
      bind(C, name='ConfigurationsConfigurationGet')
   use iso_c_binding
   implicit none
   type(c_ptr), value :: handle
   integer(c_size_t), intent(in), value :: index
   type(c_ptr) :: ConfigurationsConfigurationGet
end function ConfigurationsConfigurationGet

!! Set, by index \in [0,size)
subroutine ConfigurationsConfigurationSet(handle, index, fieldHandle) &
      bind(C, name='ConfigurationsConfigurationSet')
   use iso_c_binding
   implicit none
   type(c_ptr), value :: handle
   integer(c_size_t), intent(in), value :: index
   type(c_ptr), intent(in), value :: fieldHandle
end subroutine ConfigurationsConfigurationSet

!! ------------------------
!! Re: metadatum subshell
!! ------------------------

!! Has, by subshell
function ConfigurationsConfigurationHasBySubshell(handle, meta, metaSize) &
      bind(C, name='ConfigurationsConfigurationHasBySubshell')
   use iso_c_binding
   implicit none
   type(c_ptr), intent(in), value :: handle
   integer(c_size_t), intent(in), value :: metaSize
   character(c_char), intent(in) :: meta(metaSize)
   integer(c_int) :: ConfigurationsConfigurationHasBySubshell
end function ConfigurationsConfigurationHasBySubshell

!! Get, by subshell, const
function ConfigurationsConfigurationGetBySubshellConst(handle, meta, metaSize) &
      bind(C, name='ConfigurationsConfigurationGetBySubshellConst')
   use iso_c_binding
   implicit none
   type(c_ptr), intent(in), value :: handle
   integer(c_size_t), intent(in), value :: metaSize
   character(c_char), intent(in) :: meta(metaSize)
   type(c_ptr) :: ConfigurationsConfigurationGetBySubshellConst
end function ConfigurationsConfigurationGetBySubshellConst

!! Get, by subshell
function ConfigurationsConfigurationGetBySubshell(handle, meta, metaSize) &
      bind(C, name='ConfigurationsConfigurationGetBySubshell')
   use iso_c_binding
   implicit none
   type(c_ptr), value :: handle
   integer(c_size_t), intent(in), value :: metaSize
   character(c_char), intent(in) :: meta(metaSize)
   type(c_ptr) :: ConfigurationsConfigurationGetBySubshell
end function ConfigurationsConfigurationGetBySubshell

!! Set, by subshell
subroutine ConfigurationsConfigurationSetBySubshell(handle, meta, metaSize, fieldHandle) &
      bind(C, name='ConfigurationsConfigurationSetBySubshell')
   use iso_c_binding
   implicit none
   type(c_ptr), intent(in), value :: handle
   integer(c_size_t), intent(in), value :: metaSize
   character(c_char), intent(in) :: meta(metaSize)
   type(c_ptr), intent(in), value :: fieldHandle
end subroutine ConfigurationsConfigurationSetBySubshell

!! ------------------------
!! Re: metadatum electronNumber
!! ------------------------

!! Has, by electronNumber
function ConfigurationsConfigurationHasByElectronNumber(handle, meta) &
      bind(C, name='ConfigurationsConfigurationHasByElectronNumber')
   use iso_c_binding
   implicit none
   type(c_ptr), intent(in), value :: handle
   real(c_double), value, intent(in) :: meta
   integer(c_int) :: ConfigurationsConfigurationHasByElectronNumber
end function ConfigurationsConfigurationHasByElectronNumber

!! Get, by electronNumber, const
function ConfigurationsConfigurationGetByElectronNumberConst(handle, meta) &
      bind(C, name='ConfigurationsConfigurationGetByElectronNumberConst')
   use iso_c_binding
   implicit none
   type(c_ptr), intent(in), value :: handle
   real(c_double), value, intent(in) :: meta
   type(c_ptr) :: ConfigurationsConfigurationGetByElectronNumberConst
end function ConfigurationsConfigurationGetByElectronNumberConst

!! Get, by electronNumber
function ConfigurationsConfigurationGetByElectronNumber(handle, meta) &
      bind(C, name='ConfigurationsConfigurationGetByElectronNumber')
   use iso_c_binding
   implicit none
   type(c_ptr), value :: handle
   real(c_double), value, intent(in) :: meta
   type(c_ptr) :: ConfigurationsConfigurationGetByElectronNumber
end function ConfigurationsConfigurationGetByElectronNumber

!! Set, by electronNumber
subroutine ConfigurationsConfigurationSetByElectronNumber(handle, meta, fieldHandle) &
      bind(C, name='ConfigurationsConfigurationSetByElectronNumber')
   use iso_c_binding
   implicit none
   type(c_ptr), intent(in), value :: handle
   real(c_double), value, intent(in) :: meta
   type(c_ptr), intent(in), value :: fieldHandle
end subroutine ConfigurationsConfigurationSetByElectronNumber


!! -----------------------------------------------------------------------------
!! -----------------------------------------------------------------------------

end interface
end module generalConfigurations
