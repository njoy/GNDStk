
!! THIS FILE WAS AUTOGENERATED!
!! DO NOT MODIFY!

module generalQ
use iso_c_binding
interface


!! -----------------------------------------------------------------------------
!! Basics
!! Create, Assign, Delete
!! -----------------------------------------------------------------------------

!! Create, default, const
function QDefaultConst() &
      bind(C, name='QDefaultConst')
   use iso_c_binding
   implicit none
   type(c_ptr) :: QDefaultConst
end function QDefaultConst

!! Create, default
function QDefault() &
      bind(C, name='QDefault')
   use iso_c_binding
   implicit none
   type(c_ptr) :: QDefault
end function QDefault

!! Create, general, const
function QCreateConst( &
   Double, &
   constant1d &
) &
      bind(C, name='QCreateConst')
   use iso_c_binding
   implicit none
   type(c_ptr), intent(in), value :: Double
   type(c_ptr), intent(in), value :: constant1d
   type(c_ptr) :: QCreateConst
end function QCreateConst

!! Create, general
function QCreate( &
   Double, &
   constant1d &
) &
      bind(C, name='QCreate')
   use iso_c_binding
   implicit none
   type(c_ptr), intent(in), value :: Double
   type(c_ptr), intent(in), value :: constant1d
   type(c_ptr) :: QCreate
end function QCreate

!! Assign
subroutine QAssign(handleLHS, handleRHS) &
      bind(C, name='QAssign')
   use iso_c_binding
   implicit none
   type(c_ptr), value :: handleLHS
   type(c_ptr), intent(in), value :: handleRHS
end subroutine QAssign

!! Delete
subroutine QDelete(handle) &
      bind(C, name='QDelete')
   use iso_c_binding
   implicit none
   type(c_ptr), value :: handle
end subroutine QDelete


!! -----------------------------------------------------------------------------
!! I/O
!! Read, Write, Print
!! Each returns 0 if failure, 1 if success.
!! -----------------------------------------------------------------------------

!! Read from file
function QRead(handle, filename, filenameSize) &
      bind(C, name='QRead')
   use iso_c_binding
   implicit none
   type(c_ptr), value :: handle
   integer(c_size_t), intent(in), value :: filenameSize
   character(c_char), intent(in) :: filename(filenameSize)
   integer(c_int) :: QRead
end function QRead

!! Write to file
function QWrite(handle, filename, filenameSize) &
      bind(C, name='QWrite')
   use iso_c_binding
   implicit none
   type(c_ptr), intent(in), value :: handle
   integer(c_size_t), intent(in), value :: filenameSize
   character(c_char), intent(in) :: filename(filenameSize)
   integer(c_int) :: QWrite
end function QWrite

!! Print to standard output, in our prettyprinting format
function QPrint(handle) &
      bind(C, name='QPrint')
   use iso_c_binding
   implicit none
   type(c_ptr), intent(in), value :: handle
   integer(c_int) :: QPrint
end function QPrint

!! Print to standard output, as XML
function QPrintXML(handle) &
      bind(C, name='QPrintXML')
   use iso_c_binding
   implicit none
   type(c_ptr), intent(in), value :: handle
   integer(c_int) :: QPrintXML
end function QPrintXML

!! Print to standard output, as JSON
function QPrintJSON(handle) &
      bind(C, name='QPrintJSON')
   use iso_c_binding
   implicit none
   type(c_ptr), intent(in), value :: handle
   integer(c_int) :: QPrintJSON
end function QPrintJSON


!! -----------------------------------------------------------------------------
!! Child: Double
!! -----------------------------------------------------------------------------

!! Has
function QDoubleHas(handle) &
      bind(C, name='QDoubleHas')
   use iso_c_binding
   implicit none
   type(c_ptr), intent(in), value :: handle
   integer(c_int) :: QDoubleHas
end function QDoubleHas

!! Get, const
function QDoubleGetConst(handle) &
      bind(C, name='QDoubleGetConst')
   use iso_c_binding
   implicit none
   type(c_ptr), intent(in), value :: handle
   type(c_ptr) :: QDoubleGetConst
end function QDoubleGetConst

!! Get
function QDoubleGet(handle) &
      bind(C, name='QDoubleGet')
   use iso_c_binding
   implicit none
   type(c_ptr), value :: handle
   type(c_ptr) :: QDoubleGet
end function QDoubleGet

!! Set
subroutine QDoubleSet(handle, fieldHandle) &
      bind(C, name='QDoubleSet')
   use iso_c_binding
   implicit none
   type(c_ptr), value :: handle
   type(c_ptr), intent(in), value :: fieldHandle
end subroutine QDoubleSet


!! -----------------------------------------------------------------------------
!! Child: constant1d
!! -----------------------------------------------------------------------------

!! Has
function QConstant1dHas(handle) &
      bind(C, name='QConstant1dHas')
   use iso_c_binding
   implicit none
   type(c_ptr), intent(in), value :: handle
   integer(c_int) :: QConstant1dHas
end function QConstant1dHas

!! Get, const
function QConstant1dGetConst(handle) &
      bind(C, name='QConstant1dGetConst')
   use iso_c_binding
   implicit none
   type(c_ptr), intent(in), value :: handle
   type(c_ptr) :: QConstant1dGetConst
end function QConstant1dGetConst

!! Get
function QConstant1dGet(handle) &
      bind(C, name='QConstant1dGet')
   use iso_c_binding
   implicit none
   type(c_ptr), value :: handle
   type(c_ptr) :: QConstant1dGet
end function QConstant1dGet

!! Set
subroutine QConstant1dSet(handle, fieldHandle) &
      bind(C, name='QConstant1dSet')
   use iso_c_binding
   implicit none
   type(c_ptr), value :: handle
   type(c_ptr), intent(in), value :: fieldHandle
end subroutine QConstant1dSet


!! -----------------------------------------------------------------------------
!! -----------------------------------------------------------------------------

end interface
end module generalQ
