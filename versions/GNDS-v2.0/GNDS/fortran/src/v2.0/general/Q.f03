
!! THIS FILE WAS AUTOGENERATED!
!! DO NOT MODIFY!

module generalQ
use iso_c_binding
interface


!! -----------------------------------------------------------------------------
!! Basics
!! Create, Assign, Delete
!! -----------------------------------------------------------------------------

!! Create, default, const
function QDefaultConst() &
      bind(C, name='QDefaultConst') &
      result(handle)
   use iso_c_binding
   implicit none
   type(c_ptr) :: handle
end function QDefaultConst

!! Create, default
function QDefault() &
      bind(C, name='QDefault') &
      result(handle)
   use iso_c_binding
   implicit none
   type(c_ptr) :: handle
end function QDefault

!! Create, general, const
function QCreateConst( &
   Double, &
   constant1d &
) &
      bind(C, name='QCreateConst') &
      result(handle)
   use iso_c_binding
   implicit none
   type(c_ptr), value :: Double
   type(c_ptr), value :: constant1d
   type(c_ptr) :: handle
end function QCreateConst

!! Create, general
function QCreate( &
   Double, &
   constant1d &
) &
      bind(C, name='QCreate') &
      result(handle)
   use iso_c_binding
   implicit none
   type(c_ptr), value :: Double
   type(c_ptr), value :: constant1d
   type(c_ptr) :: handle
end function QCreate

!! Assign
subroutine QAssign(handleLHS, handleRHS) &
      bind(C, name='QAssign')
   use iso_c_binding
   implicit none
   type(c_ptr), value :: handleLHS, handleRHS
end subroutine QAssign

!! Delete
subroutine QDelete(handle) &
      bind(C, name='QDelete')
   use iso_c_binding
   implicit none
   type(c_ptr), value :: handle
end subroutine QDelete


!! -----------------------------------------------------------------------------
!! I/O
!! Read, Write, Print
!! Each returns 0 if failure, 1 if success.
!! -----------------------------------------------------------------------------

!! Read from file
function QRead(handle, filename, filenameSize) &
      bind(C, name='QRead') &
      result(success)
   use iso_c_binding
   implicit none
   type(c_ptr), value :: handle
   integer(c_size_t), value :: filenameSize
   character(c_char), intent(in) :: filename(filenameSize)
   integer(c_int) :: success
end function QRead

!! Write to file
function QWrite(handle, filename, filenameSize) &
      bind(C, name='QWrite') &
      result(success)
   use iso_c_binding
   implicit none
   type(c_ptr), intent(in), value :: handle
   integer(c_size_t), value :: filenameSize
   character(c_char), intent(in) :: filename(filenameSize)
   integer(c_int) :: success
end function QWrite

!! Print to standard output, in our prettyprinting format
function QPrint(handle) &
      bind(C, name='QPrint') &
      result(success)
   use iso_c_binding
   implicit none
   type(c_ptr), intent(in), value :: handle
   integer(c_int) :: success
end function QPrint

!! Print to standard output, as XML
function QPrintXML(handle) &
      bind(C, name='QPrintXML') &
      result(success)
   use iso_c_binding
   implicit none
   type(c_ptr), intent(in), value :: handle
   integer(c_int) :: success
end function QPrintXML

!! Print to standard output, as JSON
function QPrintJSON(handle) &
      bind(C, name='QPrintJSON') &
      result(success)
   use iso_c_binding
   implicit none
   type(c_ptr), intent(in), value :: handle
   integer(c_int) :: success
end function QPrintJSON


!! -----------------------------------------------------------------------------
!! Child: Double
!! -----------------------------------------------------------------------------

!! Has
function QDoubleHas(handle) &
      bind(C, name='QDoubleHas') &
      result(has)
   use iso_c_binding
   implicit none
   type(c_ptr), intent(in), value :: handle
   integer(c_int) :: has
end function QDoubleHas

!! Get, const
function QDoubleGetConst(handle) &
      bind(C, name='QDoubleGetConst') &
      result(resultHandle)
   use iso_c_binding
   implicit none
   type(c_ptr), intent(in), value :: handle
   type(c_ptr) :: resultHandle
end function QDoubleGetConst

!! Get
function QDoubleGet(handle) &
      bind(C, name='QDoubleGet') &
      result(resultHandle)
   use iso_c_binding
   implicit none
   type(c_ptr), intent(in), value :: handle
   type(c_ptr) :: resultHandle
end function QDoubleGet

!! Set
subroutine QDoubleSet(handle, fieldHandle) &
      bind(C, name='QDoubleSet')
   use iso_c_binding
   implicit none
   type(c_ptr), value :: handle
   type(c_ptr), value :: fieldHandle
end subroutine QDoubleSet


!! -----------------------------------------------------------------------------
!! Child: constant1d
!! -----------------------------------------------------------------------------

!! Has
function QConstant1dHas(handle) &
      bind(C, name='QConstant1dHas') &
      result(has)
   use iso_c_binding
   implicit none
   type(c_ptr), intent(in), value :: handle
   integer(c_int) :: has
end function QConstant1dHas

!! Get, const
function QConstant1dGetConst(handle) &
      bind(C, name='QConstant1dGetConst') &
      result(resultHandle)
   use iso_c_binding
   implicit none
   type(c_ptr), intent(in), value :: handle
   type(c_ptr) :: resultHandle
end function QConstant1dGetConst

!! Get
function QConstant1dGet(handle) &
      bind(C, name='QConstant1dGet') &
      result(resultHandle)
   use iso_c_binding
   implicit none
   type(c_ptr), intent(in), value :: handle
   type(c_ptr) :: resultHandle
end function QConstant1dGet

!! Set
subroutine QConstant1dSet(handle, fieldHandle) &
      bind(C, name='QConstant1dSet')
   use iso_c_binding
   implicit none
   type(c_ptr), value :: handle
   type(c_ptr), value :: fieldHandle
end subroutine QConstant1dSet


!! -----------------------------------------------------------------------------
!! -----------------------------------------------------------------------------

end interface
end module generalQ
