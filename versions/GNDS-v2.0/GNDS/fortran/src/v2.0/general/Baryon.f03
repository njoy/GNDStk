
!! THIS FILE WAS AUTOGENERATED!
!! DO NOT MODIFY!

module generalBaryon
use iso_c_binding
interface


!! -----------------------------------------------------------------------------
!! Basics
!! Create, Assign, Delete
!! -----------------------------------------------------------------------------

!! Create, default, const
function BaryonDefaultConst() &
      bind(C, name='BaryonDefaultConst') &
      result(handle)
   use iso_c_binding
   implicit none
   type(c_ptr) :: handle
end function BaryonDefaultConst

!! Create, default
function BaryonDefault() &
      bind(C, name='BaryonDefault') &
      result(handle)
   use iso_c_binding
   implicit none
   type(c_ptr) :: handle
end function BaryonDefault

!! Create, general, const
function BaryonCreateConst( &
   id, &
   mass, &
   spin, &
   parity, &
   charge, &
   halflife, &
   decayData, &
   idSize &
) &
      bind(C, name='BaryonCreateConst') &
      result(handle)
   use iso_c_binding
   implicit none
   integer(c_size_t), intent(in), value :: idSize
   character(c_char), intent(in) :: id(idSize)
   type(c_ptr), value :: mass
   type(c_ptr), value :: spin
   type(c_ptr), value :: parity
   type(c_ptr), value :: charge
   type(c_ptr), value :: halflife
   type(c_ptr), value :: decayData
   type(c_ptr) :: handle
end function BaryonCreateConst

!! Create, general
function BaryonCreate( &
   id, &
   mass, &
   spin, &
   parity, &
   charge, &
   halflife, &
   decayData, &
   idSize &
) &
      bind(C, name='BaryonCreate') &
      result(handle)
   use iso_c_binding
   implicit none
   integer(c_size_t), intent(in), value :: idSize
   character(c_char), intent(in) :: id(idSize)
   type(c_ptr), value :: mass
   type(c_ptr), value :: spin
   type(c_ptr), value :: parity
   type(c_ptr), value :: charge
   type(c_ptr), value :: halflife
   type(c_ptr), value :: decayData
   type(c_ptr) :: handle
end function BaryonCreate

!! Assign
subroutine BaryonAssign(handleLHS, handleRHS) &
      bind(C, name='BaryonAssign')
   use iso_c_binding
   implicit none
   type(c_ptr), value :: handleLHS, handleRHS
end subroutine BaryonAssign

!! Delete
subroutine BaryonDelete(handle) &
      bind(C, name='BaryonDelete')
   use iso_c_binding
   implicit none
   type(c_ptr), value :: handle
end subroutine BaryonDelete


!! -----------------------------------------------------------------------------
!! I/O
!! Read, Write, Print
!! Each returns 0 if failure, 1 if success.
!! -----------------------------------------------------------------------------

!! Read from file
function BaryonRead(handle, filename, filenameSize) &
      bind(C, name='BaryonRead') &
      result(success)
   use iso_c_binding
   implicit none
   type(c_ptr), value :: handle
   integer(c_size_t), value :: filenameSize
   character(c_char), intent(in) :: filename(filenameSize)
   integer(c_int) :: success
end function BaryonRead

!! Write to file
function BaryonWrite(handle, filename, filenameSize) &
      bind(C, name='BaryonWrite') &
      result(success)
   use iso_c_binding
   implicit none
   type(c_ptr), intent(in), value :: handle
   integer(c_size_t), value :: filenameSize
   character(c_char), intent(in) :: filename(filenameSize)
   integer(c_int) :: success
end function BaryonWrite

!! Print to standard output, in our prettyprinting format
function BaryonPrint(handle) &
      bind(C, name='BaryonPrint') &
      result(success)
   use iso_c_binding
   implicit none
   type(c_ptr), intent(in), value :: handle
   integer(c_int) :: success
end function BaryonPrint

!! Print to standard output, as XML
function BaryonPrintXML(handle) &
      bind(C, name='BaryonPrintXML') &
      result(success)
   use iso_c_binding
   implicit none
   type(c_ptr), intent(in), value :: handle
   integer(c_int) :: success
end function BaryonPrintXML

!! Print to standard output, as JSON
function BaryonPrintJSON(handle) &
      bind(C, name='BaryonPrintJSON') &
      result(success)
   use iso_c_binding
   implicit none
   type(c_ptr), intent(in), value :: handle
   integer(c_int) :: success
end function BaryonPrintJSON


!! -----------------------------------------------------------------------------
!! Metadatum: id
!! -----------------------------------------------------------------------------

!! Has
function BaryonIdHas(handle) &
      bind(C, name='BaryonIdHas') &
      result(has)
   use iso_c_binding
   implicit none
   type(c_ptr), intent(in), value :: handle
   integer(c_int) :: has
end function BaryonIdHas

!! Get
function BaryonIdGet(handle) &
      bind(C, name='BaryonIdGet') &
      result(id)
   use iso_c_binding
   implicit none
   type(c_ptr), intent(in), value :: handle
   type(c_ptr) :: id
end function BaryonIdGet

!! Set
subroutine BaryonIdSet(handle, id, idSize) &
      bind(C, name='BaryonIdSet')
   use iso_c_binding
   implicit none
   type(c_ptr), value :: handle
   integer(c_size_t), intent(in), value :: idSize
   character(c_char), intent(in) :: id(idSize)
end subroutine BaryonIdSet


!! -----------------------------------------------------------------------------
!! Child: mass
!! -----------------------------------------------------------------------------

!! Has
function BaryonMassHas(handle) &
      bind(C, name='BaryonMassHas') &
      result(has)
   use iso_c_binding
   implicit none
   type(c_ptr), intent(in), value :: handle
   integer(c_int) :: has
end function BaryonMassHas

!! Get, const
function BaryonMassGetConst(handle) &
      bind(C, name='BaryonMassGetConst') &
      result(resultHandle)
   use iso_c_binding
   implicit none
   type(c_ptr), intent(in), value :: handle
   type(c_ptr) :: resultHandle
end function BaryonMassGetConst

!! Get
function BaryonMassGet(handle) &
      bind(C, name='BaryonMassGet') &
      result(resultHandle)
   use iso_c_binding
   implicit none
   type(c_ptr), intent(in), value :: handle
   type(c_ptr) :: resultHandle
end function BaryonMassGet

!! Set
subroutine BaryonMassSet(handle, fieldHandle) &
      bind(C, name='BaryonMassSet')
   use iso_c_binding
   implicit none
   type(c_ptr), value :: handle
   type(c_ptr), value :: fieldHandle
end subroutine BaryonMassSet


!! -----------------------------------------------------------------------------
!! Child: spin
!! -----------------------------------------------------------------------------

!! Has
function BaryonSpinHas(handle) &
      bind(C, name='BaryonSpinHas') &
      result(has)
   use iso_c_binding
   implicit none
   type(c_ptr), intent(in), value :: handle
   integer(c_int) :: has
end function BaryonSpinHas

!! Get, const
function BaryonSpinGetConst(handle) &
      bind(C, name='BaryonSpinGetConst') &
      result(resultHandle)
   use iso_c_binding
   implicit none
   type(c_ptr), intent(in), value :: handle
   type(c_ptr) :: resultHandle
end function BaryonSpinGetConst

!! Get
function BaryonSpinGet(handle) &
      bind(C, name='BaryonSpinGet') &
      result(resultHandle)
   use iso_c_binding
   implicit none
   type(c_ptr), intent(in), value :: handle
   type(c_ptr) :: resultHandle
end function BaryonSpinGet

!! Set
subroutine BaryonSpinSet(handle, fieldHandle) &
      bind(C, name='BaryonSpinSet')
   use iso_c_binding
   implicit none
   type(c_ptr), value :: handle
   type(c_ptr), value :: fieldHandle
end subroutine BaryonSpinSet


!! -----------------------------------------------------------------------------
!! Child: parity
!! -----------------------------------------------------------------------------

!! Has
function BaryonParityHas(handle) &
      bind(C, name='BaryonParityHas') &
      result(has)
   use iso_c_binding
   implicit none
   type(c_ptr), intent(in), value :: handle
   integer(c_int) :: has
end function BaryonParityHas

!! Get, const
function BaryonParityGetConst(handle) &
      bind(C, name='BaryonParityGetConst') &
      result(resultHandle)
   use iso_c_binding
   implicit none
   type(c_ptr), intent(in), value :: handle
   type(c_ptr) :: resultHandle
end function BaryonParityGetConst

!! Get
function BaryonParityGet(handle) &
      bind(C, name='BaryonParityGet') &
      result(resultHandle)
   use iso_c_binding
   implicit none
   type(c_ptr), intent(in), value :: handle
   type(c_ptr) :: resultHandle
end function BaryonParityGet

!! Set
subroutine BaryonParitySet(handle, fieldHandle) &
      bind(C, name='BaryonParitySet')
   use iso_c_binding
   implicit none
   type(c_ptr), value :: handle
   type(c_ptr), value :: fieldHandle
end subroutine BaryonParitySet


!! -----------------------------------------------------------------------------
!! Child: charge
!! -----------------------------------------------------------------------------

!! Has
function BaryonChargeHas(handle) &
      bind(C, name='BaryonChargeHas') &
      result(has)
   use iso_c_binding
   implicit none
   type(c_ptr), intent(in), value :: handle
   integer(c_int) :: has
end function BaryonChargeHas

!! Get, const
function BaryonChargeGetConst(handle) &
      bind(C, name='BaryonChargeGetConst') &
      result(resultHandle)
   use iso_c_binding
   implicit none
   type(c_ptr), intent(in), value :: handle
   type(c_ptr) :: resultHandle
end function BaryonChargeGetConst

!! Get
function BaryonChargeGet(handle) &
      bind(C, name='BaryonChargeGet') &
      result(resultHandle)
   use iso_c_binding
   implicit none
   type(c_ptr), intent(in), value :: handle
   type(c_ptr) :: resultHandle
end function BaryonChargeGet

!! Set
subroutine BaryonChargeSet(handle, fieldHandle) &
      bind(C, name='BaryonChargeSet')
   use iso_c_binding
   implicit none
   type(c_ptr), value :: handle
   type(c_ptr), value :: fieldHandle
end subroutine BaryonChargeSet


!! -----------------------------------------------------------------------------
!! Child: halflife
!! -----------------------------------------------------------------------------

!! Has
function BaryonHalflifeHas(handle) &
      bind(C, name='BaryonHalflifeHas') &
      result(has)
   use iso_c_binding
   implicit none
   type(c_ptr), intent(in), value :: handle
   integer(c_int) :: has
end function BaryonHalflifeHas

!! Get, const
function BaryonHalflifeGetConst(handle) &
      bind(C, name='BaryonHalflifeGetConst') &
      result(resultHandle)
   use iso_c_binding
   implicit none
   type(c_ptr), intent(in), value :: handle
   type(c_ptr) :: resultHandle
end function BaryonHalflifeGetConst

!! Get
function BaryonHalflifeGet(handle) &
      bind(C, name='BaryonHalflifeGet') &
      result(resultHandle)
   use iso_c_binding
   implicit none
   type(c_ptr), intent(in), value :: handle
   type(c_ptr) :: resultHandle
end function BaryonHalflifeGet

!! Set
subroutine BaryonHalflifeSet(handle, fieldHandle) &
      bind(C, name='BaryonHalflifeSet')
   use iso_c_binding
   implicit none
   type(c_ptr), value :: handle
   type(c_ptr), value :: fieldHandle
end subroutine BaryonHalflifeSet


!! -----------------------------------------------------------------------------
!! Child: decayData
!! -----------------------------------------------------------------------------

!! Has
function BaryonDecayDataHas(handle) &
      bind(C, name='BaryonDecayDataHas') &
      result(has)
   use iso_c_binding
   implicit none
   type(c_ptr), intent(in), value :: handle
   integer(c_int) :: has
end function BaryonDecayDataHas

!! Get, const
function BaryonDecayDataGetConst(handle) &
      bind(C, name='BaryonDecayDataGetConst') &
      result(resultHandle)
   use iso_c_binding
   implicit none
   type(c_ptr), intent(in), value :: handle
   type(c_ptr) :: resultHandle
end function BaryonDecayDataGetConst

!! Get
function BaryonDecayDataGet(handle) &
      bind(C, name='BaryonDecayDataGet') &
      result(resultHandle)
   use iso_c_binding
   implicit none
   type(c_ptr), intent(in), value :: handle
   type(c_ptr) :: resultHandle
end function BaryonDecayDataGet

!! Set
subroutine BaryonDecayDataSet(handle, fieldHandle) &
      bind(C, name='BaryonDecayDataSet')
   use iso_c_binding
   implicit none
   type(c_ptr), value :: handle
   type(c_ptr), value :: fieldHandle
end subroutine BaryonDecayDataSet


!! -----------------------------------------------------------------------------
!! -----------------------------------------------------------------------------

end interface
end module generalBaryon
