
!! THIS FILE WAS AUTOGENERATED!
!! DO NOT MODIFY!

module generalJ
use iso_c_binding
interface


!! -----------------------------------------------------------------------------
!! Basics
!! Create, Assign, Delete
!! -----------------------------------------------------------------------------

!! Create, default, const
function JDefaultConst() &
      bind(C, name='JDefaultConst') &
      result(handle)
   use iso_c_binding
   implicit none
   type(c_ptr) :: handle
end function JDefaultConst

!! Create, default
function JDefault() &
      bind(C, name='JDefault') &
      result(handle)
   use iso_c_binding
   implicit none
   type(c_ptr) :: handle
end function JDefault

!! Create, general, const
function JCreateConst( &
   label, &
   value, &
   levelSpacing, &
   widths, &
   labelSize &
) &
      bind(C, name='JCreateConst') &
      result(handle)
   use iso_c_binding
   implicit none
   integer(c_size_t), intent(in), value :: labelSize
   character(c_char), intent(in) :: label(labelSize)
   integer(c_int), value, intent(in) :: value
   type(c_ptr), value :: levelSpacing
   type(c_ptr), value :: widths
   type(c_ptr) :: handle
end function JCreateConst

!! Create, general
function JCreate( &
   label, &
   value, &
   levelSpacing, &
   widths, &
   labelSize &
) &
      bind(C, name='JCreate') &
      result(handle)
   use iso_c_binding
   implicit none
   integer(c_size_t), intent(in), value :: labelSize
   character(c_char), intent(in) :: label(labelSize)
   integer(c_int), value, intent(in) :: value
   type(c_ptr), value :: levelSpacing
   type(c_ptr), value :: widths
   type(c_ptr) :: handle
end function JCreate

!! Assign
subroutine JAssign(handleLHS, handleRHS) &
      bind(C, name='JAssign')
   use iso_c_binding
   implicit none
   type(c_ptr), value :: handleLHS, handleRHS
end subroutine JAssign

!! Delete
subroutine JDelete(handle) &
      bind(C, name='JDelete')
   use iso_c_binding
   implicit none
   type(c_ptr), value :: handle
end subroutine JDelete


!! -----------------------------------------------------------------------------
!! I/O
!! Read, Write, Print
!! Each returns 0 if failure, 1 if success.
!! -----------------------------------------------------------------------------

!! Read from file
function JRead(handle, filename, filenameSize) &
      bind(C, name='JRead') &
      result(success)
   use iso_c_binding
   implicit none
   type(c_ptr), value :: handle
   integer(c_size_t), value :: filenameSize
   character(c_char), intent(in) :: filename(filenameSize)
   integer(c_int) :: success
end function JRead

!! Write to file
function JWrite(handle, filename, filenameSize) &
      bind(C, name='JWrite') &
      result(success)
   use iso_c_binding
   implicit none
   type(c_ptr), intent(in), value :: handle
   integer(c_size_t), value :: filenameSize
   character(c_char), intent(in) :: filename(filenameSize)
   integer(c_int) :: success
end function JWrite

!! Print to standard output, in our prettyprinting format
function JPrint(handle) &
      bind(C, name='JPrint') &
      result(success)
   use iso_c_binding
   implicit none
   type(c_ptr), intent(in), value :: handle
   integer(c_int) :: success
end function JPrint

!! Print to standard output, as XML
function JPrintXML(handle) &
      bind(C, name='JPrintXML') &
      result(success)
   use iso_c_binding
   implicit none
   type(c_ptr), intent(in), value :: handle
   integer(c_int) :: success
end function JPrintXML

!! Print to standard output, as JSON
function JPrintJSON(handle) &
      bind(C, name='JPrintJSON') &
      result(success)
   use iso_c_binding
   implicit none
   type(c_ptr), intent(in), value :: handle
   integer(c_int) :: success
end function JPrintJSON


!! -----------------------------------------------------------------------------
!! Metadatum: label
!! -----------------------------------------------------------------------------

!! Has
function JLabelHas(handle) &
      bind(C, name='JLabelHas') &
      result(has)
   use iso_c_binding
   implicit none
   type(c_ptr), intent(in), value :: handle
   integer(c_int) :: has
end function JLabelHas

!! Get
function JLabelGet(handle) &
      bind(C, name='JLabelGet') &
      result(label)
   use iso_c_binding
   implicit none
   type(c_ptr), intent(in), value :: handle
   type(c_ptr) :: label
end function JLabelGet

!! Set
subroutine JLabelSet(handle, label, labelSize) &
      bind(C, name='JLabelSet')
   use iso_c_binding
   implicit none
   type(c_ptr), value :: handle
   integer(c_size_t), intent(in), value :: labelSize
   character(c_char), intent(in) :: label(labelSize)
end subroutine JLabelSet


!! -----------------------------------------------------------------------------
!! Metadatum: value
!! -----------------------------------------------------------------------------

!! Has
function JValueHas(handle) &
      bind(C, name='JValueHas') &
      result(has)
   use iso_c_binding
   implicit none
   type(c_ptr), intent(in), value :: handle
   integer(c_int) :: has
end function JValueHas

!! Get
function JValueGet(handle) &
      bind(C, name='JValueGet') &
      result(value)
   use iso_c_binding
   implicit none
   type(c_ptr), intent(in), value :: handle
   integer(c_int) :: value
end function JValueGet

!! Set
subroutine JValueSet(handle, value, valueSize) &
      bind(C, name='JValueSet')
   use iso_c_binding
   implicit none
   type(c_ptr), value :: handle
   integer(c_size_t), intent(in), value :: valueSize
   character(c_char), intent(in) :: value(valueSize)
end subroutine JValueSet


!! -----------------------------------------------------------------------------
!! Child: levelSpacing
!! -----------------------------------------------------------------------------

!! Has
function JLevelSpacingHas(handle) &
      bind(C, name='JLevelSpacingHas') &
      result(has)
   use iso_c_binding
   implicit none
   type(c_ptr), intent(in), value :: handle
   integer(c_int) :: has
end function JLevelSpacingHas

!! Get, const
function JLevelSpacingGetConst(handle) &
      bind(C, name='JLevelSpacingGetConst') &
      result(resultHandle)
   use iso_c_binding
   implicit none
   type(c_ptr), intent(in), value :: handle
   type(c_ptr) :: resultHandle
end function JLevelSpacingGetConst

!! Get
function JLevelSpacingGet(handle) &
      bind(C, name='JLevelSpacingGet') &
      result(resultHandle)
   use iso_c_binding
   implicit none
   type(c_ptr), intent(in), value :: handle
   type(c_ptr) :: resultHandle
end function JLevelSpacingGet

!! Set
subroutine JLevelSpacingSet(handle, fieldHandle) &
      bind(C, name='JLevelSpacingSet')
   use iso_c_binding
   implicit none
   type(c_ptr), value :: handle
   type(c_ptr), value :: fieldHandle
end subroutine JLevelSpacingSet


!! -----------------------------------------------------------------------------
!! Child: widths
!! -----------------------------------------------------------------------------

!! Has
function JWidthsHas(handle) &
      bind(C, name='JWidthsHas') &
      result(has)
   use iso_c_binding
   implicit none
   type(c_ptr), intent(in), value :: handle
   integer(c_int) :: has
end function JWidthsHas

!! Get, const
function JWidthsGetConst(handle) &
      bind(C, name='JWidthsGetConst') &
      result(resultHandle)
   use iso_c_binding
   implicit none
   type(c_ptr), intent(in), value :: handle
   type(c_ptr) :: resultHandle
end function JWidthsGetConst

!! Get
function JWidthsGet(handle) &
      bind(C, name='JWidthsGet') &
      result(resultHandle)
   use iso_c_binding
   implicit none
   type(c_ptr), intent(in), value :: handle
   type(c_ptr) :: resultHandle
end function JWidthsGet

!! Set
subroutine JWidthsSet(handle, fieldHandle) &
      bind(C, name='JWidthsSet')
   use iso_c_binding
   implicit none
   type(c_ptr), value :: handle
   type(c_ptr), value :: fieldHandle
end subroutine JWidthsSet


!! -----------------------------------------------------------------------------
!! -----------------------------------------------------------------------------

end interface
end module generalJ
