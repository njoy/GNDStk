
!! THIS FILE WAS AUTOGENERATED!
!! DO NOT MODIFY!

module generalParameterCovariance
use iso_c_binding
interface


!! -----------------------------------------------------------------------------
!! Basics
!! Create, Assign, Delete
!! -----------------------------------------------------------------------------

!! Create, default, const
function ParameterCovarianceDefaultConst() &
      bind(C, name='ParameterCovarianceDefaultConst') &
      result(handle)
   use iso_c_binding
   implicit none
   type(c_ptr) :: handle
end function ParameterCovarianceDefaultConst

!! Create, default
function ParameterCovarianceDefault() &
      bind(C, name='ParameterCovarianceDefault') &
      result(handle)
   use iso_c_binding
   implicit none
   type(c_ptr) :: handle
end function ParameterCovarianceDefault

!! Create, general, const
function ParameterCovarianceCreateConst( &
   label, &
   rowData, &
   parameterCovarianceMatrix, &
   labelSize &
) &
      bind(C, name='ParameterCovarianceCreateConst') &
      result(handle)
   use iso_c_binding
   implicit none
   integer(c_size_t), intent(in), value :: labelSize
   character(c_char), intent(in) :: label(labelSize)
   type(c_ptr), value :: rowData
   type(c_ptr), value :: parameterCovarianceMatrix
   type(c_ptr) :: handle
end function ParameterCovarianceCreateConst

!! Create, general
function ParameterCovarianceCreate( &
   label, &
   rowData, &
   parameterCovarianceMatrix, &
   labelSize &
) &
      bind(C, name='ParameterCovarianceCreate') &
      result(handle)
   use iso_c_binding
   implicit none
   integer(c_size_t), intent(in), value :: labelSize
   character(c_char), intent(in) :: label(labelSize)
   type(c_ptr), value :: rowData
   type(c_ptr), value :: parameterCovarianceMatrix
   type(c_ptr) :: handle
end function ParameterCovarianceCreate

!! Assign
subroutine ParameterCovarianceAssign(handleLHS, handleRHS) &
      bind(C, name='ParameterCovarianceAssign')
   use iso_c_binding
   implicit none
   type(c_ptr), value :: handleLHS, handleRHS
end subroutine ParameterCovarianceAssign

!! Delete
subroutine ParameterCovarianceDelete(handle) &
      bind(C, name='ParameterCovarianceDelete')
   use iso_c_binding
   implicit none
   type(c_ptr), value :: handle
end subroutine ParameterCovarianceDelete


!! -----------------------------------------------------------------------------
!! I/O
!! Read, Write, Print
!! Each returns 0 if failure, 1 if success.
!! -----------------------------------------------------------------------------

!! Read from file
function ParameterCovarianceRead(handle, filename, filenameSize) &
      bind(C, name='ParameterCovarianceRead') &
      result(success)
   use iso_c_binding
   implicit none
   type(c_ptr), value :: handle
   integer(c_size_t), value :: filenameSize
   character(c_char), intent(in) :: filename(filenameSize)
   integer(c_int) :: success
end function ParameterCovarianceRead

!! Write to file
function ParameterCovarianceWrite(handle, filename, filenameSize) &
      bind(C, name='ParameterCovarianceWrite') &
      result(success)
   use iso_c_binding
   implicit none
   type(c_ptr), intent(in), value :: handle
   integer(c_size_t), value :: filenameSize
   character(c_char), intent(in) :: filename(filenameSize)
   integer(c_int) :: success
end function ParameterCovarianceWrite

!! Print to standard output, in our prettyprinting format
function ParameterCovariancePrint(handle) &
      bind(C, name='ParameterCovariancePrint') &
      result(success)
   use iso_c_binding
   implicit none
   type(c_ptr), intent(in), value :: handle
   integer(c_int) :: success
end function ParameterCovariancePrint

!! Print to standard output, as XML
function ParameterCovariancePrintXML(handle) &
      bind(C, name='ParameterCovariancePrintXML') &
      result(success)
   use iso_c_binding
   implicit none
   type(c_ptr), intent(in), value :: handle
   integer(c_int) :: success
end function ParameterCovariancePrintXML

!! Print to standard output, as JSON
function ParameterCovariancePrintJSON(handle) &
      bind(C, name='ParameterCovariancePrintJSON') &
      result(success)
   use iso_c_binding
   implicit none
   type(c_ptr), intent(in), value :: handle
   integer(c_int) :: success
end function ParameterCovariancePrintJSON


!! -----------------------------------------------------------------------------
!! Metadatum: label
!! -----------------------------------------------------------------------------

!! Has
function ParameterCovarianceLabelHas(handle) &
      bind(C, name='ParameterCovarianceLabelHas') &
      result(has)
   use iso_c_binding
   implicit none
   type(c_ptr), intent(in), value :: handle
   integer(c_int) :: has
end function ParameterCovarianceLabelHas

!! Get
function ParameterCovarianceLabelGet(handle) &
      bind(C, name='ParameterCovarianceLabelGet') &
      result(label)
   use iso_c_binding
   implicit none
   type(c_ptr), intent(in), value :: handle
   type(c_ptr) :: label
end function ParameterCovarianceLabelGet

!! Set
subroutine ParameterCovarianceLabelSet(handle, label, labelSize) &
      bind(C, name='ParameterCovarianceLabelSet')
   use iso_c_binding
   implicit none
   type(c_ptr), value :: handle
   integer(c_size_t), intent(in), value :: labelSize
   character(c_char), intent(in) :: label(labelSize)
end subroutine ParameterCovarianceLabelSet


!! -----------------------------------------------------------------------------
!! Child: rowData
!! -----------------------------------------------------------------------------

!! Has
function ParameterCovarianceRowDataHas(handle) &
      bind(C, name='ParameterCovarianceRowDataHas') &
      result(has)
   use iso_c_binding
   implicit none
   type(c_ptr), intent(in), value :: handle
   integer(c_int) :: has
end function ParameterCovarianceRowDataHas

!! Get, const
function ParameterCovarianceRowDataGetConst(handle) &
      bind(C, name='ParameterCovarianceRowDataGetConst') &
      result(resultHandle)
   use iso_c_binding
   implicit none
   type(c_ptr), intent(in), value :: handle
   type(c_ptr) :: resultHandle
end function ParameterCovarianceRowDataGetConst

!! Get
function ParameterCovarianceRowDataGet(handle) &
      bind(C, name='ParameterCovarianceRowDataGet') &
      result(resultHandle)
   use iso_c_binding
   implicit none
   type(c_ptr), intent(in), value :: handle
   type(c_ptr) :: resultHandle
end function ParameterCovarianceRowDataGet

!! Set
subroutine ParameterCovarianceRowDataSet(handle, fieldHandle) &
      bind(C, name='ParameterCovarianceRowDataSet')
   use iso_c_binding
   implicit none
   type(c_ptr), value :: handle
   type(c_ptr), value :: fieldHandle
end subroutine ParameterCovarianceRowDataSet


!! -----------------------------------------------------------------------------
!! Child: parameterCovarianceMatrix
!! -----------------------------------------------------------------------------

!! Has
function ParameterCovarianceParameterCovarianceMatrixHas(handle) &
      bind(C, name='ParameterCovarianceParameterCovarianceMatrixHas') &
      result(has)
   use iso_c_binding
   implicit none
   type(c_ptr), intent(in), value :: handle
   integer(c_int) :: has
end function ParameterCovarianceParameterCovarianceMatrixHas

!! Get, const
function ParameterCovarianceParameterCovarianceMatrixGetConst(handle) &
      bind(C, name='ParameterCovarianceParameterCovarianceMatrixGetConst') &
      result(resultHandle)
   use iso_c_binding
   implicit none
   type(c_ptr), intent(in), value :: handle
   type(c_ptr) :: resultHandle
end function ParameterCovarianceParameterCovarianceMatrixGetConst

!! Get
function ParameterCovarianceParameterCovarianceMatrixGet(handle) &
      bind(C, name='ParameterCovarianceParameterCovarianceMatrixGet') &
      result(resultHandle)
   use iso_c_binding
   implicit none
   type(c_ptr), intent(in), value :: handle
   type(c_ptr) :: resultHandle
end function ParameterCovarianceParameterCovarianceMatrixGet

!! Set
subroutine ParameterCovarianceParameterCovarianceMatrixSet(handle, fieldHandle) &
      bind(C, name='ParameterCovarianceParameterCovarianceMatrixSet')
   use iso_c_binding
   implicit none
   type(c_ptr), value :: handle
   type(c_ptr), value :: fieldHandle
end subroutine ParameterCovarianceParameterCovarianceMatrixSet


!! -----------------------------------------------------------------------------
!! -----------------------------------------------------------------------------

end interface
end module generalParameterCovariance
