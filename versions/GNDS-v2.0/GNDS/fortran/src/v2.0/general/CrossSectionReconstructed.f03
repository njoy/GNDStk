
!! THIS FILE WAS AUTOGENERATED!
!! DO NOT MODIFY!

module generalCrossSectionReconstructed
use iso_c_binding
interface


!! -----------------------------------------------------------------------------
!! Basics
!! Create, Assign, Delete
!! -----------------------------------------------------------------------------

!! Create, default, const
function CrossSectionReconstructedDefaultConst() &
      bind(C, name='CrossSectionReconstructedDefaultConst') &
      result(handle)
   use iso_c_binding
   implicit none
   type(c_ptr) :: handle
end function CrossSectionReconstructedDefaultConst

!! Create, default
function CrossSectionReconstructedDefault() &
      bind(C, name='CrossSectionReconstructedDefault') &
      result(handle)
   use iso_c_binding
   implicit none
   type(c_ptr) :: handle
end function CrossSectionReconstructedDefault

!! Create, general, const
function CrossSectionReconstructedCreateConst( &
   label, &
   derivedFrom, &
   date, &
   labelSize, &
   derivedFromSize, &
   dateSize &
) &
      bind(C, name='CrossSectionReconstructedCreateConst') &
      result(handle)
   use iso_c_binding
   implicit none
   integer(c_size_t), intent(in), value :: labelSize
   character(c_char), intent(in) :: label(labelSize)
   integer(c_size_t), intent(in), value :: derivedFromSize
   character(c_char), intent(in) :: derivedFrom(derivedFromSize)
   integer(c_size_t), intent(in), value :: dateSize
   character(c_char), intent(in) :: date(dateSize)
   type(c_ptr) :: handle
end function CrossSectionReconstructedCreateConst

!! Create, general
function CrossSectionReconstructedCreate( &
   label, &
   derivedFrom, &
   date, &
   labelSize, &
   derivedFromSize, &
   dateSize &
) &
      bind(C, name='CrossSectionReconstructedCreate') &
      result(handle)
   use iso_c_binding
   implicit none
   integer(c_size_t), intent(in), value :: labelSize
   character(c_char), intent(in) :: label(labelSize)
   integer(c_size_t), intent(in), value :: derivedFromSize
   character(c_char), intent(in) :: derivedFrom(derivedFromSize)
   integer(c_size_t), intent(in), value :: dateSize
   character(c_char), intent(in) :: date(dateSize)
   type(c_ptr) :: handle
end function CrossSectionReconstructedCreate

!! Assign
subroutine CrossSectionReconstructedAssign(handleLHS, handleRHS) &
      bind(C, name='CrossSectionReconstructedAssign')
   use iso_c_binding
   implicit none
   type(c_ptr), value :: handleLHS, handleRHS
end subroutine CrossSectionReconstructedAssign

!! Delete
subroutine CrossSectionReconstructedDelete(handle) &
      bind(C, name='CrossSectionReconstructedDelete')
   use iso_c_binding
   implicit none
   type(c_ptr), value :: handle
end subroutine CrossSectionReconstructedDelete


!! -----------------------------------------------------------------------------
!! I/O
!! Read, Write, Print
!! Each returns 0 if failure, 1 if success.
!! -----------------------------------------------------------------------------

!! Read from file
function CrossSectionReconstructedRead(handle, filename, filenameSize) &
      bind(C, name='CrossSectionReconstructedRead') &
      result(success)
   use iso_c_binding
   implicit none
   type(c_ptr), value :: handle
   integer(c_size_t), value :: filenameSize
   character(c_char), intent(in) :: filename(filenameSize)
   integer(c_int) :: success
end function CrossSectionReconstructedRead

!! Write to file
function CrossSectionReconstructedWrite(handle, filename, filenameSize) &
      bind(C, name='CrossSectionReconstructedWrite') &
      result(success)
   use iso_c_binding
   implicit none
   type(c_ptr), intent(in), value :: handle
   integer(c_size_t), value :: filenameSize
   character(c_char), intent(in) :: filename(filenameSize)
   integer(c_int) :: success
end function CrossSectionReconstructedWrite

!! Print to standard output, in our prettyprinting format
function CrossSectionReconstructedPrint(handle) &
      bind(C, name='CrossSectionReconstructedPrint') &
      result(success)
   use iso_c_binding
   implicit none
   type(c_ptr), intent(in), value :: handle
   integer(c_int) :: success
end function CrossSectionReconstructedPrint

!! Print to standard output, as XML
function CrossSectionReconstructedPrintXML(handle) &
      bind(C, name='CrossSectionReconstructedPrintXML') &
      result(success)
   use iso_c_binding
   implicit none
   type(c_ptr), intent(in), value :: handle
   integer(c_int) :: success
end function CrossSectionReconstructedPrintXML

!! Print to standard output, as JSON
function CrossSectionReconstructedPrintJSON(handle) &
      bind(C, name='CrossSectionReconstructedPrintJSON') &
      result(success)
   use iso_c_binding
   implicit none
   type(c_ptr), intent(in), value :: handle
   integer(c_int) :: success
end function CrossSectionReconstructedPrintJSON


!! -----------------------------------------------------------------------------
!! Metadatum: label
!! -----------------------------------------------------------------------------

!! Has
function CrossSectionReconstructedLabelHas(handle) &
      bind(C, name='CrossSectionReconstructedLabelHas') &
      result(has)
   use iso_c_binding
   implicit none
   type(c_ptr), intent(in), value :: handle
   integer(c_int) :: has
end function CrossSectionReconstructedLabelHas

!! Get
function CrossSectionReconstructedLabelGet(handle) &
      bind(C, name='CrossSectionReconstructedLabelGet') &
      result(label)
   use iso_c_binding
   implicit none
   type(c_ptr), intent(in), value :: handle
   type(c_ptr) :: label
end function CrossSectionReconstructedLabelGet

!! Set
subroutine CrossSectionReconstructedLabelSet(handle, label, labelSize) &
      bind(C, name='CrossSectionReconstructedLabelSet')
   use iso_c_binding
   implicit none
   type(c_ptr), value :: handle
   integer(c_size_t), intent(in), value :: labelSize
   character(c_char), intent(in) :: label(labelSize)
end subroutine CrossSectionReconstructedLabelSet


!! -----------------------------------------------------------------------------
!! Metadatum: derivedFrom
!! -----------------------------------------------------------------------------

!! Has
function CrossSectionReconstructedDerivedFromHas(handle) &
      bind(C, name='CrossSectionReconstructedDerivedFromHas') &
      result(has)
   use iso_c_binding
   implicit none
   type(c_ptr), intent(in), value :: handle
   integer(c_int) :: has
end function CrossSectionReconstructedDerivedFromHas

!! Get
function CrossSectionReconstructedDerivedFromGet(handle) &
      bind(C, name='CrossSectionReconstructedDerivedFromGet') &
      result(derivedFrom)
   use iso_c_binding
   implicit none
   type(c_ptr), intent(in), value :: handle
   type(c_ptr) :: derivedFrom
end function CrossSectionReconstructedDerivedFromGet

!! Set
subroutine CrossSectionReconstructedDerivedFromSet(handle, derivedFrom, derivedFromSize) &
      bind(C, name='CrossSectionReconstructedDerivedFromSet')
   use iso_c_binding
   implicit none
   type(c_ptr), value :: handle
   integer(c_size_t), intent(in), value :: derivedFromSize
   character(c_char), intent(in) :: derivedFrom(derivedFromSize)
end subroutine CrossSectionReconstructedDerivedFromSet


!! -----------------------------------------------------------------------------
!! Metadatum: date
!! -----------------------------------------------------------------------------

!! Has
function CrossSectionReconstructedDateHas(handle) &
      bind(C, name='CrossSectionReconstructedDateHas') &
      result(has)
   use iso_c_binding
   implicit none
   type(c_ptr), intent(in), value :: handle
   integer(c_int) :: has
end function CrossSectionReconstructedDateHas

!! Get
function CrossSectionReconstructedDateGet(handle) &
      bind(C, name='CrossSectionReconstructedDateGet') &
      result(date)
   use iso_c_binding
   implicit none
   type(c_ptr), intent(in), value :: handle
   type(c_ptr) :: date
end function CrossSectionReconstructedDateGet

!! Set
subroutine CrossSectionReconstructedDateSet(handle, date, dateSize) &
      bind(C, name='CrossSectionReconstructedDateSet')
   use iso_c_binding
   implicit none
   type(c_ptr), value :: handle
   integer(c_size_t), intent(in), value :: dateSize
   character(c_char), intent(in) :: date(dateSize)
end subroutine CrossSectionReconstructedDateSet


!! -----------------------------------------------------------------------------
!! -----------------------------------------------------------------------------

end interface
end module generalCrossSectionReconstructed
