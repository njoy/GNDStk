
!! THIS FILE WAS AUTOGENERATED!
!! DO NOT MODIFY!

module generalUnorthodox
use iso_c_binding
interface


!! -----------------------------------------------------------------------------
!! Basics
!! Create, Assign, Delete
!! -----------------------------------------------------------------------------

!! Create, default, const
function UnorthodoxDefaultConst() &
      bind(C, name='UnorthodoxDefaultConst')
   use iso_c_binding
   implicit none
   type(c_ptr) :: UnorthodoxDefaultConst
end function UnorthodoxDefaultConst

!! Create, default
function UnorthodoxDefault() &
      bind(C, name='UnorthodoxDefault')
   use iso_c_binding
   implicit none
   type(c_ptr) :: UnorthodoxDefault
end function UnorthodoxDefault

!! Create, general, const
function UnorthodoxCreateConst( &
   id, &
   mass, &
   idSize &
) &
      bind(C, name='UnorthodoxCreateConst')
   use iso_c_binding
   implicit none
   integer(c_size_t), intent(in), value :: idSize
   character(c_char), intent(in) :: id(idSize)
   type(c_ptr), intent(in), value :: mass
   type(c_ptr) :: UnorthodoxCreateConst
end function UnorthodoxCreateConst

!! Create, general
function UnorthodoxCreate( &
   id, &
   mass, &
   idSize &
) &
      bind(C, name='UnorthodoxCreate')
   use iso_c_binding
   implicit none
   integer(c_size_t), intent(in), value :: idSize
   character(c_char), intent(in) :: id(idSize)
   type(c_ptr), intent(in), value :: mass
   type(c_ptr) :: UnorthodoxCreate
end function UnorthodoxCreate

!! Assign
subroutine UnorthodoxAssign(handleLHS, handleRHS) &
      bind(C, name='UnorthodoxAssign')
   use iso_c_binding
   implicit none
   type(c_ptr), value :: handleLHS
   type(c_ptr), intent(in), value :: handleRHS
end subroutine UnorthodoxAssign

!! Delete
subroutine UnorthodoxDelete(handle) &
      bind(C, name='UnorthodoxDelete')
   use iso_c_binding
   implicit none
   type(c_ptr), value :: handle
end subroutine UnorthodoxDelete


!! -----------------------------------------------------------------------------
!! I/O
!! Read, Write, Print
!! Each returns 0 if failure, 1 if success.
!! -----------------------------------------------------------------------------

!! Read from file
function UnorthodoxRead(handle, filename, filenameSize) &
      bind(C, name='UnorthodoxRead')
   use iso_c_binding
   implicit none
   type(c_ptr), value :: handle
   integer(c_size_t), intent(in), value :: filenameSize
   character(c_char), intent(in) :: filename(filenameSize)
   integer(c_int) :: UnorthodoxRead
end function UnorthodoxRead

!! Write to file
function UnorthodoxWrite(handle, filename, filenameSize) &
      bind(C, name='UnorthodoxWrite')
   use iso_c_binding
   implicit none
   type(c_ptr), intent(in), value :: handle
   integer(c_size_t), intent(in), value :: filenameSize
   character(c_char), intent(in) :: filename(filenameSize)
   integer(c_int) :: UnorthodoxWrite
end function UnorthodoxWrite

!! Print to standard output, in our prettyprinting format
function UnorthodoxPrint(handle) &
      bind(C, name='UnorthodoxPrint')
   use iso_c_binding
   implicit none
   type(c_ptr), intent(in), value :: handle
   integer(c_int) :: UnorthodoxPrint
end function UnorthodoxPrint

!! Print to standard output, as XML
function UnorthodoxPrintXML(handle) &
      bind(C, name='UnorthodoxPrintXML')
   use iso_c_binding
   implicit none
   type(c_ptr), intent(in), value :: handle
   integer(c_int) :: UnorthodoxPrintXML
end function UnorthodoxPrintXML

!! Print to standard output, as JSON
function UnorthodoxPrintJSON(handle) &
      bind(C, name='UnorthodoxPrintJSON')
   use iso_c_binding
   implicit none
   type(c_ptr), intent(in), value :: handle
   integer(c_int) :: UnorthodoxPrintJSON
end function UnorthodoxPrintJSON


!! -----------------------------------------------------------------------------
!! Metadatum: id
!! -----------------------------------------------------------------------------

!! Has
function UnorthodoxIdHas(handle) &
      bind(C, name='UnorthodoxIdHas')
   use iso_c_binding
   implicit none
   type(c_ptr), intent(in), value :: handle
   integer(c_int) :: UnorthodoxIdHas
end function UnorthodoxIdHas

!! Get
function UnorthodoxIdGet(handle) &
      bind(C, name='UnorthodoxIdGet')
   use iso_c_binding
   implicit none
   type(c_ptr), intent(in), value :: handle
   type(c_ptr) :: UnorthodoxIdGet
end function UnorthodoxIdGet

!! Set
subroutine UnorthodoxIdSet(handle, id, idSize) &
      bind(C, name='UnorthodoxIdSet')
   use iso_c_binding
   implicit none
   type(c_ptr), value :: handle
   integer(c_size_t), intent(in), value :: idSize
   character(c_char), intent(in) :: id(idSize)
end subroutine UnorthodoxIdSet


!! -----------------------------------------------------------------------------
!! Child: mass
!! -----------------------------------------------------------------------------

!! Has
function UnorthodoxMassHas(handle) &
      bind(C, name='UnorthodoxMassHas')
   use iso_c_binding
   implicit none
   type(c_ptr), intent(in), value :: handle
   integer(c_int) :: UnorthodoxMassHas
end function UnorthodoxMassHas

!! Get, const
function UnorthodoxMassGetConst(handle) &
      bind(C, name='UnorthodoxMassGetConst')
   use iso_c_binding
   implicit none
   type(c_ptr), intent(in), value :: handle
   type(c_ptr) :: UnorthodoxMassGetConst
end function UnorthodoxMassGetConst

!! Get
function UnorthodoxMassGet(handle) &
      bind(C, name='UnorthodoxMassGet')
   use iso_c_binding
   implicit none
   type(c_ptr), value :: handle
   type(c_ptr) :: UnorthodoxMassGet
end function UnorthodoxMassGet

!! Set
subroutine UnorthodoxMassSet(handle, fieldHandle) &
      bind(C, name='UnorthodoxMassSet')
   use iso_c_binding
   implicit none
   type(c_ptr), value :: handle
   type(c_ptr), intent(in), value :: fieldHandle
end subroutine UnorthodoxMassSet


!! -----------------------------------------------------------------------------
!! -----------------------------------------------------------------------------

end interface
end module generalUnorthodox
