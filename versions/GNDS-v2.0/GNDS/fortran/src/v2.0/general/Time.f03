
!! THIS FILE WAS AUTOGENERATED!
!! DO NOT MODIFY!

module generalTime
use iso_c_binding
interface


!! -----------------------------------------------------------------------------
!! Basics
!! Create, Assign, Delete
!! -----------------------------------------------------------------------------

!! Create, default, const
function TimeDefaultConst() &
      bind(C, name='TimeDefaultConst') &
      result(handle)
   use iso_c_binding
   implicit none
   type(c_ptr) :: handle
end function TimeDefaultConst

!! Create, default
function TimeDefault() &
      bind(C, name='TimeDefault') &
      result(handle)
   use iso_c_binding
   implicit none
   type(c_ptr) :: handle
end function TimeDefault

!! Create, general, const
function TimeCreateConst( &
   Double, &
   string &
) &
      bind(C, name='TimeCreateConst') &
      result(handle)
   use iso_c_binding
   implicit none
   type(c_ptr), value :: Double
   type(c_ptr), value :: string
   type(c_ptr) :: handle
end function TimeCreateConst

!! Create, general
function TimeCreate( &
   Double, &
   string &
) &
      bind(C, name='TimeCreate') &
      result(handle)
   use iso_c_binding
   implicit none
   type(c_ptr), value :: Double
   type(c_ptr), value :: string
   type(c_ptr) :: handle
end function TimeCreate

!! Assign
subroutine TimeAssign(handleLHS, handleRHS) &
      bind(C, name='TimeAssign')
   use iso_c_binding
   implicit none
   type(c_ptr), value :: handleLHS, handleRHS
end subroutine TimeAssign

!! Delete
subroutine TimeDelete(handle) &
      bind(C, name='TimeDelete')
   use iso_c_binding
   implicit none
   type(c_ptr), value :: handle
end subroutine TimeDelete


!! -----------------------------------------------------------------------------
!! I/O
!! Read, Write, Print
!! Each returns 0 if failure, 1 if success.
!! -----------------------------------------------------------------------------

!! Read from file
function TimeRead(handle, filename, filenameSize) &
      bind(C, name='TimeRead') &
      result(success)
   use iso_c_binding
   implicit none
   type(c_ptr), value :: handle
   integer(c_size_t), value :: filenameSize
   character(c_char), intent(in) :: filename(filenameSize)
   integer(c_int) :: success
end function TimeRead

!! Write to file
function TimeWrite(handle, filename, filenameSize) &
      bind(C, name='TimeWrite') &
      result(success)
   use iso_c_binding
   implicit none
   type(c_ptr), intent(in), value :: handle
   integer(c_size_t), value :: filenameSize
   character(c_char), intent(in) :: filename(filenameSize)
   integer(c_int) :: success
end function TimeWrite

!! Print to standard output, in our prettyprinting format
function TimePrint(handle) &
      bind(C, name='TimePrint') &
      result(success)
   use iso_c_binding
   implicit none
   type(c_ptr), intent(in), value :: handle
   integer(c_int) :: success
end function TimePrint

!! Print to standard output, as XML
function TimePrintXML(handle) &
      bind(C, name='TimePrintXML') &
      result(success)
   use iso_c_binding
   implicit none
   type(c_ptr), intent(in), value :: handle
   integer(c_int) :: success
end function TimePrintXML

!! Print to standard output, as JSON
function TimePrintJSON(handle) &
      bind(C, name='TimePrintJSON') &
      result(success)
   use iso_c_binding
   implicit none
   type(c_ptr), intent(in), value :: handle
   integer(c_int) :: success
end function TimePrintJSON


!! -----------------------------------------------------------------------------
!! Child: Double
!! -----------------------------------------------------------------------------

!! Has
function TimeDoubleHas(handle) &
      bind(C, name='TimeDoubleHas') &
      result(has)
   use iso_c_binding
   implicit none
   type(c_ptr), intent(in), value :: handle
   integer(c_int) :: has
end function TimeDoubleHas

!! Get, const
function TimeDoubleGetConst(handle) &
      bind(C, name='TimeDoubleGetConst') &
      result(resultHandle)
   use iso_c_binding
   implicit none
   type(c_ptr), intent(in), value :: handle
   type(c_ptr) :: resultHandle
end function TimeDoubleGetConst

!! Get
function TimeDoubleGet(handle) &
      bind(C, name='TimeDoubleGet') &
      result(resultHandle)
   use iso_c_binding
   implicit none
   type(c_ptr), intent(in), value :: handle
   type(c_ptr) :: resultHandle
end function TimeDoubleGet

!! Set
subroutine TimeDoubleSet(handle, fieldHandle) &
      bind(C, name='TimeDoubleSet')
   use iso_c_binding
   implicit none
   type(c_ptr), value :: handle
   type(c_ptr), value :: fieldHandle
end subroutine TimeDoubleSet


!! -----------------------------------------------------------------------------
!! Child: string
!! -----------------------------------------------------------------------------

!! Has
function TimeStringHas(handle) &
      bind(C, name='TimeStringHas') &
      result(has)
   use iso_c_binding
   implicit none
   type(c_ptr), intent(in), value :: handle
   integer(c_int) :: has
end function TimeStringHas

!! Get, const
function TimeStringGetConst(handle) &
      bind(C, name='TimeStringGetConst') &
      result(resultHandle)
   use iso_c_binding
   implicit none
   type(c_ptr), intent(in), value :: handle
   type(c_ptr) :: resultHandle
end function TimeStringGetConst

!! Get
function TimeStringGet(handle) &
      bind(C, name='TimeStringGet') &
      result(resultHandle)
   use iso_c_binding
   implicit none
   type(c_ptr), intent(in), value :: handle
   type(c_ptr) :: resultHandle
end function TimeStringGet

!! Set
subroutine TimeStringSet(handle, fieldHandle) &
      bind(C, name='TimeStringSet')
   use iso_c_binding
   implicit none
   type(c_ptr), value :: handle
   type(c_ptr), value :: fieldHandle
end subroutine TimeStringSet


!! -----------------------------------------------------------------------------
!! -----------------------------------------------------------------------------

end interface
end module generalTime
