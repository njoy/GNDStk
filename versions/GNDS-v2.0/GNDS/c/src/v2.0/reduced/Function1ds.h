
// THIS FILE WAS AUTOGENERATED!
// DO NOT MODIFY!

// Interface for C
// This header file is designed to work with both C and C++
// Function definitions are in this file's .cpp source

// -----------------------------------------------------------------------------
// -----------------------------------------------------------------------------
// Instructions for Users
//
// Constructs you're MORE likely to care about are preceded with:
//    // +++ remark
// Constructs you're LESS likely to care about are preceded with:
//    // --- remark
// Anything not marked as above can be ignored by most users.
//
// Function1ds is the basic handle type in this file. Example:
//    // Create a default Function1ds object:
//    Function1ds handle = Function1dsDefault();
// Functions involving Function1ds are declared throughout this file.
// -----------------------------------------------------------------------------
// -----------------------------------------------------------------------------


// -----------------------------------------------------------------------------
// Preliminaries
// -----------------------------------------------------------------------------

#ifndef C_INTERFACE_GNDS_V2_0_REDUCED_FUNCTION1DS
#define C_INTERFACE_GNDS_V2_0_REDUCED_FUNCTION1DS

#include "GNDStk.h"
#include "v2.0/general/Legendre.h"
#include "v2.0/general/XYs1d.h"

#ifdef __cplusplus
   #define extern_c extern "C"
#else
   #define extern_c
#endif

// Proxy C struct for the handled C++ class
struct Function1dsClass { };


// -----------------------------------------------------------------------------
// Handle types
// -----------------------------------------------------------------------------

// +++ Function1ds
// +++ General handle, suitable for most users. If you're not concerned about
// +++ strict "const correctness" in your C code, you can probably use this in
// +++ place of any function parameter of a const-aware handle type.
typedef struct Function1dsClass *Function1ds;

// --- Const-aware handles.
typedef const struct Function1dsClass *const ConstHandle2ConstFunction1ds;
typedef       struct Function1dsClass *const ConstHandle2Function1ds;
typedef const struct Function1dsClass *      Handle2ConstFunction1ds;
typedef       struct Function1dsClass *      Handle2Function1ds;


// -----------------------------------------------------------------------------
// Basics
// Create, Assign, Delete
// -----------------------------------------------------------------------------

// --- Create, default, const
extern_c Handle2ConstFunction1ds
Function1dsDefaultConst();

// +++ Create, default, non-const
extern_c Handle2Function1ds
Function1dsDefault();

// --- Create, general, const
extern_c Handle2ConstFunction1ds
Function1dsCreateConst(
   ConstHandle2Legendre *const Legendre, const size_t LegendreSize,
   ConstHandle2XYs1d *const XYs1d, const size_t XYs1dSize
);

// +++ Create, general, non-const
extern_c Handle2Function1ds
Function1dsCreate(
   ConstHandle2Legendre *const Legendre, const size_t LegendreSize,
   ConstHandle2XYs1d *const XYs1d, const size_t XYs1dSize
);

// +++ Assign
// +++ Use this to assign one handled object to another. Don't assign handles,
// +++ as with to = from. That has a meaning that you probably don't intend.
extern_c void
Function1dsAssign(ConstHandle2Function1ds self, ConstHandle2ConstFunction1ds from);

// +++ Delete
// +++ We'll attempt to remove no-longer-used objects automatically, but you
// +++ may improve performance if you delete them when you're done with them.
extern_c void
Function1dsDelete(ConstHandle2ConstFunction1ds self);


// -----------------------------------------------------------------------------
// I/O
// Read, Write, Print
// Each returns 0 if failure, 1 if success.
// -----------------------------------------------------------------------------

// +++ Read from file
// +++ File can be XML, JSON, or HDF5.
// +++ We'll examine the file's contents to determine its type automatically.
extern_c int
Function1dsRead(ConstHandle2Function1ds self, const char *const filename);

// +++ Write to file
// +++ File can be XML, JSON, or HDF5.
// +++ We'll use filename's extension to determine the type you want written.
extern_c int
Function1dsWrite(ConstHandle2ConstFunction1ds self, const char *const filename);

// +++ Print to standard output, in our prettyprinting format
extern_c int
Function1dsPrint(ConstHandle2ConstFunction1ds self);

// +++ Print to standard output, as XML
extern_c int
Function1dsPrintXML(ConstHandle2ConstFunction1ds self);

// +++ Print to standard output, as JSON
extern_c int
Function1dsPrintJSON(ConstHandle2ConstFunction1ds self);


// -----------------------------------------------------------------------------
// Child: Legendre
// -----------------------------------------------------------------------------

// +++ Has
extern_c int
Function1dsLegendreHas(ConstHandle2ConstFunction1ds self);

// +++ Clear
extern_c void
Function1dsLegendreClear(ConstHandle2Function1ds self);

// +++ Size
extern_c size_t
Function1dsLegendreSize(ConstHandle2ConstFunction1ds self);

// +++ Add
extern_c void
Function1dsLegendreAdd(ConstHandle2Function1ds self, ConstHandle2ConstLegendre Legendre);

// --- Get, by index \in [0,size), const
extern_c Handle2ConstLegendre
Function1dsLegendreGetConst(ConstHandle2ConstFunction1ds self, const size_t index_);

// +++ Get, by index \in [0,size), non-const
extern_c Handle2Legendre
Function1dsLegendreGet(ConstHandle2Function1ds self, const size_t index_);

// +++ Set, by index \in [0,size)
extern_c void
Function1dsLegendreSet(
   ConstHandle2Function1ds self,
   const size_t index_,
   ConstHandle2ConstLegendre Legendre
);

// ------------------------
// Re: metadatum outerDomainValue
// ------------------------

// +++ Has, by outerDomainValue
extern_c int
Function1dsLegendreHasByOuterDomainValue(
   ConstHandle2ConstFunction1ds self,
   const double outerDomainValue
);

// --- Get, by outerDomainValue, const
extern_c Handle2ConstLegendre
Function1dsLegendreGetByOuterDomainValueConst(
   ConstHandle2ConstFunction1ds self,
   const double outerDomainValue
);

// +++ Get, by outerDomainValue, non-const
extern_c Handle2Legendre
Function1dsLegendreGetByOuterDomainValue(
   ConstHandle2Function1ds self,
   const double outerDomainValue
);

// +++ Set, by outerDomainValue
extern_c void
Function1dsLegendreSetByOuterDomainValue(
   ConstHandle2Function1ds self,
   const double outerDomainValue,
   ConstHandle2ConstLegendre Legendre
);


// -----------------------------------------------------------------------------
// Child: XYs1d
// -----------------------------------------------------------------------------

// +++ Has
extern_c int
Function1dsXYs1dHas(ConstHandle2ConstFunction1ds self);

// +++ Clear
extern_c void
Function1dsXYs1dClear(ConstHandle2Function1ds self);

// +++ Size
extern_c size_t
Function1dsXYs1dSize(ConstHandle2ConstFunction1ds self);

// +++ Add
extern_c void
Function1dsXYs1dAdd(ConstHandle2Function1ds self, ConstHandle2ConstXYs1d XYs1d);

// --- Get, by index \in [0,size), const
extern_c Handle2ConstXYs1d
Function1dsXYs1dGetConst(ConstHandle2ConstFunction1ds self, const size_t index_);

// +++ Get, by index \in [0,size), non-const
extern_c Handle2XYs1d
Function1dsXYs1dGet(ConstHandle2Function1ds self, const size_t index_);

// +++ Set, by index \in [0,size)
extern_c void
Function1dsXYs1dSet(
   ConstHandle2Function1ds self,
   const size_t index_,
   ConstHandle2ConstXYs1d XYs1d
);

// ------------------------
// Re: metadatum label
// ------------------------

// +++ Has, by label
extern_c int
Function1dsXYs1dHasByLabel(
   ConstHandle2ConstFunction1ds self,
   const char *const label
);

// --- Get, by label, const
extern_c Handle2ConstXYs1d
Function1dsXYs1dGetByLabelConst(
   ConstHandle2ConstFunction1ds self,
   const char *const label
);

// +++ Get, by label, non-const
extern_c Handle2XYs1d
Function1dsXYs1dGetByLabel(
   ConstHandle2Function1ds self,
   const char *const label
);

// +++ Set, by label
extern_c void
Function1dsXYs1dSetByLabel(
   ConstHandle2Function1ds self,
   const char *const label,
   ConstHandle2ConstXYs1d XYs1d
);

// ------------------------
// Re: metadatum index
// ------------------------

// +++ Has, by index
extern_c int
Function1dsXYs1dHasByIndex(
   ConstHandle2ConstFunction1ds self,
   const int index
);

// --- Get, by index, const
extern_c Handle2ConstXYs1d
Function1dsXYs1dGetByIndexConst(
   ConstHandle2ConstFunction1ds self,
   const int index
);

// +++ Get, by index, non-const
extern_c Handle2XYs1d
Function1dsXYs1dGetByIndex(
   ConstHandle2Function1ds self,
   const int index
);

// +++ Set, by index
extern_c void
Function1dsXYs1dSetByIndex(
   ConstHandle2Function1ds self,
   const int index,
   ConstHandle2ConstXYs1d XYs1d
);

// ------------------------
// Re: metadatum interpolation
// ------------------------

// +++ Has, by interpolation
extern_c int
Function1dsXYs1dHasByInterpolation(
   ConstHandle2ConstFunction1ds self,
   const char *const interpolation
);

// --- Get, by interpolation, const
extern_c Handle2ConstXYs1d
Function1dsXYs1dGetByInterpolationConst(
   ConstHandle2ConstFunction1ds self,
   const char *const interpolation
);

// +++ Get, by interpolation, non-const
extern_c Handle2XYs1d
Function1dsXYs1dGetByInterpolation(
   ConstHandle2Function1ds self,
   const char *const interpolation
);

// +++ Set, by interpolation
extern_c void
Function1dsXYs1dSetByInterpolation(
   ConstHandle2Function1ds self,
   const char *const interpolation,
   ConstHandle2ConstXYs1d XYs1d
);

// ------------------------
// Re: metadatum outerDomainValue
// ------------------------

// +++ Has, by outerDomainValue
extern_c int
Function1dsXYs1dHasByOuterDomainValue(
   ConstHandle2ConstFunction1ds self,
   const double outerDomainValue
);

// --- Get, by outerDomainValue, const
extern_c Handle2ConstXYs1d
Function1dsXYs1dGetByOuterDomainValueConst(
   ConstHandle2ConstFunction1ds self,
   const double outerDomainValue
);

// +++ Get, by outerDomainValue, non-const
extern_c Handle2XYs1d
Function1dsXYs1dGetByOuterDomainValue(
   ConstHandle2Function1ds self,
   const double outerDomainValue
);

// +++ Set, by outerDomainValue
extern_c void
Function1dsXYs1dSetByOuterDomainValue(
   ConstHandle2Function1ds self,
   const double outerDomainValue,
   ConstHandle2ConstXYs1d XYs1d
);


// -----------------------------------------------------------------------------
// Custom functionality
// -----------------------------------------------------------------------------

#include "v2.0/reduced/Function1ds/src/custom.h"

#undef extern_c
#endif
