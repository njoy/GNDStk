
// THIS FILE WAS AUTOGENERATED!
// DO NOT MODIFY!

#ifndef PROTO_V1_9_KEY
#define PROTO_V1_9_KEY

// GNDStk Core Interface
#include "GNDStk.hpp"

namespace proto {
namespace v1_9 {

using namespace njoy;
using namespace GNDStk;


// -----------------------------------------------------------------------------
// meta::
// -----------------------------------------------------------------------------

namespace meta {

#define GNDSTK_MAKE_LOOKUP(nameField,nameGNDS) \
   inline const auto nameField = makeLookup( \
      [](const auto &obj) -> decltype(obj.nameField()) \
      { return obj.nameField(); }, \
      #nameGNDS \
   )
// nameField vs. nameGNDS: for, e.g., Double vs. double in GNDS

GNDSTK_MAKE_LOOKUP(ENDF_MT,ENDF_MT);
GNDSTK_MAKE_LOOKUP(evaluation,evaluation);
GNDSTK_MAKE_LOOKUP(fissionGenre,fissionGenre);
GNDSTK_MAKE_LOOKUP(format,format);
GNDSTK_MAKE_LOOKUP(href,href);
GNDSTK_MAKE_LOOKUP(index,index);
GNDSTK_MAKE_LOOKUP(interaction,interaction);
GNDSTK_MAKE_LOOKUP(interpolation,interpolation);
GNDSTK_MAKE_LOOKUP(label,label);
GNDSTK_MAKE_LOOKUP(length,length);
GNDSTK_MAKE_LOOKUP(outerDomainValue,outerDomainValue);
GNDSTK_MAKE_LOOKUP(projectile,projectile);
GNDSTK_MAKE_LOOKUP(projectileFrame,projectileFrame);
GNDSTK_MAKE_LOOKUP(start,start);
GNDSTK_MAKE_LOOKUP(style,style);
GNDSTK_MAKE_LOOKUP(target,target);
GNDSTK_MAKE_LOOKUP(unit,unit);
GNDSTK_MAKE_LOOKUP(valueType,valueType);

#undef GNDSTK_MAKE_LOOKUP

} // namespace meta


// -----------------------------------------------------------------------------
// containers::child::
// -----------------------------------------------------------------------------

namespace containers {
namespace child {

inline const Child<> XYs1d("XYs1d");
inline const Child<> axes("axes");
inline const Child<> axis("axis");
inline const Child<> grid("grid");
inline const Child<> link("link");
inline const Child<> regions1d("regions1d");
inline const Child<> values("values");

} // namespace child
using namespace child;
} // namespace containers


// -----------------------------------------------------------------------------
// transport::child::
// -----------------------------------------------------------------------------

namespace transport {
namespace child {

inline const Child<> crossSection("crossSection");
inline const Child<> reaction("reaction");
inline const Child<> reactionSuite("reactionSuite");
inline const Child<> reactions("reactions");

} // namespace child
using namespace child;
} // namespace transport


// -----------------------------------------------------------------------------
// For convenience: using directives
// -----------------------------------------------------------------------------

namespace key {
   using namespace meta;
   using namespace containers::child;
   using namespace transport::child;
} // namespace key

using namespace key;
using namespace containers;
using namespace transport;


// -----------------------------------------------------------------------------
// -----------------------------------------------------------------------------

} // namespace v1_9
} // namespace proto

#endif
