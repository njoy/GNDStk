.. GNDStk documentation master file, created by
   sphinx-quickstart on Mon Feb  1 14:25:36 2021.
   You can adapt this file completely to your liking, but it should at least
   contain the root `toctree` directive.

********************************************************************************
GNDStk: GNDS Toolkit
********************************************************************************

.. fixme At some point, after settling on a good structure, break this entire
.. file into, probably, one file for each chapter. Then, include those here.

Contents:

.. toctree::
   :maxdepth: 2
   :numbered:

..   foo.rst
..   bar.rst
..   baz.rst

========================================
Indices and Tables
========================================

* :ref:`genindex`
* :ref:`modindex`
* :ref:`search`



********************************************************************************
Introduction
********************************************************************************

Hi.



********************************************************************************
Building GNDStk
********************************************************************************

Header-Only Library.
But pugiXML isn't.

========================================
Overview
========================================

Describe how to download.
Describe the test suite.

========================================
CMake
========================================

========================================
Bash Script
========================================



********************************************************************************
Quick Tour
********************************************************************************



********************************************************************************
Utility Constructs
********************************************************************************

========================================
Global Flags
========================================

========================================
Diagnostics
========================================

------------------------
Notes
------------------------

------------------------
Warnings
------------------------

------------------------
Errors
------------------------

------------------------
Context
------------------------

========================================
Functions
========================================



********************************************************************************
Major Classes
********************************************************************************



********************************************************************************
Tree Class
********************************************************************************



********************************************************************************
Node Class
********************************************************************************



********************************************************************************
XML & JSON Classes
********************************************************************************



********************************************************************************
Smart Keyword System
********************************************************************************

========================================
Meta Class
========================================

========================================
Child Class
========================================

========================================
Operators
========================================

========================================
Keywords Class
========================================



********************************************************************************
Query System
********************************************************************************

========================================
Basic Queries
========================================

========================================
Multi-Queries
========================================



********************************************************************************
Convert Functions
********************************************************************************



********************************************************************************
Node: add()
********************************************************************************

========================================
For Metadata
========================================

.. fixme I'm seeing a fugly yellow/green background coloring for the
.. backgrounds of literal codes. Find the relevant css to fix this.

Need a legend for things like this....

.. literalinclude:: node-add-meta.cc
   :language: cpp
   :linenos:

========================================
For Child Nodes
========================================

.. literalinclude:: node-add-child.cc
   :language: cpp
   :linenos:



********************************************************************************
Node: Query Metadata
********************************************************************************

========================================
Node: meta(string)
========================================

.. literalinclude:: node-meta-string.cc
   :language: cpp
   :linenos:

========================================
Node: meta(Meta)
========================================

.. literalinclude:: node-meta-meta.cc
   :language: cpp
   :linenos:

========================================
Node: (Meta)
========================================

.. literalinclude:: node-meta-call.cc
   :language: cpp
   :linenos:



********************************************************************************
Node: Query Children
********************************************************************************

========================================
Node: one(string)
========================================

.. literalinclude:: node-one-string.cc
   :language: cpp
   :linenos:

========================================
Node: many(string)
========================================

.. literalinclude:: node-many-string.cc
   :language: cpp
   :linenos:

========================================
Node: child(Child)
========================================

.. literalinclude:: node-child-child.cc
   :language: cpp
   :linenos:

========================================
Node: (Child)
========================================

.. literalinclude:: node-child-call.cc
   :language: cpp
   :linenos:



********************************************************************************
Node: General Queries
********************************************************************************

========================================
Node: operator(...)
========================================

.. literalinclude:: node-call.cc
   :language: cpp
   :linenos:

========================================
Node: operator(... | ...)
========================================

.. literalinclude:: node-multi.cc
   :language: cpp
   :linenos:



********************************************************************************
Advanced Topics
********************************************************************************



********************************************************************************
High-Level Interface
********************************************************************************

========================================
Smart Component Base
========================================

========================================
Required Fields
========================================

========================================
Optional Fields
========================================

========================================
Optional-with-Default Fields
========================================



********************************************************************************
Reference
********************************************************************************

========================================
Meta Objects
========================================

========================================
Child Objects
========================================

========================================
convert() Functions
========================================



.. Some notes below here. reST could use block comments,
.. or the moral equivalent of TeX's \bye.

********************************************************************************
Chapter
********************************************************************************

========================================
Section
========================================

------------------------
Subsection
------------------------

Notes...

I/O
Core Interface
Conversion regime

Query System
Queries
Multi-Queries
