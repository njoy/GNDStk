
// THIS FILE WAS AUTOGENERATED!
// DO NOT MODIFY!

#ifndef GNDSTK_V1_9_TRANSPORT_REACTION
#define GNDSTK_V1_9_TRANSPORT_REACTION

#include "GNDStk/v1.9/transport/CrossSection.hpp"

namespace njoy {
namespace GNDStk {
namespace v1_9 {


// -----------------------------------------------------------------------------
// transport::
// class Reaction
// -----------------------------------------------------------------------------

namespace transport {

class Reaction : public Component<transport::Reaction> {
   friend class Component;

   // ------------------------
   // For Component
   // ------------------------

   // Names: this namespace, this class, a field / node of this type
   static auto NAMESPACE() { return "transport"; }
   static auto CLASS() { return "Reaction"; }
   static auto FIELD() { return "reaction"; }

   // Core Interface multi-query to extract metadata and child nodes
   static auto KEYS()
   {
      return
         // metadata
         int{}
            / Meta<>("ENDF_MT") |
         std::optional<std::string>{}
            / Meta<>("fissionGenre") |
         std::string{}
            / Meta<>("label") |
         // children
         transport::CrossSection{}
            / --Child<>("crossSection")
      ;
   }

public:

   using Component::construct;

   // metadata
   Field<Reaction,int> ENDF_MT{this};
   Field<Reaction,std::optional<std::string>> fissionGenre{this};
   Field<Reaction,std::string> label{this};
   // children
   Field<Reaction,transport::CrossSection> crossSection{this};

   // ------------------------
   // Constructors
   // ------------------------

   // default, and from fields
   explicit Reaction(
      const wrapper<int> &ENDF_MT = {},
      const wrapper<std::optional<std::string>> &fissionGenre = {},
      const wrapper<std::string> &label = {},
      const wrapper<transport::CrossSection> &crossSection = {}
   ) :
      Component{
         BlockData{},
         this->ENDF_MT,
         this->fissionGenre,
         this->label,
         this->crossSection
      },
      ENDF_MT(this,ENDF_MT,"ENDF_MT"),
      fissionGenre(this,fissionGenre,"fissionGenre"),
      label(this,label,"label"),
      crossSection(this,crossSection,"crossSection")
   {
      Component::finish();
   }

   // from node
   Reaction(const Node &node) :
      Component{
         BlockData{},
         this->ENDF_MT,
         this->fissionGenre,
         this->label,
         this->crossSection
      },
      ENDF_MT(this,{},"ENDF_MT"),
      fissionGenre(this,{},"fissionGenre"),
      label(this,{},"label"),
      crossSection(this,{},"crossSection")
   {
      Component::finish(node);
   }

   // copy
   Reaction(const Reaction &other) :
      Component{
         other.baseBlockData(),
         this->ENDF_MT,
         this->fissionGenre,
         this->label,
         this->crossSection
      },
      ENDF_MT(this,other.ENDF_MT),
      fissionGenre(this,other.fissionGenre),
      label(this,other.label),
      crossSection(this,other.crossSection)
   {
      Component::finish(other);
   }

   // move
   Reaction(Reaction &&other) :
      Component{
         other.baseBlockData(),
         this->ENDF_MT,
         this->fissionGenre,
         this->label,
         this->crossSection
      },
      ENDF_MT(this,std::move(other.ENDF_MT)),
      fissionGenre(this,std::move(other.fissionGenre)),
      label(this,std::move(other.label)),
      crossSection(this,std::move(other.crossSection))
   {
      Component::finish(other);
   }

   // ------------------------
   // Assignment
   // ------------------------

   Reaction &operator=(const Reaction &) = default;
   Reaction &operator=(Reaction &&) = default;

   // ------------------------
   // Custom functionality
   // ------------------------

   #include "GNDStk/v1.9/transport/Reaction/src/custom.hpp"

}; // class Reaction

} // namespace transport
} // namespace v1_9
} // namespace GNDStk
} // namespace njoy

#endif
