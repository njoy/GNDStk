
// THIS FILE WAS AUTO-GENERATED!
// DO NOT MODIFY!

// This file contains Meta and Child objects for the current GNDS version.
// If someone wishes to use the GNDS Core Interface with the classes that
// we've autogenerated in this context, these should prove to be useful.

#ifndef NJOY_GNDSTK_V1_9_KEY
#define NJOY_GNDSTK_V1_9_KEY

namespace njoy {
namespace GNDStk {
namespace v1_9 {


// -----------------------------------------------------------------------------
// In the outer namespace
// -----------------------------------------------------------------------------

namespace key {

   // Metadata
   namespace meta {
      inline const njoy::GNDStk::core::Meta<>
      ENDF_MT         ("ENDF_MT"),
      evaluation      ("evaluation"),
      fissionGenre    ("fissionGenre"),
      format          ("format"),
      href            ("href"),
      index           ("index"),
      interaction     ("interaction"),
      interpolation   ("interpolation"),
      label           ("label"),
      length          ("length"),
      outerDomainValue("outerDomainValue"),
      projectile      ("projectile"),
      projectileFrame ("projectileFrame"),
      start           ("start"),
      style           ("style"),
      target          ("target"),
      unit            ("unit"),
      valueType       ("valueType");
   }

   // Children
   namespace child {
   }

   // Allow key::something; need meta:: or child:: only if ambiguous
   using namespace meta;
   using namespace child;

} // namespace key


// -----------------------------------------------------------------------------
// In containers::
// -----------------------------------------------------------------------------

namespace containers {
namespace key {

   // Metadata
   namespace meta {
   }

   // Children
   namespace child {
      inline const njoy::GNDStk::core::Child<>
      axes     ("axes"),
      axis     ("axis"),
      grid     ("grid"),
      link     ("link"),
      regions1d("regions1d"),
      values   ("values"),
      XYs1d    ("XYs1d");
   }

   // Allow key::something; need meta:: or child:: only if ambiguous
   using namespace meta;
   using namespace child;

} // namespace key
} // namespace containers


// -----------------------------------------------------------------------------
// In transport::
// -----------------------------------------------------------------------------

namespace transport {
namespace key {

   // Metadata
   namespace meta {
   }

   // Children
   namespace child {
      inline const njoy::GNDStk::core::Child<>
      crossSection ("crossSection"),
      reaction     ("reaction"),
      reactions    ("reactions"),
      reactionSuite("reactionSuite");
   }

   // Allow key::something; need meta:: or child:: only if ambiguous
   using namespace meta;
   using namespace child;

} // namespace key
} // namespace transport

} // namespace v1_9
} // namespace GNDStk
} // namespace njoy

#endif
