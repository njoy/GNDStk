
// THIS FILE WAS AUTOGENERATED!
// DO NOT MODIFY!

#ifndef GNDSTK_V1_9_CONTAINERS_AXIS
#define GNDSTK_V1_9_CONTAINERS_AXIS

#include "GNDStk/v1.9/key.hpp"

namespace njoy {
namespace GNDStk {
namespace v1_9 {
namespace containers {

// -----------------------------------------------------------------------------
// containers::
// class Axis
// -----------------------------------------------------------------------------

class Axis : public Component<containers::Axis> {
   friend class Component;

   // ------------------------
   // For Component
   // ------------------------

   // Names: this namespace, this class, a field/node of this type
   static auto NAMESPACE() { return "containers"; }
   static auto CLASS() { return "Axis"; }
   static auto FIELD() { return "axis"; }

   // Core Interface multi-query to extract metadata and child nodes
   static auto KEYS()
   {
      return
         // metadata
         std::optional<int>{}
            / Meta<>("index") |
         std::optional<std::string>{}
            / Meta<>("label") |
         std::optional<std::string>{}
            / Meta<>("unit")
      ;
   }

public:
   using Component::construct;

   // metadata
   Field<std::optional<int>> index{this};
   Field<std::optional<std::string>> label{this};
   Field<std::optional<std::string>> unit{this};

   // ------------------------
   // Constructors
   // ------------------------

   #define GNDSTK_COMPONENT(blockdata) Component(blockdata, \
      this->index, \
      this->label, \
      this->unit)

   // default, and from fields
   explicit Axis(
      const wrapper<std::optional<int>> &index = {},
      const wrapper<std::optional<std::string>> &label = {},
      const wrapper<std::optional<std::string>> &unit = {}
   ) :
      GNDSTK_COMPONENT(BlockData{}),
      index(this,index),
      label(this,label),
      unit(this,unit)
   {
      Component::finish();
   }

   // from node
   Axis(const Node &node) :
      GNDSTK_COMPONENT(BlockData{})
   {
      Component::finish(node);
   }

   // copy
   Axis(const Axis &other) :
      GNDSTK_COMPONENT(other.baseBlockData())
   {
      *this = other;
      Component::finish(other);
   }

   // move
   Axis(Axis &&other) :
      GNDSTK_COMPONENT(other.baseBlockData())
   {
      *this = std::move(other);
      Component::finish(other);
   }

   // ------------------------
   // Assignment operators
   // ------------------------

   Axis &operator=(const Axis &) = default;
   Axis &operator=(Axis &&) = default;

   // ------------------------
   // Custom functionality
   // ------------------------

   #include "GNDStk/v1.9/containers/Axis/src/custom.hpp"
   #undef GNDSTK_COMPONENT

}; // class Axis

} // namespace containers
} // namespace v1_9
} // namespace GNDStk
} // namespace njoy

#endif
