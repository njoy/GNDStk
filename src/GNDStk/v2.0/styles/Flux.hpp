
// THIS FILE WAS AUTOGENERATED!
// DO NOT MODIFY!

#ifndef NJOY_GNDSTK_V2_0_STYLES_FLUX
#define NJOY_GNDSTK_V2_0_STYLES_FLUX

// core interface
#include "GNDStk.hpp"

// v2.0 dependencies
#include "GNDStk/v2.0/containers/XYs2d.hpp"

namespace njoy {
namespace GNDStk {
namespace v2_0 {

using namespace njoy::GNDStk::core;



// -----------------------------------------------------------------------------
// styles::
// class Flux
// -----------------------------------------------------------------------------

namespace styles {

class Flux : public Component<Flux> {


   // ------------------------
   // For Component
   // ------------------------

   friend class Component;

   // Current namespace, current class, and GNDS node name
   static auto namespaceName() { return "styles"; }
   static auto className() { return "Flux"; }
   static auto GNDSName() { return "flux"; }

   // Core Interface multi-query to extract metadata and child nodes
   static auto keys()
   {
      return
         // metadata
         XMLName{}
            / Meta<>("label") |
         // children
         containers::XYs2d{}
            / --Child<>("XYs2d")
      ;
   }

public:

   using Component::construct;

   // ------------------------
   // Relevant defaults
   // FYI for users
   // ------------------------

   static inline const struct Defaults {
   } defaults;

   // ------------------------
   // Raw GNDS content
   // ------------------------

   struct {
      // metadata
      XMLName label;
      // children
      containers::XYs2d XYs2d;
   } content;

   // ------------------------
   // Getters
   // const and non-const
   // ------------------------

   // label
   const XMLName &label() const
      { return content.label; }
   XMLName &label()
      { return content.label; }

   // XYs2d
   const containers::XYs2d &XYs2d() const
      { return content.XYs2d; }
   containers::XYs2d &XYs2d()
      { return content.XYs2d; }

   // ------------------------
   // Setters
   // non-const
   // All return *this
   // ------------------------

   // label(value)
   Flux &label(const XMLName &obj)
      { label() = obj; return *this; }

   // XYs2d(value)
   Flux &XYs2d(const containers::XYs2d &obj)
      { XYs2d() = obj; return *this; }

   // ------------------------
   // Construction
   // ------------------------

   // default
   Flux() :
      Component{
         BodyText{},
         content.label,
         content.XYs2d
      }
   {
      Component::finish();
   }

   // copy
   Flux(const Flux &other) :
      Component{
         other,
         content.label,
         content.XYs2d
      },
      content{other.content}
   {
      Component::finish(other);
   }

   // move
   Flux(Flux &&other) :
      Component{
         other,
         content.label,
         content.XYs2d
      },
      content{std::move(other.content)}
   {
      Component::finish(other);
   }

   // from node
   Flux(const Node &node) :
      Component{
         BodyText{},
         content.label,
         content.XYs2d
      }
   {
      Component::finish(node);
   }

   // from fields
   explicit Flux(
      const XMLName &label,
      const containers::XYs2d &XYs2d
   ) :
      Component{
         BodyText{},
         content.label,
         content.XYs2d
      },
      content{
         label,
         XYs2d
      }
   {
      Component::finish();
   }

   // ------------------------
   // Assignment
   // ------------------------

   // copy
   Flux &operator=(const Flux &) = default;

   // move
   Flux &operator=(Flux &&) = default;

   // ------------------------
   // Custom functionality
   // ------------------------

   #include "GNDStk/v2.0/styles/Flux/src/custom.hpp"

}; // class Flux

} // namespace styles
} // namespace v2_0
} // namespace GNDStk
} // namespace njoy

#endif
