
// THIS FILE WAS AUTOGENERATED!
// DO NOT MODIFY!

#ifndef NJOY_GNDSTK_V2_0_STYLES_URR_PROBABILITYTABLES
#define NJOY_GNDSTK_V2_0_STYLES_URR_PROBABILITYTABLES

// core interface
#include "GNDStk.hpp"

namespace njoy {
namespace GNDStk {
namespace v2_0 {

using namespace njoy::GNDStk::core;



// -----------------------------------------------------------------------------
// styles::
// class URR_probabilityTables
// -----------------------------------------------------------------------------

namespace styles {

class URR_probabilityTables : public Component<URR_probabilityTables> {


   // ------------------------
   // For Component
   // ------------------------

   friend class Component;

   // Current namespace, current class, and GNDS node name
   static auto namespaceName() { return "styles"; }
   static auto className() { return "URR_probabilityTables"; }
   static auto GNDSName() { return "URR_probabilityTables"; }

   // Core Interface multi-query to extract metadata and child nodes
   static auto keys()
   {
      return
         // metadata
         std::string{}
            / Meta<>("date") |
         XMLName{}
            / Meta<>("derivedFrom") |
         XMLName{}
            / Meta<>("label")
      ;
   }

public:

   using Component::construct;

   // ------------------------
   // Relevant defaults
   // FYI for users
   // ------------------------

   static inline const struct Defaults {
   } defaults;

   // ------------------------
   // Raw GNDS content
   // ------------------------

   struct {
      // metadata
      std::string date;
      XMLName derivedFrom;
      XMLName label;
   } content;

   // ------------------------
   // Getters
   // const and non-const
   // ------------------------

   // date
   const std::string &date() const
      { return content.date; }
   std::string &date()
      { return content.date; }

   // derivedFrom
   const XMLName &derivedFrom() const
      { return content.derivedFrom; }
   XMLName &derivedFrom()
      { return content.derivedFrom; }

   // label
   const XMLName &label() const
      { return content.label; }
   XMLName &label()
      { return content.label; }

   // ------------------------
   // Setters
   // non-const
   // All return *this
   // ------------------------

   // date(value)
   URR_probabilityTables &date(const std::string &obj)
      { date() = obj; return *this; }

   // derivedFrom(value)
   URR_probabilityTables &derivedFrom(const XMLName &obj)
      { derivedFrom() = obj; return *this; }

   // label(value)
   URR_probabilityTables &label(const XMLName &obj)
      { label() = obj; return *this; }

   // ------------------------
   // Construction
   // ------------------------

   // default
   URR_probabilityTables() :
      Component{
         BodyText{},
         content.date,
         content.derivedFrom,
         content.label
      }
   {
      Component::finish();
   }

   // copy
   URR_probabilityTables(const URR_probabilityTables &other) :
      Component{
         other,
         content.date,
         content.derivedFrom,
         content.label
      },
      content{other.content}
   {
      Component::finish(other);
   }

   // move
   URR_probabilityTables(URR_probabilityTables &&other) :
      Component{
         other,
         content.date,
         content.derivedFrom,
         content.label
      },
      content{std::move(other.content)}
   {
      Component::finish(other);
   }

   // from node
   URR_probabilityTables(const Node &node) :
      Component{
         BodyText{},
         content.date,
         content.derivedFrom,
         content.label
      }
   {
      Component::finish(node);
   }

   // from fields
   explicit URR_probabilityTables(
      const std::string &date,
      const XMLName &derivedFrom,
      const XMLName &label
   ) :
      Component{
         BodyText{},
         content.date,
         content.derivedFrom,
         content.label
      },
      content{
         date,
         derivedFrom,
         label
      }
   {
      Component::finish();
   }

   // ------------------------
   // Assignment
   // ------------------------

   // copy
   URR_probabilityTables &operator=(const URR_probabilityTables &) = default;

   // move
   URR_probabilityTables &operator=(URR_probabilityTables &&) = default;

   // ------------------------
   // Custom functionality
   // ------------------------

   #include "GNDStk/v2.0/styles/URR_probabilityTables/src/custom.hpp"

}; // class URR_probabilityTables

} // namespace styles
} // namespace v2_0
} // namespace GNDStk
} // namespace njoy

#endif
