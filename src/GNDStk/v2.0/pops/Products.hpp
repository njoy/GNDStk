
// THIS FILE WAS AUTOGENERATED!
// DO NOT MODIFY!

#ifndef NJOY_GNDSTK_V2_0_POPS_PRODUCTS
#define NJOY_GNDSTK_V2_0_POPS_PRODUCTS

// core interface
#include "GNDStk.hpp"

// v2.0 dependencies
#include "GNDStk/v2.0/pops/Product.hpp"

namespace njoy {
namespace GNDStk {
namespace v2_0 {

using namespace njoy::GNDStk::core;



// -----------------------------------------------------------------------------
// pops::
// class Products
// -----------------------------------------------------------------------------

namespace pops {

class Products : public Component<Products> {


   // ------------------------
   // For Component
   // ------------------------

   friend class Component;

   // Current namespace, current class, and GNDS node name
   static auto namespaceName() { return "pops"; }
   static auto className() { return "Products"; }
   static auto GNDSName() { return "products"; }

   // Core Interface multi-query to extract metadata and child nodes
   static auto keys()
   {
      return
         // children
         pops::Product{}
            / ++Child<>("product")
      ;
   }

public:

   using Component::construct;

   // ------------------------
   // Relevant defaults
   // FYI for users
   // ------------------------

   static inline const struct Defaults {
   } defaults;

   // ------------------------
   // Raw GNDS content
   // ------------------------

   struct {
      // children
      std::vector<pops::Product> product;
   } content;

   // ------------------------
   // Getters
   // const and non-const
   // ------------------------

   // product
   const std::vector<pops::Product> &product() const
      { return content.product; }
   std::vector<pops::Product> &product()
      { return content.product; }

   // product(index)
   const pops::Product &product(const std::size_t index) const
      { return getter(product(), index, "product"); }
   pops::Product &product(const std::size_t index)
      { return getter(product(), index, "product"); }

   // product(label)
   const pops::Product &product(const std::string &label) const
      { return getter(product(), label, "product"); }
   pops::Product &product(const std::string &label)
      { return getter(product(), label, "product"); }

   // ------------------------
   // Setters
   // non-const
   // All return *this
   // ------------------------

   // product(value)
   Products &product(const std::vector<pops::Product> &obj)
      { product() = obj; return *this; }

   // product(index,value)
   Products &product(
      const std::size_t index,
      const pops::Product &obj
   ) {
      product(index) = obj; return *this;
   }

   // product(label,value)
   Products &product(
      const std::string &label,
      const pops::Product &obj
   ) {
      product(label) = obj; return *this;
   }

   // ------------------------
   // Construction
   // ------------------------

   // default
   Products() :
      Component{
         BodyText{},
         content.product
      }
   {
      Component::finish();
   }

   // copy
   Products(const Products &other) :
      Component{
         other,
         content.product
      },
      content{other.content}
   {
      Component::finish(other);
   }

   // move
   Products(Products &&other) :
      Component{
         other,
         content.product
      },
      content{std::move(other.content)}
   {
      Component::finish(other);
   }

   // from node
   Products(const Node &node) :
      Component{
         BodyText{},
         content.product
      }
   {
      Component::finish(node);
   }

   // from fields
   explicit Products(
      const std::vector<pops::Product> &product
   ) :
      Component{
         BodyText{},
         content.product
      },
      content{
         product
      }
   {
      Component::finish();
   }

   // ------------------------
   // Assignment
   // ------------------------

   // copy
   Products &operator=(const Products &) = default;

   // move
   Products &operator=(Products &&) = default;

   // ------------------------
   // Custom functionality
   // ------------------------

   #include "GNDStk/v2.0/pops/Products/src/custom.hpp"

}; // class Products

} // namespace pops
} // namespace v2_0
} // namespace GNDStk
} // namespace njoy

#endif
