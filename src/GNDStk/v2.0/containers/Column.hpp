
// THIS FILE WAS AUTOGENERATED!
// DO NOT MODIFY!

#ifndef NJOY_GNDSTK_V2_0_CONTAINERS_COLUMN
#define NJOY_GNDSTK_V2_0_CONTAINERS_COLUMN

// core interface
#include "GNDStk.hpp"

namespace njoy {
namespace GNDStk {
namespace v2_0 {

using namespace njoy::GNDStk::core;



// -----------------------------------------------------------------------------
// containers::
// class Column
// -----------------------------------------------------------------------------

namespace containers {

class Column : public Component<Column> {


   // ------------------------
   // For Component
   // ------------------------

   friend class Component;

   // Current namespace, current class, and GNDS node name
   static auto namespaceName() { return "containers"; }
   static auto className() { return "Column"; }
   static auto GNDSName() { return "column"; }

   // Core Interface multi-query to extract metadata and child nodes
   static auto keys()
   {
      return
         // metadata
         Integer32{}
            / Meta<>("index") |
         XMLName{}
            / Meta<>("name") |
         std::optional<XMLName>{}
            / Meta<>("types") |
         std::optional<XMLName>{}
            / Meta<>("unit")
      ;
   }

public:

   using Component::construct;

   // ------------------------
   // Relevant defaults
   // FYI for users
   // ------------------------

   static inline const struct Defaults {
   } defaults;

   // ------------------------
   // Raw GNDS content
   // ------------------------

   struct {
      // metadata
      Integer32 index;
      XMLName name;
      std::optional<XMLName> types;
      std::optional<XMLName> unit;
   } content;

   // ------------------------
   // Getters
   // const and non-const
   // ------------------------

   // index
   const Integer32 &index() const
      { return content.index; }
   Integer32 &index()
      { return content.index; }

   // name
   const XMLName &name() const
      { return content.name; }
   XMLName &name()
      { return content.name; }

   // types
   const std::optional<XMLName> &types() const
      { return content.types; }
   std::optional<XMLName> &types()
      { return content.types; }

   // unit
   const std::optional<XMLName> &unit() const
      { return content.unit; }
   std::optional<XMLName> &unit()
      { return content.unit; }

   // ------------------------
   // Setters
   // non-const
   // All return *this
   // ------------------------

   // index(value)
   Column &index(const Integer32 &obj)
      { index() = obj; return *this; }

   // name(value)
   Column &name(const XMLName &obj)
      { name() = obj; return *this; }

   // types(value)
   Column &types(const std::optional<XMLName> &obj)
      { types() = obj; return *this; }

   // unit(value)
   Column &unit(const std::optional<XMLName> &obj)
      { unit() = obj; return *this; }

   // ------------------------
   // Construction
   // ------------------------

   // default
   Column() :
      Component{
         BodyText{},
         content.index,
         content.name,
         content.types,
         content.unit
      }
   {
      Component::finish();
   }

   // copy
   Column(const Column &other) :
      Component{
         other,
         content.index,
         content.name,
         content.types,
         content.unit
      },
      content{other.content}
   {
      Component::finish(other);
   }

   // move
   Column(Column &&other) :
      Component{
         other,
         content.index,
         content.name,
         content.types,
         content.unit
      },
      content{std::move(other.content)}
   {
      Component::finish(other);
   }

   // from node
   Column(const Node &node) :
      Component{
         BodyText{},
         content.index,
         content.name,
         content.types,
         content.unit
      }
   {
      Component::finish(node);
   }

   // from fields
   explicit Column(
      const Integer32 &index,
      const XMLName &name,
      const std::optional<XMLName> &types,
      const std::optional<XMLName> &unit
   ) :
      Component{
         BodyText{},
         content.index,
         content.name,
         content.types,
         content.unit
      },
      content{
         index,
         name,
         types,
         unit
      }
   {
      Component::finish();
   }

   // ------------------------
   // Assignment
   // ------------------------

   // copy
   Column &operator=(const Column &) = default;

   // move
   Column &operator=(Column &&) = default;

   // ------------------------
   // Custom functionality
   // ------------------------

   #include "GNDStk/v2.0/containers/Column/src/custom.hpp"

}; // class Column

} // namespace containers
} // namespace v2_0
} // namespace GNDStk
} // namespace njoy

#endif
