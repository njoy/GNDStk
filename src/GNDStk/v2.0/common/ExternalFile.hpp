
// THIS FILE WAS AUTOGENERATED!
// DO NOT MODIFY!

#ifndef NJOY_GNDSTK_V2_0_COMMON_EXTERNALFILE
#define NJOY_GNDSTK_V2_0_COMMON_EXTERNALFILE

// core interface
#include "GNDStk.hpp"

namespace njoy {
namespace GNDStk {
namespace v2_0 {

using namespace njoy::GNDStk::core;



// -----------------------------------------------------------------------------
// common::
// class ExternalFile
// -----------------------------------------------------------------------------

namespace common {

class ExternalFile : public Component<ExternalFile> {


   // ------------------------
   // For Component
   // ------------------------

   friend class Component;

   // Current namespace, current class, and GNDS node name
   static auto namespaceName() { return "common"; }
   static auto className() { return "ExternalFile"; }
   static auto GNDSName() { return "externalFile"; }

   // Core Interface multi-query to extract metadata and child nodes
   static auto keys()
   {
      return
         // metadata
         std::optional<algorithm>{}
            / Meta<>("algorithm") |
         std::optional<checksum>{}
            / Meta<>("checksum") |
         XMLName{}
            / Meta<>("label") |
         XMLName{}
            / Meta<>("path")
      ;
   }

public:

   using Component::construct;

   // ------------------------
   // Relevant defaults
   // FYI for users
   // ------------------------

   static inline const struct Defaults {
   } defaults;

   // ------------------------
   // Raw GNDS content
   // ------------------------

   struct {
      // metadata
      std::optional<algorithm> algorithm;
      std::optional<checksum> checksum;
      XMLName label;
      XMLName path;
   } content;

   // ------------------------
   // Getters
   // const and non-const
   // ------------------------

   // algorithm
   const std::optional<algorithm> &algorithm() const
      { return content.algorithm; }
   std::optional<algorithm> &algorithm()
      { return content.algorithm; }

   // checksum
   const std::optional<checksum> &checksum() const
      { return content.checksum; }
   std::optional<checksum> &checksum()
      { return content.checksum; }

   // label
   const XMLName &label() const
      { return content.label; }
   XMLName &label()
      { return content.label; }

   // path
   const XMLName &path() const
      { return content.path; }
   XMLName &path()
      { return content.path; }

   // ------------------------
   // Setters
   // non-const
   // All return *this
   // ------------------------

   // algorithm(value)
   ExternalFile &algorithm(const std::optional<algorithm> &obj)
      { algorithm() = obj; return *this; }

   // checksum(value)
   ExternalFile &checksum(const std::optional<checksum> &obj)
      { checksum() = obj; return *this; }

   // label(value)
   ExternalFile &label(const XMLName &obj)
      { label() = obj; return *this; }

   // path(value)
   ExternalFile &path(const XMLName &obj)
      { path() = obj; return *this; }

   // ------------------------
   // Construction
   // ------------------------

   // default
   ExternalFile() :
      Component{
         BodyText{},
         content.algorithm,
         content.checksum,
         content.label,
         content.path
      }
   {
      Component::finish();
   }

   // copy
   ExternalFile(const ExternalFile &other) :
      Component{
         other,
         content.algorithm,
         content.checksum,
         content.label,
         content.path
      },
      content{other.content}
   {
      Component::finish(other);
   }

   // move
   ExternalFile(ExternalFile &&other) :
      Component{
         other,
         content.algorithm,
         content.checksum,
         content.label,
         content.path
      },
      content{std::move(other.content)}
   {
      Component::finish(other);
   }

   // from node
   ExternalFile(const Node &node) :
      Component{
         BodyText{},
         content.algorithm,
         content.checksum,
         content.label,
         content.path
      }
   {
      Component::finish(node);
   }

   // from fields
   explicit ExternalFile(
      const std::optional<algorithm> &algorithm,
      const std::optional<checksum> &checksum,
      const XMLName &label,
      const XMLName &path
   ) :
      Component{
         BodyText{},
         content.algorithm,
         content.checksum,
         content.label,
         content.path
      },
      content{
         algorithm,
         checksum,
         label,
         path
      }
   {
      Component::finish();
   }

   // ------------------------
   // Assignment
   // ------------------------

   // copy
   ExternalFile &operator=(const ExternalFile &) = default;

   // move
   ExternalFile &operator=(ExternalFile &&) = default;

   // ------------------------
   // Custom functionality
   // ------------------------

   #include "GNDStk/v2.0/common/ExternalFile/src/custom.hpp"

}; // class ExternalFile

} // namespace common
} // namespace v2_0
} // namespace GNDStk
} // namespace njoy

#endif
