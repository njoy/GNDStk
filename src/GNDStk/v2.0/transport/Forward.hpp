
// THIS FILE WAS AUTOGENERATED!
// DO NOT MODIFY!

#ifndef NJOY_GNDSTK_V2_0_TRANSPORT_FORWARD
#define NJOY_GNDSTK_V2_0_TRANSPORT_FORWARD

// core interface
#include "GNDStk.hpp"

namespace njoy {
namespace GNDStk {
namespace v2_0 {

using namespace njoy::GNDStk::core;



// -----------------------------------------------------------------------------
// transport::
// class Forward
// -----------------------------------------------------------------------------

namespace transport {

class Forward : public Component<Forward> {


   // ------------------------
   // For Component
   // ------------------------

   friend class Component;

   // Current namespace, current class, and GNDS node name
   static auto namespaceName() { return "transport"; }
   static auto className() { return "Forward"; }
   static auto GNDSName() { return "forward"; }

   // Core Interface multi-query to extract metadata and child nodes
   static auto keys()
   {
      return std::tuple<>{};
   }

public:

   using Component::construct;

   // ------------------------
   // Relevant defaults
   // FYI for users
   // ------------------------

   static inline const struct Defaults {
   } defaults;

   // ------------------------
   // Raw GNDS content
   // ------------------------

   struct {
   } content;

   // ------------------------
   // Construction
   // ------------------------

   // default
   Forward() :
      Component{
         BodyText{}
      }
   {
      Component::finish();
   }

   // copy
   Forward(const Forward &other) :
      Component{
         other
      },
      content{other.content}
   {
      Component::finish(other);
   }

   // move
   Forward(Forward &&other) :
      Component{
         other
      },
      content{std::move(other.content)}
   {
      Component::finish(other);
   }

   // from node
   Forward(const Node &node) :
      Component{
         BodyText{}
      }
   {
      Component::finish(node);
   }

   // ------------------------
   // Assignment
   // ------------------------

   // copy
   Forward &operator=(const Forward &) = default;

   // move
   Forward &operator=(Forward &&) = default;

   // ------------------------
   // Custom functionality
   // ------------------------

   #include "GNDStk/v2.0/transport/Forward/src/custom.hpp"

}; // class Forward

} // namespace transport
} // namespace v2_0
} // namespace GNDStk
} // namespace njoy

#endif
