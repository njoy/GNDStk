
// THIS FILE WAS AUTOGENERATED!
// DO NOT MODIFY!

#ifndef NJOY_GNDSTK_V2_0_TRANSPORT_WEIGHTEDFUNCTIONALS
#define NJOY_GNDSTK_V2_0_TRANSPORT_WEIGHTEDFUNCTIONALS

// core interface
#include "GNDStk.hpp"

// v2.0 dependencies
#include "GNDStk/v2.0/transport/Weighted.hpp"

namespace njoy {
namespace GNDStk {
namespace v2_0 {

using namespace njoy::GNDStk::core;



// -----------------------------------------------------------------------------
// transport::
// class WeightedFunctionals
// -----------------------------------------------------------------------------

namespace transport {

class WeightedFunctionals : public Component<WeightedFunctionals> {


   // ------------------------
   // For Component
   // ------------------------

   friend class Component;

   // Current namespace, current class, and GNDS node name
   static auto namespaceName() { return "transport"; }
   static auto className() { return "WeightedFunctionals"; }
   static auto GNDSName() { return "weightedFunctionals"; }

   // Core Interface multi-query to extract metadata and child nodes
   static auto keys()
   {
      return
         // children
         transport::Weighted{}
            / --Child<>("weighted")
      ;
   }

public:

   using Component::construct;

   // ------------------------
   // Relevant defaults
   // FYI for users
   // ------------------------

   static inline const struct Defaults {
   } defaults;

   // ------------------------
   // Raw GNDS content
   // ------------------------

   struct {
      // children
      transport::Weighted weighted;
   } content;

   // ------------------------
   // Getters
   // const and non-const
   // ------------------------

   // weighted
   const transport::Weighted &weighted() const
      { return content.weighted; }
   transport::Weighted &weighted()
      { return content.weighted; }

   // ------------------------
   // Setters
   // non-const
   // All return *this
   // ------------------------

   // weighted(value)
   WeightedFunctionals &weighted(const transport::Weighted &obj)
      { weighted() = obj; return *this; }

   // ------------------------
   // Construction
   // ------------------------

   // default
   WeightedFunctionals() :
      Component{
         BodyText{},
         content.weighted
      }
   {
      Component::finish();
   }

   // copy
   WeightedFunctionals(const WeightedFunctionals &other) :
      Component{
         other,
         content.weighted
      },
      content{other.content}
   {
      Component::finish(other);
   }

   // move
   WeightedFunctionals(WeightedFunctionals &&other) :
      Component{
         other,
         content.weighted
      },
      content{std::move(other.content)}
   {
      Component::finish(other);
   }

   // from node
   WeightedFunctionals(const Node &node) :
      Component{
         BodyText{},
         content.weighted
      }
   {
      Component::finish(node);
   }

   // from fields
   explicit WeightedFunctionals(
      const transport::Weighted &weighted
   ) :
      Component{
         BodyText{},
         content.weighted
      },
      content{
         weighted
      }
   {
      Component::finish();
   }

   // ------------------------
   // Assignment
   // ------------------------

   // copy
   WeightedFunctionals &operator=(const WeightedFunctionals &) = default;

   // move
   WeightedFunctionals &operator=(WeightedFunctionals &&) = default;

   // ------------------------
   // Custom functionality
   // ------------------------

   #include "GNDStk/v2.0/transport/WeightedFunctionals/src/custom.hpp"

}; // class WeightedFunctionals

} // namespace transport
} // namespace v2_0
} // namespace GNDStk
} // namespace njoy

#endif
