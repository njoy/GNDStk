
// THIS FILE WAS AUTOGENERATED!
// DO NOT MODIFY!

#ifndef NJOY_GNDSTK_V2_0_TRANSPORT_SUMMANDS
#define NJOY_GNDSTK_V2_0_TRANSPORT_SUMMANDS

// core interface
#include "GNDStk.hpp"

// v2.0 dependencies
#include "GNDStk/v2.0/transport/Add.hpp"

namespace njoy {
namespace GNDStk {
namespace v2_0 {

using namespace njoy::GNDStk::core;



// -----------------------------------------------------------------------------
// transport::
// class Summands
// -----------------------------------------------------------------------------

namespace transport {

class Summands : public Component<Summands> {


   // ------------------------
   // For Component
   // ------------------------

   friend class Component;

   // Current namespace, current class, and GNDS node name
   static auto namespaceName() { return "transport"; }
   static auto className() { return "Summands"; }
   static auto GNDSName() { return "summands"; }

   // Core Interface multi-query to extract metadata and child nodes
   static auto keys()
   {
      return
         // children
         std::optional<transport::Add>{}
            / ++Child<>("add")
      ;
   }

public:

   using Component::construct;

   // ------------------------
   // Relevant defaults
   // FYI for users
   // ------------------------

   static inline const struct Defaults {
   } defaults;

   // ------------------------
   // Raw GNDS content
   // ------------------------

   struct {
      // children
      std::optional<std::vector<transport::Add>> add;
   } content;

   // ------------------------
   // Getters
   // const and non-const
   // ------------------------

   // add
   const std::optional<std::vector<transport::Add>> &add() const
      { return content.add; }
   std::optional<std::vector<transport::Add>> &add()
      { return content.add; }

   // add(index)
   const transport::Add &add(const std::size_t index) const
      { return getter(add(), index, "add"); }
   transport::Add &add(const std::size_t index)
      { return getter(add(), index, "add"); }

   // add(label)
   const transport::Add &add(const std::string &label) const
      { return getter(add(), label, "add"); }
   transport::Add &add(const std::string &label)
      { return getter(add(), label, "add"); }

   // ------------------------
   // Setters
   // non-const
   // All return *this
   // ------------------------

   // add(value)
   Summands &add(const std::optional<std::vector<transport::Add>> &obj)
      { add() = obj; return *this; }

   // add(index,value)
   Summands &add(
      const std::size_t index,
      const transport::Add &obj
   ) {
      add(index) = obj; return *this;
   }

   // add(label,value)
   Summands &add(
      const std::string &label,
      const transport::Add &obj
   ) {
      add(label) = obj; return *this;
   }

   // ------------------------
   // Construction
   // ------------------------

   // default
   Summands() :
      Component{
         BodyText{},
         content.add
      }
   {
      Component::finish();
   }

   // copy
   Summands(const Summands &other) :
      Component{
         other,
         content.add
      },
      content{other.content}
   {
      Component::finish(other);
   }

   // move
   Summands(Summands &&other) :
      Component{
         other,
         content.add
      },
      content{std::move(other.content)}
   {
      Component::finish(other);
   }

   // from node
   Summands(const Node &node) :
      Component{
         BodyText{},
         content.add
      }
   {
      Component::finish(node);
   }

   // from fields
   explicit Summands(
      const std::optional<std::vector<transport::Add>> &add
   ) :
      Component{
         BodyText{},
         content.add
      },
      content{
         add
      }
   {
      Component::finish();
   }

   // ------------------------
   // Assignment
   // ------------------------

   // copy
   Summands &operator=(const Summands &) = default;

   // move
   Summands &operator=(Summands &&) = default;

   // ------------------------
   // Custom functionality
   // ------------------------

   #include "GNDStk/v2.0/transport/Summands/src/custom.hpp"

}; // class Summands

} // namespace transport
} // namespace v2_0
} // namespace GNDStk
} // namespace njoy

#endif
