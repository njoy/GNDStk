
// THIS FILE WAS AUTOGENERATED!
// DO NOT MODIFY!

#ifndef NJOY_GNDSTK_V2_0_TRANSPORT_PHOTONEMISSIONPROBABILITIES
#define NJOY_GNDSTK_V2_0_TRANSPORT_PHOTONEMISSIONPROBABILITIES

// core interface
#include "GNDStk.hpp"

// v2.0 dependencies
#include "GNDStk/v2.0/pops/Shell.hpp"

namespace njoy {
namespace GNDStk {
namespace v2_0 {

using namespace njoy::GNDStk::core;



// -----------------------------------------------------------------------------
// transport::
// class PhotonEmissionProbabilities
// -----------------------------------------------------------------------------

namespace transport {

class PhotonEmissionProbabilities : public Component<PhotonEmissionProbabilities> {


   // ------------------------
   // For Component
   // ------------------------

   friend class Component;

   // Current namespace, current class, and GNDS node name
   static auto namespaceName() { return "transport"; }
   static auto className() { return "PhotonEmissionProbabilities"; }
   static auto GNDSName() { return "photonEmissionProbabilities"; }

   // Core Interface multi-query to extract metadata and child nodes
   static auto keys()
   {
      return
         // children
         std::optional<pops::Shell>{}
            / --Child<>("shell")
      ;
   }

public:

   using Component::construct;

   // ------------------------
   // Relevant defaults
   // FYI for users
   // ------------------------

   static inline const struct Defaults {
   } defaults;

   // ------------------------
   // Raw GNDS content
   // ------------------------

   struct {
      // children
      std::optional<pops::Shell> shell;
   } content;

   // ------------------------
   // Getters
   // const and non-const
   // ------------------------

   // shell
   const std::optional<pops::Shell> &shell() const
      { return content.shell; }
   std::optional<pops::Shell> &shell()
      { return content.shell; }

   // ------------------------
   // Setters
   // non-const
   // All return *this
   // ------------------------

   // shell(value)
   PhotonEmissionProbabilities &shell(const std::optional<pops::Shell> &obj)
      { shell() = obj; return *this; }

   // ------------------------
   // Construction
   // ------------------------

   // default
   PhotonEmissionProbabilities() :
      Component{
         BodyText{},
         content.shell
      }
   {
      Component::finish();
   }

   // copy
   PhotonEmissionProbabilities(const PhotonEmissionProbabilities &other) :
      Component{
         other,
         content.shell
      },
      content{other.content}
   {
      Component::finish(other);
   }

   // move
   PhotonEmissionProbabilities(PhotonEmissionProbabilities &&other) :
      Component{
         other,
         content.shell
      },
      content{std::move(other.content)}
   {
      Component::finish(other);
   }

   // from node
   PhotonEmissionProbabilities(const Node &node) :
      Component{
         BodyText{},
         content.shell
      }
   {
      Component::finish(node);
   }

   // from fields
   explicit PhotonEmissionProbabilities(
      const std::optional<pops::Shell> &shell
   ) :
      Component{
         BodyText{},
         content.shell
      },
      content{
         shell
      }
   {
      Component::finish();
   }

   // ------------------------
   // Assignment
   // ------------------------

   // copy
   PhotonEmissionProbabilities &operator=(const PhotonEmissionProbabilities &) = default;

   // move
   PhotonEmissionProbabilities &operator=(PhotonEmissionProbabilities &&) = default;

   // ------------------------
   // Custom functionality
   // ------------------------

   #include "GNDStk/v2.0/transport/PhotonEmissionProbabilities/src/custom.hpp"

}; // class PhotonEmissionProbabilities

} // namespace transport
} // namespace v2_0
} // namespace GNDStk
} // namespace njoy

#endif
