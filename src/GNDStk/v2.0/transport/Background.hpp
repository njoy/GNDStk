
// THIS FILE WAS AUTOGENERATED!
// DO NOT MODIFY!

#ifndef NJOY_GNDSTK_V2_0_TRANSPORT_BACKGROUND
#define NJOY_GNDSTK_V2_0_TRANSPORT_BACKGROUND

// core interface
#include "GNDStk.hpp"

// v2.0 dependencies
#include "GNDStk/v2.0/transport/FastRegion.hpp"
#include "GNDStk/v2.0/transport/ResolvedRegion.hpp"
#include "GNDStk/v2.0/transport/UnresolvedRegion.hpp"

namespace njoy {
namespace GNDStk {
namespace v2_0 {

using namespace njoy::GNDStk::core;



// -----------------------------------------------------------------------------
// transport::
// class Background
// -----------------------------------------------------------------------------

namespace transport {

class Background : public Component<Background> {


   // ------------------------
   // For Component
   // ------------------------

   friend class Component;

   // Current namespace, current class, and GNDS node name
   static auto namespaceName() { return "transport"; }
   static auto className() { return "Background"; }
   static auto GNDSName() { return "background"; }

   // Core Interface multi-query to extract metadata and child nodes
   static auto keys()
   {
      return
         // children
         std::optional<transport::FastRegion>{}
            / --Child<>("fastRegion") |
         std::optional<transport::ResolvedRegion>{}
            / --Child<>("resolvedRegion") |
         std::optional<transport::UnresolvedRegion>{}
            / --Child<>("unresolvedRegion")
      ;
   }

public:

   using Component::construct;

   // ------------------------
   // Relevant defaults
   // FYI for users
   // ------------------------

   static inline const struct Defaults {
   } defaults;

   // ------------------------
   // Raw GNDS content
   // ------------------------

   struct {
      // children
      std::optional<transport::FastRegion> fastRegion;
      std::optional<transport::ResolvedRegion> resolvedRegion;
      std::optional<transport::UnresolvedRegion> unresolvedRegion;
   } content;

   // ------------------------
   // Getters
   // const and non-const
   // ------------------------

   // fastRegion
   const std::optional<transport::FastRegion> &fastRegion() const
      { return content.fastRegion; }
   std::optional<transport::FastRegion> &fastRegion()
      { return content.fastRegion; }

   // resolvedRegion
   const std::optional<transport::ResolvedRegion> &resolvedRegion() const
      { return content.resolvedRegion; }
   std::optional<transport::ResolvedRegion> &resolvedRegion()
      { return content.resolvedRegion; }

   // unresolvedRegion
   const std::optional<transport::UnresolvedRegion> &unresolvedRegion() const
      { return content.unresolvedRegion; }
   std::optional<transport::UnresolvedRegion> &unresolvedRegion()
      { return content.unresolvedRegion; }

   // ------------------------
   // Setters
   // non-const
   // All return *this
   // ------------------------

   // fastRegion(value)
   Background &fastRegion(const std::optional<transport::FastRegion> &obj)
      { fastRegion() = obj; return *this; }

   // resolvedRegion(value)
   Background &resolvedRegion(const std::optional<transport::ResolvedRegion> &obj)
      { resolvedRegion() = obj; return *this; }

   // unresolvedRegion(value)
   Background &unresolvedRegion(const std::optional<transport::UnresolvedRegion> &obj)
      { unresolvedRegion() = obj; return *this; }

   // ------------------------
   // Construction
   // ------------------------

   // default
   Background() :
      Component{
         BodyText{},
         content.fastRegion,
         content.resolvedRegion,
         content.unresolvedRegion
      }
   {
      Component::finish();
   }

   // copy
   Background(const Background &other) :
      Component{
         other,
         content.fastRegion,
         content.resolvedRegion,
         content.unresolvedRegion
      },
      content{other.content}
   {
      Component::finish(other);
   }

   // move
   Background(Background &&other) :
      Component{
         other,
         content.fastRegion,
         content.resolvedRegion,
         content.unresolvedRegion
      },
      content{std::move(other.content)}
   {
      Component::finish(other);
   }

   // from node
   Background(const Node &node) :
      Component{
         BodyText{},
         content.fastRegion,
         content.resolvedRegion,
         content.unresolvedRegion
      }
   {
      Component::finish(node);
   }

   // from fields
   explicit Background(
      const std::optional<transport::FastRegion> &fastRegion,
      const std::optional<transport::ResolvedRegion> &resolvedRegion,
      const std::optional<transport::UnresolvedRegion> &unresolvedRegion
   ) :
      Component{
         BodyText{},
         content.fastRegion,
         content.resolvedRegion,
         content.unresolvedRegion
      },
      content{
         fastRegion,
         resolvedRegion,
         unresolvedRegion
      }
   {
      Component::finish();
   }

   // ------------------------
   // Assignment
   // ------------------------

   // copy
   Background &operator=(const Background &) = default;

   // move
   Background &operator=(Background &&) = default;

   // ------------------------
   // Custom functionality
   // ------------------------

   #include "GNDStk/v2.0/transport/Background/src/custom.hpp"

}; // class Background

} // namespace transport
} // namespace v2_0
} // namespace GNDStk
} // namespace njoy

#endif
