
// THIS FILE WAS AUTOGENERATED!
// DO NOT MODIFY!

#ifndef NJOY_GNDSTK_V2_0_DOCUMENTATION_EXFORDATASET
#define NJOY_GNDSTK_V2_0_DOCUMENTATION_EXFORDATASET

// core interface
#include "GNDStk.hpp"

namespace njoy {
namespace GNDStk {
namespace v2_0 {

using namespace njoy::GNDStk::core;



// -----------------------------------------------------------------------------
// documentation::
// class ExforDataSet
// -----------------------------------------------------------------------------

namespace documentation {

class ExforDataSet : public Component<ExforDataSet> {


   // ------------------------
   // For Component
   // ------------------------

   friend class Component;

   // Current namespace, current class, and GNDS node name
   static auto namespaceName() { return "documentation"; }
   static auto className() { return "ExforDataSet"; }
   static auto GNDSName() { return "exforDataSet"; }

   // Core Interface multi-query to extract metadata and child nodes
   static auto keys()
   {
      return
         // metadata
         XMLName{}
            / Meta<>("retrievalDate") |
         XMLName{}
            / Meta<>("subentry")
      ;
   }

public:

   using Component::construct;

   // ------------------------
   // Relevant defaults
   // FYI for users
   // ------------------------

   static inline const struct Defaults {
   } defaults;

   // ------------------------
   // Raw GNDS content
   // ------------------------

   struct {
      // metadata
      XMLName retrievalDate;
      XMLName subentry;
   } content;

   // ------------------------
   // Getters
   // const and non-const
   // ------------------------

   // retrievalDate
   const XMLName &retrievalDate() const
      { return content.retrievalDate; }
   XMLName &retrievalDate()
      { return content.retrievalDate; }

   // subentry
   const XMLName &subentry() const
      { return content.subentry; }
   XMLName &subentry()
      { return content.subentry; }

   // ------------------------
   // Setters
   // non-const
   // All return *this
   // ------------------------

   // retrievalDate(value)
   ExforDataSet &retrievalDate(const XMLName &obj)
      { retrievalDate() = obj; return *this; }

   // subentry(value)
   ExforDataSet &subentry(const XMLName &obj)
      { subentry() = obj; return *this; }

   // ------------------------
   // Construction
   // ------------------------

   // default
   ExforDataSet() :
      Component{
         BodyText{},
         content.retrievalDate,
         content.subentry
      }
   {
      Component::finish();
   }

   // copy
   ExforDataSet(const ExforDataSet &other) :
      Component{
         other,
         content.retrievalDate,
         content.subentry
      },
      content{other.content}
   {
      Component::finish(other);
   }

   // move
   ExforDataSet(ExforDataSet &&other) :
      Component{
         other,
         content.retrievalDate,
         content.subentry
      },
      content{std::move(other.content)}
   {
      Component::finish(other);
   }

   // from node
   ExforDataSet(const Node &node) :
      Component{
         BodyText{},
         content.retrievalDate,
         content.subentry
      }
   {
      Component::finish(node);
   }

   // from fields
   explicit ExforDataSet(
      const XMLName &retrievalDate,
      const XMLName &subentry
   ) :
      Component{
         BodyText{},
         content.retrievalDate,
         content.subentry
      },
      content{
         retrievalDate,
         subentry
      }
   {
      Component::finish();
   }

   // ------------------------
   // Assignment
   // ------------------------

   // copy
   ExforDataSet &operator=(const ExforDataSet &) = default;

   // move
   ExforDataSet &operator=(ExforDataSet &&) = default;

   // ------------------------
   // Custom functionality
   // ------------------------

   #include "GNDStk/v2.0/documentation/ExforDataSet/src/custom.hpp"

}; // class ExforDataSet

} // namespace documentation
} // namespace v2_0
} // namespace GNDStk
} // namespace njoy

#endif
