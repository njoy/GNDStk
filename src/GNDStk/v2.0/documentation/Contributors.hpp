
// THIS FILE WAS AUTOGENERATED!
// DO NOT MODIFY!

#ifndef NJOY_GNDSTK_V2_0_DOCUMENTATION_CONTRIBUTORS
#define NJOY_GNDSTK_V2_0_DOCUMENTATION_CONTRIBUTORS

// core interface
#include "GNDStk.hpp"

// v2.0 dependencies
#include "GNDStk/v2.0/documentation/Contributor.hpp"

namespace njoy {
namespace GNDStk {
namespace v2_0 {

using namespace njoy::GNDStk::core;



// -----------------------------------------------------------------------------
// documentation::
// class Contributors
// -----------------------------------------------------------------------------

namespace documentation {

class Contributors : public Component<Contributors> {


   // ------------------------
   // For Component
   // ------------------------

   friend class Component;

   // Current namespace, current class, and GNDS node name
   static auto namespaceName() { return "documentation"; }
   static auto className() { return "Contributors"; }
   static auto GNDSName() { return "contributors"; }

   // Core Interface multi-query to extract metadata and child nodes
   static auto keys()
   {
      return
         // children
         documentation::Contributor{}
            / ++Child<>("contributor")
      ;
   }

public:

   using Component::construct;

   // ------------------------
   // Relevant defaults
   // FYI for users
   // ------------------------

   static inline const struct Defaults {
   } defaults;

   // ------------------------
   // Raw GNDS content
   // ------------------------

   struct {
      // children
      std::vector<documentation::Contributor> contributor;
   } content;

   // ------------------------
   // Getters
   // const and non-const
   // ------------------------

   // contributor
   const std::vector<documentation::Contributor> &contributor() const
      { return content.contributor; }
   std::vector<documentation::Contributor> &contributor()
      { return content.contributor; }

   // contributor(index)
   const documentation::Contributor &contributor(const std::size_t index) const
      { return getter(contributor(), index, "contributor"); }
   documentation::Contributor &contributor(const std::size_t index)
      { return getter(contributor(), index, "contributor"); }

   // contributor(label)
   const documentation::Contributor &contributor(const std::string &label) const
      { return getter(contributor(), label, "contributor"); }
   documentation::Contributor &contributor(const std::string &label)
      { return getter(contributor(), label, "contributor"); }

   // ------------------------
   // Setters
   // non-const
   // All return *this
   // ------------------------

   // contributor(value)
   Contributors &contributor(const std::vector<documentation::Contributor> &obj)
      { contributor() = obj; return *this; }

   // contributor(index,value)
   Contributors &contributor(
      const std::size_t index,
      const documentation::Contributor &obj
   ) {
      contributor(index) = obj; return *this;
   }

   // contributor(label,value)
   Contributors &contributor(
      const std::string &label,
      const documentation::Contributor &obj
   ) {
      contributor(label) = obj; return *this;
   }

   // ------------------------
   // Construction
   // ------------------------

   // default
   Contributors() :
      Component{
         BodyText{},
         content.contributor
      }
   {
      Component::finish();
   }

   // copy
   Contributors(const Contributors &other) :
      Component{
         other,
         content.contributor
      },
      content{other.content}
   {
      Component::finish(other);
   }

   // move
   Contributors(Contributors &&other) :
      Component{
         other,
         content.contributor
      },
      content{std::move(other.content)}
   {
      Component::finish(other);
   }

   // from node
   Contributors(const Node &node) :
      Component{
         BodyText{},
         content.contributor
      }
   {
      Component::finish(node);
   }

   // from fields
   explicit Contributors(
      const std::vector<documentation::Contributor> &contributor
   ) :
      Component{
         BodyText{},
         content.contributor
      },
      content{
         contributor
      }
   {
      Component::finish();
   }

   // ------------------------
   // Assignment
   // ------------------------

   // copy
   Contributors &operator=(const Contributors &) = default;

   // move
   Contributors &operator=(Contributors &&) = default;

   // ------------------------
   // Custom functionality
   // ------------------------

   #include "GNDStk/v2.0/documentation/Contributors/src/custom.hpp"

}; // class Contributors

} // namespace documentation
} // namespace v2_0
} // namespace GNDStk
} // namespace njoy

#endif
