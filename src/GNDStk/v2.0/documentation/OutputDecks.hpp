
// THIS FILE WAS AUTOGENERATED!
// DO NOT MODIFY!

#ifndef NJOY_GNDSTK_V2_0_DOCUMENTATION_OUTPUTDECKS
#define NJOY_GNDSTK_V2_0_DOCUMENTATION_OUTPUTDECKS

// core interface
#include "GNDStk.hpp"

// v2.0 dependencies
#include "GNDStk/v2.0/documentation/OutputDeck.hpp"

namespace njoy {
namespace GNDStk {
namespace v2_0 {

using namespace njoy::GNDStk::core;



// -----------------------------------------------------------------------------
// documentation::
// class OutputDecks
// -----------------------------------------------------------------------------

namespace documentation {

class OutputDecks : public Component<OutputDecks> {


   // ------------------------
   // For Component
   // ------------------------

   friend class Component;

   // Current namespace, current class, and GNDS node name
   static auto namespaceName() { return "documentation"; }
   static auto className() { return "OutputDecks"; }
   static auto GNDSName() { return "outputDecks"; }

   // Core Interface multi-query to extract metadata and child nodes
   static auto keys()
   {
      return
         // children
         documentation::OutputDeck{}
            / ++Child<>("outputDeck")
      ;
   }

public:

   using Component::construct;

   // ------------------------
   // Relevant defaults
   // FYI for users
   // ------------------------

   static inline const struct Defaults {
   } defaults;

   // ------------------------
   // Raw GNDS content
   // ------------------------

   struct {
      // children
      std::vector<documentation::OutputDeck> outputDeck;
   } content;

   // ------------------------
   // Getters
   // const and non-const
   // ------------------------

   // outputDeck
   const std::vector<documentation::OutputDeck> &outputDeck() const
      { return content.outputDeck; }
   std::vector<documentation::OutputDeck> &outputDeck()
      { return content.outputDeck; }

   // outputDeck(index)
   const documentation::OutputDeck &outputDeck(const std::size_t index) const
      { return getter(outputDeck(), index, "outputDeck"); }
   documentation::OutputDeck &outputDeck(const std::size_t index)
      { return getter(outputDeck(), index, "outputDeck"); }

   // outputDeck(label)
   const documentation::OutputDeck &outputDeck(const std::string &label) const
      { return getter(outputDeck(), label, "outputDeck"); }
   documentation::OutputDeck &outputDeck(const std::string &label)
      { return getter(outputDeck(), label, "outputDeck"); }

   // ------------------------
   // Setters
   // non-const
   // All return *this
   // ------------------------

   // outputDeck(value)
   OutputDecks &outputDeck(const std::vector<documentation::OutputDeck> &obj)
      { outputDeck() = obj; return *this; }

   // outputDeck(index,value)
   OutputDecks &outputDeck(
      const std::size_t index,
      const documentation::OutputDeck &obj
   ) {
      outputDeck(index) = obj; return *this;
   }

   // outputDeck(label,value)
   OutputDecks &outputDeck(
      const std::string &label,
      const documentation::OutputDeck &obj
   ) {
      outputDeck(label) = obj; return *this;
   }

   // ------------------------
   // Construction
   // ------------------------

   // default
   OutputDecks() :
      Component{
         BodyText{},
         content.outputDeck
      }
   {
      Component::finish();
   }

   // copy
   OutputDecks(const OutputDecks &other) :
      Component{
         other,
         content.outputDeck
      },
      content{other.content}
   {
      Component::finish(other);
   }

   // move
   OutputDecks(OutputDecks &&other) :
      Component{
         other,
         content.outputDeck
      },
      content{std::move(other.content)}
   {
      Component::finish(other);
   }

   // from node
   OutputDecks(const Node &node) :
      Component{
         BodyText{},
         content.outputDeck
      }
   {
      Component::finish(node);
   }

   // from fields
   explicit OutputDecks(
      const std::vector<documentation::OutputDeck> &outputDeck
   ) :
      Component{
         BodyText{},
         content.outputDeck
      },
      content{
         outputDeck
      }
   {
      Component::finish();
   }

   // ------------------------
   // Assignment
   // ------------------------

   // copy
   OutputDecks &operator=(const OutputDecks &) = default;

   // move
   OutputDecks &operator=(OutputDecks &&) = default;

   // ------------------------
   // Custom functionality
   // ------------------------

   #include "GNDStk/v2.0/documentation/OutputDecks/src/custom.hpp"

}; // class OutputDecks

} // namespace documentation
} // namespace v2_0
} // namespace GNDStk
} // namespace njoy

#endif
