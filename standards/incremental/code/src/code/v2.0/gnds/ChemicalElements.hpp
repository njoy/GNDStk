
// THIS FILE WAS AUTOGENERATED!
// DO NOT MODIFY!

#ifndef CODE_V2_0_GNDS_CHEMICALELEMENTS
#define CODE_V2_0_GNDS_CHEMICALELEMENTS

#include "code/v2.0/gnds/ChemicalElement.hpp"

namespace code {
namespace v2_0 {
namespace gnds {

// -----------------------------------------------------------------------------
// gnds::
// class ChemicalElements
// -----------------------------------------------------------------------------

class ChemicalElements : public Component<gnds::ChemicalElements> {
   friend class Component;

   // ------------------------
   // For Component
   // ------------------------

   // Names: this namespace, this class, a field/node of this type
   static auto NAMESPACE() { return "gnds"; }
   static auto CLASS() { return "ChemicalElements"; }
   static auto FIELD() { return "chemicalElements"; }

   // Core Interface multi-query to extract metadata and child nodes
   static auto KEYS()
   {
      return
         // children
         gnds::ChemicalElement{}
            / ++Child<>("chemicalElement")
      ;
   }

public:
   using Component::construct;

   // children
   Field<std::vector<gnds::ChemicalElement>> chemicalElement{this};

   // ------------------------
   // Constructors
   // ------------------------

   #define GNDSTK_COMPONENT(blockdata) Component(blockdata, \
      this->chemicalElement)

   // default, and from fields
   explicit ChemicalElements(
      const wrapper<std::vector<gnds::ChemicalElement>> &chemicalElement = {}
   ) :
      GNDSTK_COMPONENT(BlockData{}),
      chemicalElement(this,chemicalElement)
   {
      Component::finish();
   }

   // from node
   explicit ChemicalElements(const Node &node) :
      GNDSTK_COMPONENT(BlockData{})
   {
      Component::finish(node);
   }

   // copy
   ChemicalElements(const ChemicalElements &other) :
      GNDSTK_COMPONENT(other.baseBlockData())
   {
      *this = other;
      Component::finish(other);
   }

   // move
   ChemicalElements(ChemicalElements &&other) :
      GNDSTK_COMPONENT(other.baseBlockData())
   {
      *this = std::move(other);
      Component::finish(other);
   }

   // ------------------------
   // Assignment operators
   // ------------------------

   ChemicalElements &operator=(const ChemicalElements &) = default;
   ChemicalElements &operator=(ChemicalElements &&) = default;

   // ------------------------
   // Custom functionality
   // ------------------------

   #include "code/v2.0/gnds/ChemicalElements/src/custom.hpp"
   #undef GNDSTK_COMPONENT
}; // class ChemicalElements

} // namespace gnds
} // namespace v2_0
} // namespace code

#endif
