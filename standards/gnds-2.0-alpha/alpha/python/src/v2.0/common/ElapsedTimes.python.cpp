
// THIS FILE WAS AUTOGENERATED!
// DO NOT MODIFY!

// system includes
#include <pybind11/pybind11.h>
#include <pybind11/stl.h>

// local includes
#include "alpha/v2.0/common/ElapsedTimes.hpp"
#include "definitions.hpp"

// namespace aliases
namespace python = pybind11;

namespace python_v2_0 {
namespace python_common {

// ElapsedTimes wrapper
void wrapElapsedTimes(python::module &module)
{
   using namespace alpha;
   using namespace alpha::v2_0;

   // type aliases
   using Component = common::ElapsedTimes;

   // create the component
   python::class_<Component> component(
      module,
      "ElapsedTimes",
      Component::documentation().data()
   );

   // wrap the component
   component
      .def(
         python::init<
            const std::vector<common::ElapsedTime> &
         >(),
         python::arg("elapsed_time"),
         Component::documentation("constructor").data()
      )
      .def_property_readonly(
         "elapsed_time",
         [](const Component &self) { return self.elapsedTime(); },
         Component::documentation("elapsed_time").data()
      )
   ;

   // add standard component definitions
   addStandardComponentDefinitions< Component >( component );
}

} // namespace python_common
} // namespace python_v2_0
