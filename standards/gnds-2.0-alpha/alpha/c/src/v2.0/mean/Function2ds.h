
// THIS FILE WAS AUTOGENERATED!
// DO NOT MODIFY!

// Interface for C
// This header file is designed to work with both C and C++
// Function definitions are in this file's .cpp source

// -----------------------------------------------------------------------------
// -----------------------------------------------------------------------------
// Instructions for Users
//
// Constructs you're MORE likely to care about are preceded with:
//    // +++ remark
// Constructs you're LESS likely to care about are preceded with:
//    // --- remark
// Anything not marked as above can be ignored by most users.
//
// Function2ds is the basic handle type in this file. Example:
//    // Create a default Function2ds object:
//    Function2ds handle = Function2dsDefault();
// Functions involving Function2ds are declared throughout this file.
// -----------------------------------------------------------------------------
// -----------------------------------------------------------------------------


// -----------------------------------------------------------------------------
// Preliminaries
// -----------------------------------------------------------------------------

#ifndef C_INTERFACE_ALPHA_V2_0_MEAN_FUNCTION2DS
#define C_INTERFACE_ALPHA_V2_0_MEAN_FUNCTION2DS

#include "GNDStk.h"
#include "v2.0/mean/XYs2d.h"

#ifdef __cplusplus
   #define extern_c extern "C"
#else
   #define extern_c
#endif

// Proxy C struct for the handled C++ class
struct Function2dsClass { };


// -----------------------------------------------------------------------------
// Handle types
// -----------------------------------------------------------------------------

// +++ Function2ds
// +++ General handle, suitable for most users. If you're not concerned about
// +++ strict "const correctness" in your C code, you can probably use this in
// +++ place of any function parameter of a const-aware handle type.
typedef struct Function2dsClass *Function2ds;

// --- Const-aware handles.
typedef const struct Function2dsClass *const ConstHandle2ConstFunction2ds;
typedef       struct Function2dsClass *const ConstHandle2Function2ds;
typedef const struct Function2dsClass *      Handle2ConstFunction2ds;
typedef       struct Function2dsClass *      Handle2Function2ds;


// -----------------------------------------------------------------------------
// Basics
// Create, Assign, Delete
// -----------------------------------------------------------------------------

// --- Create, default, const
extern_c Handle2ConstFunction2ds
Function2dsDefaultConst();

// +++ Create, default
extern_c Handle2Function2ds
Function2dsDefault();

// --- Create, general, const
extern_c Handle2ConstFunction2ds
Function2dsCreateConst(
   ConstHandle2XYs2d *const XYs2d, const size_t XYs2dSize
);

// +++ Create, general
extern_c Handle2Function2ds
Function2dsCreate(
   ConstHandle2XYs2d *const XYs2d, const size_t XYs2dSize
);

// +++ Assign
// +++ Use this to assign one handled object to another. Don't assign handles,
// +++ as with to = from. That has a meaning that you probably don't intend.
extern_c void
Function2dsAssign(ConstHandle2Function2ds This, ConstHandle2ConstFunction2ds from);

// +++ Delete
// +++ We'll attempt to remove no-longer-used objects automatically, but you
// +++ may improve performance if you delete them when you're done with them.
extern_c void
Function2dsDelete(ConstHandle2ConstFunction2ds This);


// -----------------------------------------------------------------------------
// I/O
// Read, Write, Print
// Each returns 0 if failure, 1 if success.
// -----------------------------------------------------------------------------

// +++ Read from file
// +++ File can be XML, JSON, or HDF5.
// +++ We'll examine the file's contents to determine its type automatically.
extern_c int
Function2dsRead(ConstHandle2Function2ds This, const char *const filename);

// +++ Write to file
// +++ File can be XML, JSON, or HDF5.
// +++ We'll use filename's extension to determine the type you want written.
extern_c int
Function2dsWrite(ConstHandle2ConstFunction2ds This, const char *const filename);

// +++ Print to standard output, in our prettyprinting format
extern_c int
Function2dsPrint(ConstHandle2ConstFunction2ds This);

// +++ Print to standard output, as XML
extern_c int
Function2dsPrintXML(ConstHandle2ConstFunction2ds This);

// +++ Print to standard output, as JSON
extern_c int
Function2dsPrintJSON(ConstHandle2ConstFunction2ds This);


// -----------------------------------------------------------------------------
// Child: XYs2d
// -----------------------------------------------------------------------------

// +++ Has
extern_c int
Function2dsXYs2dHas(ConstHandle2ConstFunction2ds This);

// +++ Clear
extern_c void
Function2dsXYs2dClear(ConstHandle2Function2ds This);

// +++ Size
extern_c size_t
Function2dsXYs2dSize(ConstHandle2ConstFunction2ds This);

// +++ Add
extern_c void
Function2dsXYs2dAdd(ConstHandle2Function2ds This, ConstHandle2ConstXYs2d XYs2d);

// --- Get, by index \in [0,size), const
extern_c Handle2ConstXYs2d
Function2dsXYs2dGetConst(ConstHandle2ConstFunction2ds This, const size_t index_);

// +++ Get, by index \in [0,size), non-const
extern_c Handle2XYs2d
Function2dsXYs2dGet(ConstHandle2Function2ds This, const size_t index_);

// +++ Set, by index \in [0,size)
extern_c void
Function2dsXYs2dSet(
   ConstHandle2Function2ds This,
   const size_t index_,
   ConstHandle2ConstXYs2d XYs2d
);

// +++ Has, by index
extern_c int
Function2dsXYs2dHasByIndex(
   ConstHandle2ConstFunction2ds This,
   const int index
);

// --- Get, by index, const
extern_c Handle2ConstXYs2d
Function2dsXYs2dGetByIndexConst(
   ConstHandle2ConstFunction2ds This,
   const int index
);

// +++ Get, by index, non-const
extern_c Handle2XYs2d
Function2dsXYs2dGetByIndex(
   ConstHandle2Function2ds This,
   const int index
);

// +++ Set, by index
extern_c void
Function2dsXYs2dSetByIndex(
   ConstHandle2Function2ds This,
   const int index,
   ConstHandle2ConstXYs2d XYs2d
);

// +++ Has, by interpolation
extern_c int
Function2dsXYs2dHasByInterpolation(
   ConstHandle2ConstFunction2ds This,
   const char *const interpolation
);

// --- Get, by interpolation, const
extern_c Handle2ConstXYs2d
Function2dsXYs2dGetByInterpolationConst(
   ConstHandle2ConstFunction2ds This,
   const char *const interpolation
);

// +++ Get, by interpolation, non-const
extern_c Handle2XYs2d
Function2dsXYs2dGetByInterpolation(
   ConstHandle2Function2ds This,
   const char *const interpolation
);

// +++ Set, by interpolation
extern_c void
Function2dsXYs2dSetByInterpolation(
   ConstHandle2Function2ds This,
   const char *const interpolation,
   ConstHandle2ConstXYs2d XYs2d
);

// +++ Has, by interpolationQualifier
extern_c int
Function2dsXYs2dHasByInterpolationQualifier(
   ConstHandle2ConstFunction2ds This,
   const char *const interpolationQualifier
);

// --- Get, by interpolationQualifier, const
extern_c Handle2ConstXYs2d
Function2dsXYs2dGetByInterpolationQualifierConst(
   ConstHandle2ConstFunction2ds This,
   const char *const interpolationQualifier
);

// +++ Get, by interpolationQualifier, non-const
extern_c Handle2XYs2d
Function2dsXYs2dGetByInterpolationQualifier(
   ConstHandle2Function2ds This,
   const char *const interpolationQualifier
);

// +++ Set, by interpolationQualifier
extern_c void
Function2dsXYs2dSetByInterpolationQualifier(
   ConstHandle2Function2ds This,
   const char *const interpolationQualifier,
   ConstHandle2ConstXYs2d XYs2d
);

// +++ Has, by outerDomainValue
extern_c int
Function2dsXYs2dHasByOuterDomainValue(
   ConstHandle2ConstFunction2ds This,
   const double outerDomainValue
);

// --- Get, by outerDomainValue, const
extern_c Handle2ConstXYs2d
Function2dsXYs2dGetByOuterDomainValueConst(
   ConstHandle2ConstFunction2ds This,
   const double outerDomainValue
);

// +++ Get, by outerDomainValue, non-const
extern_c Handle2XYs2d
Function2dsXYs2dGetByOuterDomainValue(
   ConstHandle2Function2ds This,
   const double outerDomainValue
);

// +++ Set, by outerDomainValue
extern_c void
Function2dsXYs2dSetByOuterDomainValue(
   ConstHandle2Function2ds This,
   const double outerDomainValue,
   ConstHandle2ConstXYs2d XYs2d
);


// -----------------------------------------------------------------------------
// Custom functionality
// -----------------------------------------------------------------------------

#include "v2.0/mean/Function2ds/src/custom.h"

#undef extern_c
#endif
