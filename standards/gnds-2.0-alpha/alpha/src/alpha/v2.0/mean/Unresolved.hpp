
// THIS FILE WAS AUTOGENERATED!
// DO NOT MODIFY!

#ifndef ALPHA_V2_0_MEAN_UNRESOLVED
#define ALPHA_V2_0_MEAN_UNRESOLVED

#include "alpha/v2.0/mean/TabulatedWidths.hpp"

namespace alpha {
namespace v2_0 {
namespace mean {

// -----------------------------------------------------------------------------
// mean::
// class Unresolved
// -----------------------------------------------------------------------------

class Unresolved :
   public Component<mean::Unresolved>
{
   friend class Component;

   // ------------------------
   // For Component
   // ------------------------

   // Names: this namespace, this class, and a field/node of this type
   static auto NAMESPACE() { return "mean"; }
   static auto CLASS() { return "Unresolved"; }
   static auto FIELD() { return "unresolved"; }

   // Core Interface multi-query to transfer information to/from Nodes
   static auto KEYS()
   {
      return
         // comment
         ++Child<std::string>(special::comment) / CommentConverter{} |

         // metadata
         double{}
            / Meta<>("domainMin") |
         double{}
            / Meta<>("domainMax") |
         std::string{}
            / Meta<>("domainUnit") |

         // children
         --Child<mean::TabulatedWidths>("tabulatedWidths")
      ;
   }

public:
   using Component::construct;

   // comment
   Field<std::vector<std::string>> comment{this};

   // metadata
   Field<double> domainMin{this};
   Field<double> domainMax{this};
   Field<std::string> domainUnit{this};

   // children
   Field<mean::TabulatedWidths> tabulatedWidths{this};

   // ------------------------
   // Constructors
   // ------------------------

   #define GNDSTK_COMPONENT(blockdata) Component(blockdata, \
      this->comment, \
      this->domainMin, \
      this->domainMax, \
      this->domainUnit, \
      this->tabulatedWidths)

   // default
   Unresolved() :
      GNDSTK_COMPONENT(BlockData{})
   {
      Component::finish();
   }

   // from fields, comment excluded
   explicit Unresolved(
      const wrapper<double> &domainMin,
      const wrapper<double> &domainMax = {},
      const wrapper<std::string> &domainUnit = {},
      const wrapper<mean::TabulatedWidths> &tabulatedWidths = {}
   ) :
      GNDSTK_COMPONENT(BlockData{}),
      domainMin(this,domainMin),
      domainMax(this,domainMax),
      domainUnit(this,domainUnit),
      tabulatedWidths(this,tabulatedWidths)
   {
      Component::finish();
   }

   // from node
   explicit Unresolved(const Node &node) :
      GNDSTK_COMPONENT(BlockData{})
   {
      Component::finish(node);
   }

   // copy
   Unresolved(const Unresolved &other) :
      GNDSTK_COMPONENT(other.baseBlockData()),
      comment(this,other.comment),
      domainMin(this,other.domainMin),
      domainMax(this,other.domainMax),
      domainUnit(this,other.domainUnit),
      tabulatedWidths(this,other.tabulatedWidths)
   {
      Component::finish(other);
   }

   // move
   Unresolved(Unresolved &&other) :
      GNDSTK_COMPONENT(other.baseBlockData()),
      comment(this,std::move(other.comment)),
      domainMin(this,std::move(other.domainMin)),
      domainMax(this,std::move(other.domainMax)),
      domainUnit(this,std::move(other.domainUnit)),
      tabulatedWidths(this,std::move(other.tabulatedWidths))
   {
      Component::finish(other);
   }

   // ------------------------
   // Assignment operators
   // ------------------------

   Unresolved &operator=(const Unresolved &) = default;
   Unresolved &operator=(Unresolved &&) = default;

   // ------------------------
   // Custom functionality
   // ------------------------

   #include "alpha/v2.0/mean/Unresolved/src/custom.hpp"
   #undef GNDSTK_COMPONENT
}; // class Unresolved

} // namespace mean
} // namespace v2_0
} // namespace alpha

#endif
