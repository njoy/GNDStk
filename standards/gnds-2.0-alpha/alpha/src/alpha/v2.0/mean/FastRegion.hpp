
// THIS FILE WAS AUTOGENERATED!
// DO NOT MODIFY!

#ifndef ALPHA_V2_0_MEAN_FASTREGION
#define ALPHA_V2_0_MEAN_FASTREGION

#include "alpha/v2.0/common/XYs1d.hpp"
#include "alpha/v2.0/mean/Regions1d.hpp"

namespace alpha {
namespace v2_0 {
namespace mean {

// -----------------------------------------------------------------------------
// mean::
// class FastRegion
// -----------------------------------------------------------------------------

class FastRegion :
   public Component<mean::FastRegion>
{
   friend class Component;

   // ------------------------
   // For Component
   // ------------------------

   // Names: this namespace, this class, and a field/node of this type
   static auto NAMESPACE() { return "mean"; }
   static auto CLASS() { return "FastRegion"; }
   static auto FIELD() { return "fastRegion"; }

   // Core Interface multi-query to transfer information to/from Nodes
   static auto KEYS()
   {
      return
         // comment
         ++Child<std::string>(special::comment) / CommentConverter{} |

         // children
         --Child<std::optional<common::XYs1d>>("XYs1d") |
         --Child<std::optional<mean::Regions1d>>("regions1d")
      ;
   }

public:
   using Component::construct;

   // comment
   Field<std::vector<std::string>> comment{this};

   // children
   Field<std::optional<common::XYs1d>> XYs1d{this};
   Field<std::optional<mean::Regions1d>> regions1d{this};

   // ------------------------
   // Constructors
   // ------------------------

   #define GNDSTK_COMPONENT(blockdata) Component(blockdata, \
      this->comment, \
      this->XYs1d, \
      this->regions1d)

   // default
   FastRegion() :
      GNDSTK_COMPONENT(BlockData{})
   {
      Component::finish();
   }

   // from fields, comment excluded
   explicit FastRegion(
      const wrapper<std::optional<common::XYs1d>> &XYs1d,
      const wrapper<std::optional<mean::Regions1d>> &regions1d = {}
   ) :
      GNDSTK_COMPONENT(BlockData{}),
      XYs1d(this,XYs1d),
      regions1d(this,regions1d)
   {
      Component::finish();
   }

   // from node
   explicit FastRegion(const Node &node) :
      GNDSTK_COMPONENT(BlockData{})
   {
      Component::finish(node);
   }

   // copy
   FastRegion(const FastRegion &other) :
      GNDSTK_COMPONENT(other.baseBlockData()),
      comment(this,other.comment),
      XYs1d(this,other.XYs1d),
      regions1d(this,other.regions1d)
   {
      Component::finish(other);
   }

   // move
   FastRegion(FastRegion &&other) :
      GNDSTK_COMPONENT(other.baseBlockData()),
      comment(this,std::move(other.comment)),
      XYs1d(this,std::move(other.XYs1d)),
      regions1d(this,std::move(other.regions1d))
   {
      Component::finish(other);
   }

   // ------------------------
   // Assignment operators
   // ------------------------

   FastRegion &operator=(const FastRegion &) = default;
   FastRegion &operator=(FastRegion &&) = default;

   // ------------------------
   // Custom functionality
   // ------------------------

   #include "alpha/v2.0/mean/FastRegion/src/custom.hpp"
   #undef GNDSTK_COMPONENT
}; // class FastRegion

} // namespace mean
} // namespace v2_0
} // namespace alpha

#endif
