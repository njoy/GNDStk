
// THIS FILE WAS AUTOGENERATED!
// DO NOT MODIFY!

#ifndef ALPHA_V2_0_MEAN_REGIONS2D
#define ALPHA_V2_0_MEAN_REGIONS2D

#include "alpha/v2.0/common/Axes.hpp"
#include "alpha/v2.0/mean/Function2ds.hpp"
#include "alpha/v2.0/common/Uncertainty.hpp"

namespace alpha {
namespace v2_0 {
namespace mean {

// -----------------------------------------------------------------------------
// mean::
// class Regions2d
// -----------------------------------------------------------------------------

class Regions2d :
   public Component<mean::Regions2d>
{
   friend class Component;

   // ------------------------
   // For Component
   // ------------------------

   // Names: this namespace, this class, and a field/node of this type
   static auto NAMESPACE() { return "mean"; }
   static auto CLASS() { return "Regions2d"; }
   static auto FIELD() { return "regions2d"; }

   // Core Interface multi-query to transfer information to/from Nodes
   static auto KEYS()
   {
      return
         // comment
         ++Child<std::string>(special::comment) / CommentConverter{} |

         // children
         --Child<common::Axes>("axes") |
         --Child<mean::Function2ds>("function2ds") |
         --Child<std::optional<common::Uncertainty>>("uncertainty")
      ;
   }

public:
   using Component::construct;

   // comment
   Field<std::vector<std::string>> comment{this};

   // children
   Field<common::Axes> axes{this};
   Field<mean::Function2ds> function2ds{this};
   Field<std::optional<common::Uncertainty>> uncertainty{this};

   // ------------------------
   // Constructors
   // ------------------------

   #define GNDSTK_COMPONENT(blockdata) Component(blockdata, \
      this->comment, \
      this->axes, \
      this->function2ds, \
      this->uncertainty)

   // default
   Regions2d() :
      GNDSTK_COMPONENT(BlockData{})
   {
      Component::finish();
   }

   // from fields, comment excluded
   explicit Regions2d(
      const wrapper<common::Axes> &axes,
      const wrapper<mean::Function2ds> &function2ds = {},
      const wrapper<std::optional<common::Uncertainty>> &uncertainty = {}
   ) :
      GNDSTK_COMPONENT(BlockData{}),
      axes(this,axes),
      function2ds(this,function2ds),
      uncertainty(this,uncertainty)
   {
      Component::finish();
   }

   // from node
   explicit Regions2d(const Node &node) :
      GNDSTK_COMPONENT(BlockData{})
   {
      Component::finish(node);
   }

   // copy
   Regions2d(const Regions2d &other) :
      GNDSTK_COMPONENT(other.baseBlockData()),
      comment(this,other.comment),
      axes(this,other.axes),
      function2ds(this,other.function2ds),
      uncertainty(this,other.uncertainty)
   {
      Component::finish(other);
   }

   // move
   Regions2d(Regions2d &&other) :
      GNDSTK_COMPONENT(other.baseBlockData()),
      comment(this,std::move(other.comment)),
      axes(this,std::move(other.axes)),
      function2ds(this,std::move(other.function2ds)),
      uncertainty(this,std::move(other.uncertainty))
   {
      Component::finish(other);
   }

   // ------------------------
   // Assignment operators
   // ------------------------

   Regions2d &operator=(const Regions2d &) = default;
   Regions2d &operator=(Regions2d &&) = default;

   // ------------------------
   // Custom functionality
   // ------------------------

   #include "alpha/v2.0/mean/Regions2d/src/custom.hpp"
   #undef GNDSTK_COMPONENT
}; // class Regions2d

} // namespace mean
} // namespace v2_0
} // namespace alpha

#endif
