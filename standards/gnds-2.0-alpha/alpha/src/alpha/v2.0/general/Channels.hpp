
// THIS FILE WAS AUTOGENERATED!
// DO NOT MODIFY!

#ifndef ALPHA_V2_0_GENERAL_CHANNELS
#define ALPHA_V2_0_GENERAL_CHANNELS

#include "alpha/v2.0/general/Channel.hpp"

namespace alpha {
namespace v2_0 {
namespace general {

// -----------------------------------------------------------------------------
// general::
// class Channels
// -----------------------------------------------------------------------------

class Channels :
   public Component<general::Channels>
{
   friend class Component;

   // ------------------------
   // For Component
   // ------------------------

   // Names: this namespace, this class, and a field/node of this type
   static auto NAMESPACE() { return "general"; }
   static auto CLASS() { return "Channels"; }
   static auto FIELD() { return "channels"; }

   // Core Interface multi-query to transfer information to/from Nodes
   static auto KEYS()
   {
      return
         // comment
         ++Child<std::string>(special::comment) / CommentConverter{} |

         // children
         ++Child<general::Channel>
            ("channel")
      ;
   }

public:
   using Component::construct;

   // comment
   Field<std::vector<std::string>> comment{this};

   // children
   Field<std::vector<general::Channel>>
      channel{this};

   // ------------------------
   // Constructors
   // ------------------------

   #define GNDSTK_COMPONENT(blockdata) Component(blockdata, \
      this->comment, \
      this->channel)

   // default
   Channels() :
      GNDSTK_COMPONENT(BlockData{})
   {
      Component::finish();
   }

   // from fields, comment excluded
   explicit Channels(
      const wrapper<std::vector<general::Channel>>
         &channel
   ) :
      GNDSTK_COMPONENT(BlockData{}),
      channel(this,channel)
   {
      Component::finish();
   }

   // from node
   explicit Channels(const Node &node) :
      GNDSTK_COMPONENT(BlockData{})
   {
      Component::finish(node);
   }

   // copy
   Channels(const Channels &other) :
      GNDSTK_COMPONENT(other.baseBlockData()),
      comment(this,other.comment),
      channel(this,other.channel)
   {
      Component::finish(other);
   }

   // move
   Channels(Channels &&other) :
      GNDSTK_COMPONENT(other.baseBlockData()),
      comment(this,std::move(other.comment)),
      channel(this,std::move(other.channel))
   {
      Component::finish(other);
   }

   // ------------------------
   // Assignment operators
   // ------------------------

   // copy
   Channels &operator=(const Channels &other)
   {
      if (this != &other) {
         Component::operator=(other);
         comment = other.comment;
         channel = other.channel;
      }
      return *this;
   }

   // move
   Channels &operator=(Channels &&other)
   {
      if (this != &other) {
         Component::operator=(std::move(other));
         comment = std::move(other.comment);
         channel = std::move(other.channel);
      }
      return *this;
   }

   // ------------------------
   // Custom functionality
   // ------------------------

   #include "alpha/v2.0/general/Channels/src/custom.hpp"
   #undef GNDSTK_COMPONENT
}; // class Channels

} // namespace general
} // namespace v2_0
} // namespace alpha

#endif
