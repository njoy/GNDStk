
// THIS FILE WAS AUTOGENERATED!
// DO NOT MODIFY!

#ifndef ALPHA_V2_0_COMMON_ALIASES
#define ALPHA_V2_0_COMMON_ALIASES

#include "alpha/v2.0/common/Alias.hpp"
#include "alpha/v2.0/common/MetaStable.hpp"

namespace alpha {
namespace v2_0 {
namespace common {

// -----------------------------------------------------------------------------
// common::
// class Aliases
// -----------------------------------------------------------------------------

class Aliases :
   public Component<common::Aliases>
{
   friend class Component;

   // ------------------------
   // For Component
   // ------------------------

   // Names: this namespace, this class, and a field/node of this type
   static auto NAMESPACE() { return "common"; }
   static auto CLASS() { return "Aliases"; }
   static auto FIELD() { return "aliases"; }

   // Core Interface multi-query to transfer information to/from Nodes
   static auto KEYS()
   {
      return
         // comment
         ++Child<std::string>(special::comment) / CommentConverter{} |

         // children
         ++Child<std::optional<common::Alias>>("alias") |
         ++Child<std::optional<common::MetaStable>>("metaStable")
      ;
   }

public:
   using Component::construct;

   // comment
   Field<std::vector<std::string>> comment{this};

   // children
   Field<std::optional<std::vector<common::Alias>>> alias{this};
   Field<std::optional<std::vector<common::MetaStable>>> metaStable{this};

   // ------------------------
   // Constructors
   // ------------------------

   #define GNDSTK_COMPONENT(blockdata) Component(blockdata, \
      this->comment, \
      this->alias, \
      this->metaStable)

   // default
   Aliases() :
      GNDSTK_COMPONENT(BlockData{})
   {
      Component::finish();
   }

   // from fields, comment excluded
   explicit Aliases(
      const wrapper<std::optional<std::vector<common::Alias>>> &alias,
      const wrapper<std::optional<std::vector<common::MetaStable>>> &metaStable = {}
   ) :
      GNDSTK_COMPONENT(BlockData{}),
      alias(this,alias),
      metaStable(this,metaStable)
   {
      Component::finish();
   }

   // from node
   explicit Aliases(const Node &node) :
      GNDSTK_COMPONENT(BlockData{})
   {
      Component::finish(node);
   }

   // copy
   Aliases(const Aliases &other) :
      GNDSTK_COMPONENT(other.baseBlockData()),
      comment(this,other.comment),
      alias(this,other.alias),
      metaStable(this,other.metaStable)
   {
      Component::finish(other);
   }

   // move
   Aliases(Aliases &&other) :
      GNDSTK_COMPONENT(other.baseBlockData()),
      comment(this,std::move(other.comment)),
      alias(this,std::move(other.alias)),
      metaStable(this,std::move(other.metaStable))
   {
      Component::finish(other);
   }

   // ------------------------
   // Assignment operators
   // ------------------------

   Aliases &operator=(const Aliases &) = default;
   Aliases &operator=(Aliases &&) = default;

   // ------------------------
   // Custom functionality
   // ------------------------

   #include "alpha/v2.0/common/Aliases/src/custom.hpp"
   #undef GNDSTK_COMPONENT
}; // class Aliases

} // namespace common
} // namespace v2_0
} // namespace alpha

#endif
