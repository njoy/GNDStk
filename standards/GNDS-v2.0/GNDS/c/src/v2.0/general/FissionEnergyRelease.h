
// THIS FILE WAS AUTOGENERATED!
// DO NOT MODIFY!

// Interface for C
// This header file is designed to work with both C and C++
// Function definitions are in this file's .cpp source

// -----------------------------------------------------------------------------
// -----------------------------------------------------------------------------
// Instructions for Users
//
// Constructs you're MORE likely to care about are preceded with:
//    // +++ remark
// Constructs you're LESS likely to care about are preceded with:
//    // --- remark
// Anything not marked as above can be ignored by most users.
//
// FissionEnergyRelease is the basic handle type in this file. Example:
//    // Create a default FissionEnergyRelease object:
//    FissionEnergyRelease handle = FissionEnergyReleaseDefault();
// Functions involving FissionEnergyRelease are declared throughout this file.
// -----------------------------------------------------------------------------
// -----------------------------------------------------------------------------


// -----------------------------------------------------------------------------
// Preliminaries
// -----------------------------------------------------------------------------

#ifndef C_INTERFACE_GNDS_V2_0_GENERAL_FISSIONENERGYRELEASE
#define C_INTERFACE_GNDS_V2_0_GENERAL_FISSIONENERGYRELEASE

#include "GNDStk.h"
#include "v2.0/general/PromptProductKE.h"
#include "v2.0/general/PromptNeutronKE.h"
#include "v2.0/general/DelayedNeutronKE.h"
#include "v2.0/general/PromptGammaEnergy.h"
#include "v2.0/general/DelayedGammaEnergy.h"
#include "v2.0/general/DelayedBetaEnergy.h"
#include "v2.0/general/NeutrinoEnergy.h"
#include "v2.0/general/NonNeutrinoEnergy.h"
#include "v2.0/general/TotalEnergy.h"

#ifdef __cplusplus
   #define extern_c extern "C"
#else
   #define extern_c
#endif

// Proxy C struct for the handled C++ class
struct FissionEnergyReleaseClass { };


// -----------------------------------------------------------------------------
// Handle types
// -----------------------------------------------------------------------------

// +++ FissionEnergyRelease
// +++ General handle, suitable for most users. If you're not concerned about
// +++ strict "const correctness" in your C code, you can probably use this in
// +++ place of any function parameter of a const-aware handle type.
typedef struct FissionEnergyReleaseClass *FissionEnergyRelease;

// --- Const-aware handles.
typedef const struct FissionEnergyReleaseClass *const ConstHandle2ConstFissionEnergyRelease;
typedef       struct FissionEnergyReleaseClass *const ConstHandle2FissionEnergyRelease;
typedef const struct FissionEnergyReleaseClass *      Handle2ConstFissionEnergyRelease;
typedef       struct FissionEnergyReleaseClass *      Handle2FissionEnergyRelease;


// -----------------------------------------------------------------------------
// Basics
// Create, Assign, Delete
// -----------------------------------------------------------------------------

// --- Create, default, const
extern_c Handle2ConstFissionEnergyRelease
FissionEnergyReleaseDefaultConst();

// +++ Create, default
extern_c Handle2FissionEnergyRelease
FissionEnergyReleaseDefault();

// --- Create, general, const
extern_c Handle2ConstFissionEnergyRelease
FissionEnergyReleaseCreateConst(
   const char *const label,
   ConstHandle2ConstPromptProductKE promptProductKE,
   ConstHandle2ConstPromptNeutronKE promptNeutronKE,
   ConstHandle2ConstDelayedNeutronKE delayedNeutronKE,
   ConstHandle2ConstPromptGammaEnergy promptGammaEnergy,
   ConstHandle2ConstDelayedGammaEnergy delayedGammaEnergy,
   ConstHandle2ConstDelayedBetaEnergy delayedBetaEnergy,
   ConstHandle2ConstNeutrinoEnergy neutrinoEnergy,
   ConstHandle2ConstNonNeutrinoEnergy nonNeutrinoEnergy,
   ConstHandle2ConstTotalEnergy totalEnergy
);

// +++ Create, general
extern_c Handle2FissionEnergyRelease
FissionEnergyReleaseCreate(
   const char *const label,
   ConstHandle2ConstPromptProductKE promptProductKE,
   ConstHandle2ConstPromptNeutronKE promptNeutronKE,
   ConstHandle2ConstDelayedNeutronKE delayedNeutronKE,
   ConstHandle2ConstPromptGammaEnergy promptGammaEnergy,
   ConstHandle2ConstDelayedGammaEnergy delayedGammaEnergy,
   ConstHandle2ConstDelayedBetaEnergy delayedBetaEnergy,
   ConstHandle2ConstNeutrinoEnergy neutrinoEnergy,
   ConstHandle2ConstNonNeutrinoEnergy nonNeutrinoEnergy,
   ConstHandle2ConstTotalEnergy totalEnergy
);

// +++ Assign
// +++ Use this to assign one handled object to another. Don't assign handles,
// +++ as with to = from. That has a meaning that you probably don't intend.
extern_c void
FissionEnergyReleaseAssign(ConstHandle2FissionEnergyRelease self, ConstHandle2ConstFissionEnergyRelease from);

// +++ Delete
// +++ We'll attempt to remove no-longer-used objects automatically, but you
// +++ may improve performance if you delete them when you're done with them.
extern_c void
FissionEnergyReleaseDelete(ConstHandle2ConstFissionEnergyRelease self);


// -----------------------------------------------------------------------------
// I/O
// Read, Write, Print
// Each returns 0 if failure, 1 if success.
// -----------------------------------------------------------------------------

// +++ Read from file
// +++ File can be XML, JSON, or HDF5.
// +++ We'll examine the file's contents to determine its type automatically.
extern_c int
FissionEnergyReleaseRead(ConstHandle2FissionEnergyRelease self, const char *const filename);

// +++ Write to file
// +++ File can be XML, JSON, or HDF5.
// +++ We'll use filename's extension to determine the type you want written.
extern_c int
FissionEnergyReleaseWrite(ConstHandle2ConstFissionEnergyRelease self, const char *const filename);

// +++ Print to standard output, in our prettyprinting format
extern_c int
FissionEnergyReleasePrint(ConstHandle2ConstFissionEnergyRelease self);

// +++ Print to standard output, as XML
extern_c int
FissionEnergyReleasePrintXML(ConstHandle2ConstFissionEnergyRelease self);

// +++ Print to standard output, as JSON
extern_c int
FissionEnergyReleasePrintJSON(ConstHandle2ConstFissionEnergyRelease self);


// -----------------------------------------------------------------------------
// Metadatum: label
// -----------------------------------------------------------------------------

// +++ Has
extern_c int
FissionEnergyReleaseLabelHas(ConstHandle2ConstFissionEnergyRelease self);

// +++ Get
// +++ Returns by value
extern_c const char *
FissionEnergyReleaseLabelGet(ConstHandle2ConstFissionEnergyRelease self);

// +++ Set
extern_c void
FissionEnergyReleaseLabelSet(ConstHandle2FissionEnergyRelease self, const char *const label);


// -----------------------------------------------------------------------------
// Child: promptProductKE
// -----------------------------------------------------------------------------

// +++ Has
extern_c int
FissionEnergyReleasePromptProductKEHas(ConstHandle2ConstFissionEnergyRelease self);

// --- Get, const
extern_c Handle2ConstPromptProductKE
FissionEnergyReleasePromptProductKEGetConst(ConstHandle2ConstFissionEnergyRelease self);

// +++ Get, non-const
extern_c Handle2PromptProductKE
FissionEnergyReleasePromptProductKEGet(ConstHandle2FissionEnergyRelease self);

// +++ Set
extern_c void
FissionEnergyReleasePromptProductKESet(ConstHandle2FissionEnergyRelease self, ConstHandle2ConstPromptProductKE promptProductKE);


// -----------------------------------------------------------------------------
// Child: promptNeutronKE
// -----------------------------------------------------------------------------

// +++ Has
extern_c int
FissionEnergyReleasePromptNeutronKEHas(ConstHandle2ConstFissionEnergyRelease self);

// --- Get, const
extern_c Handle2ConstPromptNeutronKE
FissionEnergyReleasePromptNeutronKEGetConst(ConstHandle2ConstFissionEnergyRelease self);

// +++ Get, non-const
extern_c Handle2PromptNeutronKE
FissionEnergyReleasePromptNeutronKEGet(ConstHandle2FissionEnergyRelease self);

// +++ Set
extern_c void
FissionEnergyReleasePromptNeutronKESet(ConstHandle2FissionEnergyRelease self, ConstHandle2ConstPromptNeutronKE promptNeutronKE);


// -----------------------------------------------------------------------------
// Child: delayedNeutronKE
// -----------------------------------------------------------------------------

// +++ Has
extern_c int
FissionEnergyReleaseDelayedNeutronKEHas(ConstHandle2ConstFissionEnergyRelease self);

// --- Get, const
extern_c Handle2ConstDelayedNeutronKE
FissionEnergyReleaseDelayedNeutronKEGetConst(ConstHandle2ConstFissionEnergyRelease self);

// +++ Get, non-const
extern_c Handle2DelayedNeutronKE
FissionEnergyReleaseDelayedNeutronKEGet(ConstHandle2FissionEnergyRelease self);

// +++ Set
extern_c void
FissionEnergyReleaseDelayedNeutronKESet(ConstHandle2FissionEnergyRelease self, ConstHandle2ConstDelayedNeutronKE delayedNeutronKE);


// -----------------------------------------------------------------------------
// Child: promptGammaEnergy
// -----------------------------------------------------------------------------

// +++ Has
extern_c int
FissionEnergyReleasePromptGammaEnergyHas(ConstHandle2ConstFissionEnergyRelease self);

// --- Get, const
extern_c Handle2ConstPromptGammaEnergy
FissionEnergyReleasePromptGammaEnergyGetConst(ConstHandle2ConstFissionEnergyRelease self);

// +++ Get, non-const
extern_c Handle2PromptGammaEnergy
FissionEnergyReleasePromptGammaEnergyGet(ConstHandle2FissionEnergyRelease self);

// +++ Set
extern_c void
FissionEnergyReleasePromptGammaEnergySet(ConstHandle2FissionEnergyRelease self, ConstHandle2ConstPromptGammaEnergy promptGammaEnergy);


// -----------------------------------------------------------------------------
// Child: delayedGammaEnergy
// -----------------------------------------------------------------------------

// +++ Has
extern_c int
FissionEnergyReleaseDelayedGammaEnergyHas(ConstHandle2ConstFissionEnergyRelease self);

// --- Get, const
extern_c Handle2ConstDelayedGammaEnergy
FissionEnergyReleaseDelayedGammaEnergyGetConst(ConstHandle2ConstFissionEnergyRelease self);

// +++ Get, non-const
extern_c Handle2DelayedGammaEnergy
FissionEnergyReleaseDelayedGammaEnergyGet(ConstHandle2FissionEnergyRelease self);

// +++ Set
extern_c void
FissionEnergyReleaseDelayedGammaEnergySet(ConstHandle2FissionEnergyRelease self, ConstHandle2ConstDelayedGammaEnergy delayedGammaEnergy);


// -----------------------------------------------------------------------------
// Child: delayedBetaEnergy
// -----------------------------------------------------------------------------

// +++ Has
extern_c int
FissionEnergyReleaseDelayedBetaEnergyHas(ConstHandle2ConstFissionEnergyRelease self);

// --- Get, const
extern_c Handle2ConstDelayedBetaEnergy
FissionEnergyReleaseDelayedBetaEnergyGetConst(ConstHandle2ConstFissionEnergyRelease self);

// +++ Get, non-const
extern_c Handle2DelayedBetaEnergy
FissionEnergyReleaseDelayedBetaEnergyGet(ConstHandle2FissionEnergyRelease self);

// +++ Set
extern_c void
FissionEnergyReleaseDelayedBetaEnergySet(ConstHandle2FissionEnergyRelease self, ConstHandle2ConstDelayedBetaEnergy delayedBetaEnergy);


// -----------------------------------------------------------------------------
// Child: neutrinoEnergy
// -----------------------------------------------------------------------------

// +++ Has
extern_c int
FissionEnergyReleaseNeutrinoEnergyHas(ConstHandle2ConstFissionEnergyRelease self);

// --- Get, const
extern_c Handle2ConstNeutrinoEnergy
FissionEnergyReleaseNeutrinoEnergyGetConst(ConstHandle2ConstFissionEnergyRelease self);

// +++ Get, non-const
extern_c Handle2NeutrinoEnergy
FissionEnergyReleaseNeutrinoEnergyGet(ConstHandle2FissionEnergyRelease self);

// +++ Set
extern_c void
FissionEnergyReleaseNeutrinoEnergySet(ConstHandle2FissionEnergyRelease self, ConstHandle2ConstNeutrinoEnergy neutrinoEnergy);


// -----------------------------------------------------------------------------
// Child: nonNeutrinoEnergy
// -----------------------------------------------------------------------------

// +++ Has
extern_c int
FissionEnergyReleaseNonNeutrinoEnergyHas(ConstHandle2ConstFissionEnergyRelease self);

// --- Get, const
extern_c Handle2ConstNonNeutrinoEnergy
FissionEnergyReleaseNonNeutrinoEnergyGetConst(ConstHandle2ConstFissionEnergyRelease self);

// +++ Get, non-const
extern_c Handle2NonNeutrinoEnergy
FissionEnergyReleaseNonNeutrinoEnergyGet(ConstHandle2FissionEnergyRelease self);

// +++ Set
extern_c void
FissionEnergyReleaseNonNeutrinoEnergySet(ConstHandle2FissionEnergyRelease self, ConstHandle2ConstNonNeutrinoEnergy nonNeutrinoEnergy);


// -----------------------------------------------------------------------------
// Child: totalEnergy
// -----------------------------------------------------------------------------

// +++ Has
extern_c int
FissionEnergyReleaseTotalEnergyHas(ConstHandle2ConstFissionEnergyRelease self);

// --- Get, const
extern_c Handle2ConstTotalEnergy
FissionEnergyReleaseTotalEnergyGetConst(ConstHandle2ConstFissionEnergyRelease self);

// +++ Get, non-const
extern_c Handle2TotalEnergy
FissionEnergyReleaseTotalEnergyGet(ConstHandle2FissionEnergyRelease self);

// +++ Set
extern_c void
FissionEnergyReleaseTotalEnergySet(ConstHandle2FissionEnergyRelease self, ConstHandle2ConstTotalEnergy totalEnergy);


// -----------------------------------------------------------------------------
// Custom functionality
// -----------------------------------------------------------------------------

#include "v2.0/general/FissionEnergyRelease/src/custom.h"

#undef extern_c
#endif
