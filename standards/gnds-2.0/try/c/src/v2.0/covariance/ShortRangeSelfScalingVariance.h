
// THIS FILE WAS AUTOGENERATED!
// DO NOT MODIFY!

// Interface for C
// This header file is designed to work with both C and C++
// Function definitions are in this file's .cpp source

// -----------------------------------------------------------------------------
// -----------------------------------------------------------------------------
// Instructions for Users
//
// Constructs you're MORE likely to care about are preceded with:
//    // +++ comment
// Constructs you're LESS likely to care about are preceded with:
//    // --- comment
// Anything not marked as above can be ignored by most users.
//
// ShortRangeSelfScalingVariance is the basic handle type in this file. Example:
//    // Create a default ShortRangeSelfScalingVariance object:
//    ShortRangeSelfScalingVariance handle = ShortRangeSelfScalingVarianceDefault();
// Functions involving ShortRangeSelfScalingVariance are declared throughout this file.
// -----------------------------------------------------------------------------
// -----------------------------------------------------------------------------


// -----------------------------------------------------------------------------
// Preliminaries
// -----------------------------------------------------------------------------

#ifndef C_INTERFACE_TRY_V2_0_COVARIANCE_SHORTRANGESELFSCALINGVARIANCE
#define C_INTERFACE_TRY_V2_0_COVARIANCE_SHORTRANGESELFSCALINGVARIANCE

#include "GNDStk.h"
#include "v2.0/containers/Gridded2d.h"

#ifdef __cplusplus
   #define extern_c extern "C"
#else
   #define extern_c
#endif

// Proxy C struct for the handled C++ class
struct ShortRangeSelfScalingVarianceClass { };


// -----------------------------------------------------------------------------
// Handle types
// -----------------------------------------------------------------------------

// +++ ShortRangeSelfScalingVariance
// +++ General handle, suitable for most users. If you're not concerned about
// +++ strict "const correctness" in your C code, you can probably use this in
// +++ place of any function parameter of a const-aware handle type.
typedef struct ShortRangeSelfScalingVarianceClass *ShortRangeSelfScalingVariance;

// --- Const-aware handles.
typedef const struct ShortRangeSelfScalingVarianceClass *const ConstHandle2ConstShortRangeSelfScalingVariance;
typedef       struct ShortRangeSelfScalingVarianceClass *const ConstHandle2ShortRangeSelfScalingVariance;
typedef const struct ShortRangeSelfScalingVarianceClass *      Handle2ConstShortRangeSelfScalingVariance;
typedef       struct ShortRangeSelfScalingVarianceClass *      Handle2ShortRangeSelfScalingVariance;


// -----------------------------------------------------------------------------
// Basics
// Create, Assign, Delete
// -----------------------------------------------------------------------------

// --- Create, default, const
extern_c Handle2ConstShortRangeSelfScalingVariance
ShortRangeSelfScalingVarianceDefaultConst();

// +++ Create, default
extern_c Handle2ShortRangeSelfScalingVariance
ShortRangeSelfScalingVarianceDefault();

// --- Create, general, const
extern_c Handle2ConstShortRangeSelfScalingVariance
ShortRangeSelfScalingVarianceCreateConst(
   const XMLName dependenceOnProcessedGroupWidth,
   const XMLName label,
   const XMLName type,
   ConstHandle2ConstGridded2d gridded2d
);

// +++ Create, general
extern_c Handle2ShortRangeSelfScalingVariance
ShortRangeSelfScalingVarianceCreate(
   const XMLName dependenceOnProcessedGroupWidth,
   const XMLName label,
   const XMLName type,
   ConstHandle2ConstGridded2d gridded2d
);

// +++ Assign
// +++ Use this to assign one handled object to another. Don't assign handles,
// +++ as with to = from. That has a meaning that you probably don't intend.
extern_c void
ShortRangeSelfScalingVarianceAssign(ConstHandle2ShortRangeSelfScalingVariance This, ConstHandle2ConstShortRangeSelfScalingVariance from);

// +++ Delete
// +++ We'll attempt to remove no-longer-used objects automatically, but you
// +++ may improve performance if you delete them when you're done with them.
extern_c void
ShortRangeSelfScalingVarianceDelete(ConstHandle2ConstShortRangeSelfScalingVariance This);


// -----------------------------------------------------------------------------
// I/O
// Read, Write, Print
// Each returns 0 if failure, 1 if success.
// -----------------------------------------------------------------------------

// +++ Read from file
// +++ File can be XML, JSON, or HDF5.
// +++ We'll examine the file's contents to determine its type automatically.
extern_c int
ShortRangeSelfScalingVarianceRead(ConstHandle2ShortRangeSelfScalingVariance This, const char *const filename);

// +++ Write to file
// +++ File can be XML, JSON, or HDF5.
// +++ We'll use filename's extension to determine the type you want written.
extern_c int
ShortRangeSelfScalingVarianceWrite(ConstHandle2ConstShortRangeSelfScalingVariance This, const char *const filename);

// +++ Print to standard output, in our prettyprinting format
extern_c int
ShortRangeSelfScalingVariancePrint(ConstHandle2ConstShortRangeSelfScalingVariance This);

// +++ Print to standard output, as XML
extern_c int
ShortRangeSelfScalingVariancePrintXML(ConstHandle2ConstShortRangeSelfScalingVariance This);

// +++ Print to standard output, as JSON
extern_c int
ShortRangeSelfScalingVariancePrintJSON(ConstHandle2ConstShortRangeSelfScalingVariance This);


// -----------------------------------------------------------------------------
// Metadatum: dependenceOnProcessedGroupWidth
// -----------------------------------------------------------------------------

// +++ Has
extern_c int
ShortRangeSelfScalingVarianceDependenceOnProcessedGroupWidthHas(ConstHandle2ConstShortRangeSelfScalingVariance This);

// +++ Get
// +++ Returns by value
extern_c XMLName
ShortRangeSelfScalingVarianceDependenceOnProcessedGroupWidthGet(ConstHandle2ConstShortRangeSelfScalingVariance This);

// +++ Set
extern_c void
ShortRangeSelfScalingVarianceDependenceOnProcessedGroupWidthSet(ConstHandle2ShortRangeSelfScalingVariance This, const XMLName dependenceOnProcessedGroupWidth);


// -----------------------------------------------------------------------------
// Metadatum: label
// -----------------------------------------------------------------------------

// +++ Has
extern_c int
ShortRangeSelfScalingVarianceLabelHas(ConstHandle2ConstShortRangeSelfScalingVariance This);

// +++ Get
// +++ Returns by value
extern_c XMLName
ShortRangeSelfScalingVarianceLabelGet(ConstHandle2ConstShortRangeSelfScalingVariance This);

// +++ Set
extern_c void
ShortRangeSelfScalingVarianceLabelSet(ConstHandle2ShortRangeSelfScalingVariance This, const XMLName label);


// -----------------------------------------------------------------------------
// Metadatum: type
// -----------------------------------------------------------------------------

// +++ Has
extern_c int
ShortRangeSelfScalingVarianceTypeHas(ConstHandle2ConstShortRangeSelfScalingVariance This);

// +++ Get
// +++ Returns by value
extern_c XMLName
ShortRangeSelfScalingVarianceTypeGet(ConstHandle2ConstShortRangeSelfScalingVariance This);

// +++ Set
extern_c void
ShortRangeSelfScalingVarianceTypeSet(ConstHandle2ShortRangeSelfScalingVariance This, const XMLName type);


// -----------------------------------------------------------------------------
// Child: gridded2d
// -----------------------------------------------------------------------------

// +++ Has
extern_c int
ShortRangeSelfScalingVarianceGridded2dHas(ConstHandle2ConstShortRangeSelfScalingVariance This);

// --- Get, const
extern_c Handle2ConstGridded2d
ShortRangeSelfScalingVarianceGridded2dGetConst(ConstHandle2ConstShortRangeSelfScalingVariance This);

// +++ Get, non-const
extern_c Handle2Gridded2d
ShortRangeSelfScalingVarianceGridded2dGet(ConstHandle2ShortRangeSelfScalingVariance This);

// +++ Set
extern_c void
ShortRangeSelfScalingVarianceGridded2dSet(ConstHandle2ShortRangeSelfScalingVariance This, ConstHandle2ConstGridded2d gridded2d);


// -----------------------------------------------------------------------------
// Done
// -----------------------------------------------------------------------------

#undef extern_c
#endif
