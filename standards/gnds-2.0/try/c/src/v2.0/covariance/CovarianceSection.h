
// THIS FILE WAS AUTOGENERATED!
// DO NOT MODIFY!

// Interface for C
// This header file is designed to work with both C and C++
// Function definitions are in this file's .cpp source

// -----------------------------------------------------------------------------
// -----------------------------------------------------------------------------
// Instructions for Users
//
// Constructs you're MORE likely to care about are preceded with:
//    // +++ comment
// Constructs you're LESS likely to care about are preceded with:
//    // --- comment
// Anything not marked as above can be ignored by most users.
//
// CovarianceSection is the basic handle type in this file. Example:
//    // Create a default CovarianceSection object:
//    CovarianceSection handle = CovarianceSectionDefault();
// Functions involving CovarianceSection are declared throughout this file.
// -----------------------------------------------------------------------------
// -----------------------------------------------------------------------------


// -----------------------------------------------------------------------------
// Preliminaries
// -----------------------------------------------------------------------------

#ifndef C_INTERFACE_TRY_V2_0_COVARIANCE_COVARIANCESECTION
#define C_INTERFACE_TRY_V2_0_COVARIANCE_COVARIANCESECTION

#include "GNDStk.h"
#include "v2.0/covariance/RowData.h"
#include "v2.0/covariance/ColumnData.h"
#include "v2.0/covariance/CovarianceMatrix.h"
#include "v2.0/covariance/Sum.h"
#include "v2.0/covariance/Mixed.h"

#ifdef __cplusplus
   #define extern_c extern "C"
#else
   #define extern_c
#endif

// Proxy C struct for the handled C++ class
struct CovarianceSectionClass { };


// -----------------------------------------------------------------------------
// Handle types
// -----------------------------------------------------------------------------

// +++ CovarianceSection
// +++ General handle, suitable for most users. If you're not concerned about
// +++ strict "const correctness" in your C code, you can probably use this in
// +++ place of any function parameter of a const-aware handle type.
typedef struct CovarianceSectionClass *CovarianceSection;

// --- Const-aware handles.
typedef const struct CovarianceSectionClass *const ConstHandle2ConstCovarianceSection;
typedef       struct CovarianceSectionClass *const ConstHandle2CovarianceSection;
typedef const struct CovarianceSectionClass *      Handle2ConstCovarianceSection;
typedef       struct CovarianceSectionClass *      Handle2CovarianceSection;


// -----------------------------------------------------------------------------
// Basics
// Create, Assign, Delete
// -----------------------------------------------------------------------------

// --- Create, default, const
extern_c Handle2ConstCovarianceSection
CovarianceSectionDefaultConst();

// +++ Create, default
extern_c Handle2CovarianceSection
CovarianceSectionDefault();

// --- Create, general, const
extern_c Handle2ConstCovarianceSection
CovarianceSectionCreateConst(
   const bool crossTerm,
   const XMLName label,
   ConstHandle2ConstRowData rowData,
   ConstHandle2ConstColumnData columnData,
);

// +++ Create, general
extern_c Handle2CovarianceSection
CovarianceSectionCreate(
   const bool crossTerm,
   const XMLName label,
   ConstHandle2ConstRowData rowData,
   ConstHandle2ConstColumnData columnData,
);

// +++ Assign
// +++ Use this to assign one handled object to another. Don't assign handles,
// +++ as with to = from. That has a meaning that you probably don't intend.
extern_c void
CovarianceSectionAssign(ConstHandle2CovarianceSection This, ConstHandle2ConstCovarianceSection from);

// +++ Delete
// +++ We'll attempt to remove no-longer-used objects automatically, but you
// +++ may improve performance if you delete them when you're done with them.
extern_c void
CovarianceSectionDelete(ConstHandle2ConstCovarianceSection This);


// -----------------------------------------------------------------------------
// I/O
// Read, Write, Print
// Each returns 0 if failure, 1 if success.
// -----------------------------------------------------------------------------

// +++ Read from file
// +++ File can be XML, JSON, or HDF5.
// +++ We'll examine the file's contents to determine its type automatically.
extern_c int
CovarianceSectionRead(ConstHandle2CovarianceSection This, const char *const filename);

// +++ Write to file
// +++ File can be XML, JSON, or HDF5.
// +++ We'll use filename's extension to determine the type you want written.
extern_c int
CovarianceSectionWrite(ConstHandle2ConstCovarianceSection This, const char *const filename);

// +++ Print to standard output, in our prettyprinting format
extern_c int
CovarianceSectionPrint(ConstHandle2ConstCovarianceSection This);

// +++ Print to standard output, as XML
extern_c int
CovarianceSectionPrintXML(ConstHandle2ConstCovarianceSection This);

// +++ Print to standard output, as JSON
extern_c int
CovarianceSectionPrintJSON(ConstHandle2ConstCovarianceSection This);


// -----------------------------------------------------------------------------
// Metadatum: crossTerm
// -----------------------------------------------------------------------------

// +++ Has
extern_c int
CovarianceSectionCrossTermHas(ConstHandle2ConstCovarianceSection This);

// +++ Get
// +++ Returns by value
extern_c bool
CovarianceSectionCrossTermGet(ConstHandle2ConstCovarianceSection This);

// +++ Set
extern_c void
CovarianceSectionCrossTermSet(ConstHandle2CovarianceSection This, const bool crossTerm);


// -----------------------------------------------------------------------------
// Metadatum: label
// -----------------------------------------------------------------------------

// +++ Has
extern_c int
CovarianceSectionLabelHas(ConstHandle2ConstCovarianceSection This);

// +++ Get
// +++ Returns by value
extern_c XMLName
CovarianceSectionLabelGet(ConstHandle2ConstCovarianceSection This);

// +++ Set
extern_c void
CovarianceSectionLabelSet(ConstHandle2CovarianceSection This, const XMLName label);


// -----------------------------------------------------------------------------
// Child: rowData
// -----------------------------------------------------------------------------

// +++ Has
extern_c int
CovarianceSectionRowDataHas(ConstHandle2ConstCovarianceSection This);

// --- Get, const
extern_c Handle2ConstRowData
CovarianceSectionRowDataGetConst(ConstHandle2ConstCovarianceSection This);

// +++ Get, non-const
extern_c Handle2RowData
CovarianceSectionRowDataGet(ConstHandle2CovarianceSection This);

// +++ Set
extern_c void
CovarianceSectionRowDataSet(ConstHandle2CovarianceSection This, ConstHandle2ConstRowData rowData);


// -----------------------------------------------------------------------------
// Child: columnData
// -----------------------------------------------------------------------------

// +++ Has
extern_c int
CovarianceSectionColumnDataHas(ConstHandle2ConstCovarianceSection This);

// --- Get, const
extern_c Handle2ConstColumnData
CovarianceSectionColumnDataGetConst(ConstHandle2ConstCovarianceSection This);

// +++ Get, non-const
extern_c Handle2ColumnData
CovarianceSectionColumnDataGet(ConstHandle2CovarianceSection This);

// +++ Set
extern_c void
CovarianceSectionColumnDataSet(ConstHandle2CovarianceSection This, ConstHandle2ConstColumnData columnData);


// -----------------------------------------------------------------------------
// Done
// -----------------------------------------------------------------------------

#undef extern_c
#endif
