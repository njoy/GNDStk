
// THIS FILE WAS AUTOGENERATED!
// DO NOT MODIFY!

// Interface for C
// This header file is designed to work with both C and C++
// Function definitions are in this file's .cpp source

// -----------------------------------------------------------------------------
// -----------------------------------------------------------------------------
// Instructions for Users
//
// Constructs you're MORE likely to care about are preceded with:
//    // +++ comment
// Constructs you're LESS likely to care about are preceded with:
//    // --- comment
// Anything not marked as above can be ignored by most users.
//
// ExforDataSet is the basic handle type in this file. Example:
//    // Create a default ExforDataSet object:
//    ExforDataSet handle = ExforDataSetDefault();
// Functions involving ExforDataSet are declared throughout this file.
// -----------------------------------------------------------------------------
// -----------------------------------------------------------------------------


// -----------------------------------------------------------------------------
// Preliminaries
// -----------------------------------------------------------------------------

#ifndef C_INTERFACE_TRY_V2_0_DOCUMENTATION_EXFORDATASET
#define C_INTERFACE_TRY_V2_0_DOCUMENTATION_EXFORDATASET

#include "GNDStk.h"
#include "v2.0/documentation/CovarianceScript.h"
#include "v2.0/documentation/CorrectionScript.h"
#include "v2.0/documentation/Note.h"

#ifdef __cplusplus
   #define extern_c extern "C"
#else
   #define extern_c
#endif

// Proxy C struct for the handled C++ class
struct ExforDataSetClass { };


// -----------------------------------------------------------------------------
// Handle types
// -----------------------------------------------------------------------------

// +++ ExforDataSet
// +++ General handle, suitable for most users. If you're not concerned about
// +++ strict "const correctness" in your C code, you can probably use this in
// +++ place of any function parameter of a const-aware handle type.
typedef struct ExforDataSetClass *ExforDataSet;

// --- Const-aware handles.
typedef const struct ExforDataSetClass *const ConstHandle2ConstExforDataSet;
typedef       struct ExforDataSetClass *const ConstHandle2ExforDataSet;
typedef const struct ExforDataSetClass *      Handle2ConstExforDataSet;
typedef       struct ExforDataSetClass *      Handle2ExforDataSet;


// -----------------------------------------------------------------------------
// Basics
// Create, Assign, Delete
// -----------------------------------------------------------------------------

// --- Create, default, const
extern_c Handle2ConstExforDataSet
ExforDataSetDefaultConst();

// +++ Create, default
extern_c Handle2ExforDataSet
ExforDataSetDefault();

// --- Create, general, const
extern_c Handle2ConstExforDataSet
ExforDataSetCreateConst(
   const XMLName subentry,
   const char *const retrievalDate,
   ConstHandle2ConstCovarianceScript covarianceScript,
   ConstHandle2ConstCorrectionScript correctionScript,
   ConstHandle2ConstNote note
);

// +++ Create, general
extern_c Handle2ExforDataSet
ExforDataSetCreate(
   const XMLName subentry,
   const char *const retrievalDate,
   ConstHandle2ConstCovarianceScript covarianceScript,
   ConstHandle2ConstCorrectionScript correctionScript,
   ConstHandle2ConstNote note
);

// +++ Assign
// +++ Use this to assign one handled object to another. Don't assign handles,
// +++ as with to = from. That has a meaning that you probably don't intend.
extern_c void
ExforDataSetAssign(ConstHandle2ExforDataSet This, ConstHandle2ConstExforDataSet from);

// +++ Delete
// +++ We'll attempt to remove no-longer-used objects automatically, but you
// +++ may improve performance if you delete them when you're done with them.
extern_c void
ExforDataSetDelete(ConstHandle2ConstExforDataSet This);


// -----------------------------------------------------------------------------
// I/O
// Read, Write, Print
// Each returns 0 if failure, 1 if success.
// -----------------------------------------------------------------------------

// +++ Read from file
// +++ File can be XML, JSON, or HDF5.
// +++ We'll examine the file's contents to determine its type automatically.
extern_c int
ExforDataSetRead(ConstHandle2ExforDataSet This, const char *const filename);

// +++ Write to file
// +++ File can be XML, JSON, or HDF5.
// +++ We'll use filename's extension to determine the type you want written.
extern_c int
ExforDataSetWrite(ConstHandle2ConstExforDataSet This, const char *const filename);

// +++ Print to standard output, in our prettyprinting format
extern_c int
ExforDataSetPrint(ConstHandle2ConstExforDataSet This);

// +++ Print to standard output, as XML
extern_c int
ExforDataSetPrintXML(ConstHandle2ConstExforDataSet This);

// +++ Print to standard output, as JSON
extern_c int
ExforDataSetPrintJSON(ConstHandle2ConstExforDataSet This);


// -----------------------------------------------------------------------------
// Metadatum: subentry
// -----------------------------------------------------------------------------

// +++ Has
extern_c int
ExforDataSetSubentryHas(ConstHandle2ConstExforDataSet This);

// +++ Get
// +++ Returns by value
extern_c XMLName
ExforDataSetSubentryGet(ConstHandle2ConstExforDataSet This);

// +++ Set
extern_c void
ExforDataSetSubentrySet(ConstHandle2ExforDataSet This, const XMLName subentry);


// -----------------------------------------------------------------------------
// Metadatum: retrievalDate
// -----------------------------------------------------------------------------

// +++ Has
extern_c int
ExforDataSetRetrievalDateHas(ConstHandle2ConstExforDataSet This);

// +++ Get
// +++ Returns by value
extern_c const char *
ExforDataSetRetrievalDateGet(ConstHandle2ConstExforDataSet This);

// +++ Set
extern_c void
ExforDataSetRetrievalDateSet(ConstHandle2ExforDataSet This, const char *const retrievalDate);


// -----------------------------------------------------------------------------
// Child: covarianceScript
// -----------------------------------------------------------------------------

// +++ Has
extern_c int
ExforDataSetCovarianceScriptHas(ConstHandle2ConstExforDataSet This);

// --- Get, const
extern_c Handle2ConstCovarianceScript
ExforDataSetCovarianceScriptGetConst(ConstHandle2ConstExforDataSet This);

// +++ Get, non-const
extern_c Handle2CovarianceScript
ExforDataSetCovarianceScriptGet(ConstHandle2ExforDataSet This);

// +++ Set
extern_c void
ExforDataSetCovarianceScriptSet(ConstHandle2ExforDataSet This, ConstHandle2ConstCovarianceScript covarianceScript);


// -----------------------------------------------------------------------------
// Child: correctionScript
// -----------------------------------------------------------------------------

// +++ Has
extern_c int
ExforDataSetCorrectionScriptHas(ConstHandle2ConstExforDataSet This);

// --- Get, const
extern_c Handle2ConstCorrectionScript
ExforDataSetCorrectionScriptGetConst(ConstHandle2ConstExforDataSet This);

// +++ Get, non-const
extern_c Handle2CorrectionScript
ExforDataSetCorrectionScriptGet(ConstHandle2ExforDataSet This);

// +++ Set
extern_c void
ExforDataSetCorrectionScriptSet(ConstHandle2ExforDataSet This, ConstHandle2ConstCorrectionScript correctionScript);


// -----------------------------------------------------------------------------
// Child: note
// -----------------------------------------------------------------------------

// +++ Has
extern_c int
ExforDataSetNoteHas(ConstHandle2ConstExforDataSet This);

// --- Get, const
extern_c Handle2ConstNote
ExforDataSetNoteGetConst(ConstHandle2ConstExforDataSet This);

// +++ Get, non-const
extern_c Handle2Note
ExforDataSetNoteGet(ConstHandle2ExforDataSet This);

// +++ Set
extern_c void
ExforDataSetNoteSet(ConstHandle2ExforDataSet This, ConstHandle2ConstNote note);


// -----------------------------------------------------------------------------
// Done
// -----------------------------------------------------------------------------

#undef extern_c
#endif
