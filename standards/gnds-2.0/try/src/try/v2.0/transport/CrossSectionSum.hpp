
// THIS FILE WAS AUTOGENERATED!
// DO NOT MODIFY!

#ifndef TRY_V2_0_TRANSPORT_CROSSSECTIONSUM
#define TRY_V2_0_TRANSPORT_CROSSSECTIONSUM

#include "try/v2.0/common/Q.hpp"
#include "try/v2.0/transport/CrossSection.hpp"
#include "try/v2.0/transport/Summands.hpp"

namespace try {
namespace v2_0 {
namespace transport {

// -----------------------------------------------------------------------------
// transport::
// class CrossSectionSum
// -----------------------------------------------------------------------------

class CrossSectionSum : public Component<transport::CrossSectionSum> {
   friend class Component;

   // ------------------------
   // For Component
   // ------------------------

   // Names: this namespace, this class, a field/node of this type
   static auto NAMESPACE() { return "transport"; }
   static auto CLASS() { return "CrossSectionSum"; }
   static auto FIELD() { return "crossSectionSum"; }

   // Core Interface multi-query to extract metadata and child nodes
   static auto KEYS()
   {
      return
         // metadata
         std::optional<Integer32>{}
            / Meta<>("ENDF_MT") |
         XMLName{}
            / Meta<>("label") |
         // children
         common::Q{}
            / --Child<>("Q") |
         transport::CrossSection{}
            / --Child<>("crossSection") |
         transport::Summands{}
            / --Child<>("summands")
      ;
   }

public:
   using Component::construct;

   // metadata
   Field<std::optional<Integer32>> ENDF_MT{this};
   Field<XMLName> label{this};

   // children
   Field<common::Q> Q{this};
   Field<transport::CrossSection> crossSection{this};
   Field<transport::Summands> summands{this};

   // ------------------------
   // Constructors
   // ------------------------

   #define GNDSTK_COMPONENT(blockdata) Component(blockdata, \
      this->ENDF_MT, \
      this->label, \
      this->Q, \
      this->crossSection, \
      this->summands)

   // default, and from fields
   explicit CrossSectionSum(
      const wrapper<std::optional<Integer32>> &ENDF_MT = {},
      const wrapper<XMLName> &label = {},
      const wrapper<common::Q> &Q = {},
      const wrapper<transport::CrossSection> &crossSection = {},
      const wrapper<transport::Summands> &summands = {}
   ) :
      GNDSTK_COMPONENT(BlockData{}),
      ENDF_MT(this,ENDF_MT),
      label(this,label),
      Q(this,Q),
      crossSection(this,crossSection),
      summands(this,summands)
   {
      Component::finish();
   }

   // from node
   explicit CrossSectionSum(const Node &node) :
      GNDSTK_COMPONENT(BlockData{})
   {
      Component::finish(node);
   }

   // copy
   CrossSectionSum(const CrossSectionSum &other) :
      GNDSTK_COMPONENT(other.baseBlockData())
   {
      *this = other;
      Component::finish(other);
   }

   // move
   CrossSectionSum(CrossSectionSum &&other) :
      GNDSTK_COMPONENT(other.baseBlockData())
   {
      *this = std::move(other);
      Component::finish(other);
   }

   // ------------------------
   // Assignment operators
   // ------------------------

   CrossSectionSum &operator=(const CrossSectionSum &) = default;
   CrossSectionSum &operator=(CrossSectionSum &&) = default;

   // ------------------------
   // Custom functionality
   // ------------------------

   #include "try/v2.0/transport/CrossSectionSum/src/custom.hpp"
   #undef GNDSTK_COMPONENT
}; // class CrossSectionSum

} // namespace transport
} // namespace v2_0
} // namespace try

#endif
