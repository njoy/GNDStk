
// THIS FILE WAS AUTOGENERATED!
// DO NOT MODIFY!

#ifndef TRY_V2_0_TRANSPORT_INCOHERENTPHOTON
#define TRY_V2_0_TRANSPORT_INCOHERENTPHOTON

#include "try/v2.0/key.hpp"

namespace try {
namespace v2_0 {
namespace transport {

// -----------------------------------------------------------------------------
// transport::
// class IncoherentPhoton
// -----------------------------------------------------------------------------

class IncoherentPhoton : public Component<transport::IncoherentPhoton> {
   friend class Component;

   // ------------------------
   // For Component
   // ------------------------

   // Names: this namespace, this class, a field/node of this type
   static auto NAMESPACE() { return "transport"; }
   static auto CLASS() { return "IncoherentPhoton"; }
   static auto FIELD() { return "incoherentPhoton"; }

   // Core Interface multi-query to extract metadata and child nodes
   static auto KEYS()
   {
      return std::tuple<>{};
   }

public:
   using Component::construct;

   // ------------------------
   // Constructors
   // ------------------------

   #define GNDSTK_COMPONENT(blockdata) Component(blockdata)

   // default
   IncoherentPhoton() :
      GNDSTK_COMPONENT(BlockData{})
   {
      Component::finish();
   }

   // from node
   explicit IncoherentPhoton(const Node &node) :
      GNDSTK_COMPONENT(BlockData{})
   {
      Component::finish(node);
   }

   // copy
   IncoherentPhoton(const IncoherentPhoton &other) :
      GNDSTK_COMPONENT(other.baseBlockData())
   {
      *this = other;
      Component::finish(other);
   }

   // move
   IncoherentPhoton(IncoherentPhoton &&other) :
      GNDSTK_COMPONENT(other.baseBlockData())
   {
      *this = std::move(other);
      Component::finish(other);
   }

   // ------------------------
   // Assignment operators
   // ------------------------

   IncoherentPhoton &operator=(const IncoherentPhoton &) = default;
   IncoherentPhoton &operator=(IncoherentPhoton &&) = default;

   // ------------------------
   // Custom functionality
   // ------------------------

   #include "try/v2.0/transport/IncoherentPhoton/src/custom.hpp"
   #undef GNDSTK_COMPONENT
}; // class IncoherentPhoton

} // namespace transport
} // namespace v2_0
} // namespace try

#endif
