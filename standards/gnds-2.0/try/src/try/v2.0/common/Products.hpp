
// THIS FILE WAS AUTOGENERATED!
// DO NOT MODIFY!

#ifndef TRY_V2_0_COMMON_PRODUCTS
#define TRY_V2_0_COMMON_PRODUCTS

#include "try/v2.0/common/Product.hpp"

namespace try {
namespace v2_0 {
namespace common {

// -----------------------------------------------------------------------------
// common::
// class Products
// -----------------------------------------------------------------------------

class Products : public Component<common::Products> {
   friend class Component;

   // ------------------------
   // For Component
   // ------------------------

   // Names: this namespace, this class, a field/node of this type
   static auto NAMESPACE() { return "common"; }
   static auto CLASS() { return "Products"; }
   static auto FIELD() { return "products"; }

   // Core Interface multi-query to extract metadata and child nodes
   static auto KEYS()
   {
      return
         // children
         std::optional<common::Product>{}
            / ++Child<>("product")
      ;
   }

public:
   using Component::construct;

   // children
   Field<std::optional<std::vector<common::Product>>> product{this};

   // ------------------------
   // Constructors
   // ------------------------

   #define GNDSTK_COMPONENT(blockdata) Component(blockdata, \
      this->product)

   // default, and from fields
   explicit Products(
      const wrapper<std::optional<std::vector<common::Product>>> &product = {}
   ) :
      GNDSTK_COMPONENT(BlockData{}),
      product(this,product)
   {
      Component::finish();
   }

   // from node
   explicit Products(const Node &node) :
      GNDSTK_COMPONENT(BlockData{})
   {
      Component::finish(node);
   }

   // copy
   Products(const Products &other) :
      GNDSTK_COMPONENT(other.baseBlockData())
   {
      *this = other;
      Component::finish(other);
   }

   // move
   Products(Products &&other) :
      GNDSTK_COMPONENT(other.baseBlockData())
   {
      *this = std::move(other);
      Component::finish(other);
   }

   // ------------------------
   // Assignment operators
   // ------------------------

   Products &operator=(const Products &) = default;
   Products &operator=(Products &&) = default;

   // ------------------------
   // Custom functionality
   // ------------------------

   #include "try/v2.0/common/Products/src/custom.hpp"
   #undef GNDSTK_COMPONENT
}; // class Products

} // namespace common
} // namespace v2_0
} // namespace try

#endif
