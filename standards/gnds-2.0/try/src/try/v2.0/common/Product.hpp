
// THIS FILE WAS AUTOGENERATED!
// DO NOT MODIFY!

#ifndef TRY_V2_0_COMMON_PRODUCT
#define TRY_V2_0_COMMON_PRODUCT

#include "try/v2.0/transport/Multiplicity.hpp"
#include "try/v2.0/transport/Distribution.hpp"
#include "try/v2.0/transport/OutputChannel.hpp"

namespace try {
namespace v2_0 {
namespace common {

// -----------------------------------------------------------------------------
// common::
// class Product
// -----------------------------------------------------------------------------

class Product : public Component<common::Product> {
   friend class Component;

   // ------------------------
   // For Component
   // ------------------------

   // Names: this namespace, this class, a field/node of this type
   static auto NAMESPACE() { return "common"; }
   static auto CLASS() { return "Product"; }
   static auto FIELD() { return "product"; }

   // Core Interface multi-query to extract metadata and child nodes
   static auto KEYS()
   {
      return
         // metadata
         XMLName{}
            / Meta<>("label") |
         XMLName{}
            / Meta<>("pid") |
         // children
         transport::Multiplicity{}
            / --Child<>("multiplicity") |
         transport::Distribution{}
            / --Child<>("distribution") |
         std::optional<transport::OutputChannel>{}
            / --Child<>("outputChannel")
      ;
   }

public:
   using Component::construct;

   // metadata
   Field<XMLName> label{this};
   Field<XMLName> pid{this};

   // children
   Field<transport::Multiplicity> multiplicity{this};
   Field<transport::Distribution> distribution{this};
   Field<std::optional<transport::OutputChannel>> outputChannel{this};

   // ------------------------
   // Constructors
   // ------------------------

   #define GNDSTK_COMPONENT(blockdata) Component(blockdata, \
      this->label, \
      this->pid, \
      this->multiplicity, \
      this->distribution, \
      this->outputChannel)

   // default, and from fields
   explicit Product(
      const wrapper<XMLName> &label = {},
      const wrapper<XMLName> &pid = {},
      const wrapper<transport::Multiplicity> &multiplicity = {},
      const wrapper<transport::Distribution> &distribution = {},
      const wrapper<std::optional<transport::OutputChannel>> &outputChannel = {}
   ) :
      GNDSTK_COMPONENT(BlockData{}),
      label(this,label),
      pid(this,pid),
      multiplicity(this,multiplicity),
      distribution(this,distribution),
      outputChannel(this,outputChannel)
   {
      Component::finish();
   }

   // from node
   explicit Product(const Node &node) :
      GNDSTK_COMPONENT(BlockData{})
   {
      Component::finish(node);
   }

   // copy
   Product(const Product &other) :
      GNDSTK_COMPONENT(other.baseBlockData())
   {
      *this = other;
      Component::finish(other);
   }

   // move
   Product(Product &&other) :
      GNDSTK_COMPONENT(other.baseBlockData())
   {
      *this = std::move(other);
      Component::finish(other);
   }

   // ------------------------
   // Assignment operators
   // ------------------------

   Product &operator=(const Product &) = default;
   Product &operator=(Product &&) = default;

   // ------------------------
   // Custom functionality
   // ------------------------

   #include "try/v2.0/common/Product/src/custom.hpp"
   #undef GNDSTK_COMPONENT
}; // class Product

} // namespace common
} // namespace v2_0
} // namespace try

#endif
