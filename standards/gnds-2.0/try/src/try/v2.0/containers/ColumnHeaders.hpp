
// THIS FILE WAS AUTOGENERATED!
// DO NOT MODIFY!

#ifndef TRY_V2_0_CONTAINERS_COLUMNHEADERS
#define TRY_V2_0_CONTAINERS_COLUMNHEADERS

#include "try/v2.0/containers/Column.hpp"

namespace try {
namespace v2_0 {
namespace containers {

// -----------------------------------------------------------------------------
// containers::
// class ColumnHeaders
// -----------------------------------------------------------------------------

class ColumnHeaders : public Component<containers::ColumnHeaders> {
   friend class Component;

   // ------------------------
   // For Component
   // ------------------------

   // Names: this namespace, this class, a field/node of this type
   static auto NAMESPACE() { return "containers"; }
   static auto CLASS() { return "ColumnHeaders"; }
   static auto FIELD() { return "columnHeaders"; }

   // Core Interface multi-query to extract metadata and child nodes
   static auto KEYS()
   {
      return
         // children
         containers::Column{}
            / ++Child<>("column")
      ;
   }

public:
   using Component::construct;

   // children
   Field<std::vector<containers::Column>> column{this};

   // ------------------------
   // Constructors
   // ------------------------

   #define GNDSTK_COMPONENT(blockdata) Component(blockdata, \
      this->column)

   // default, and from fields
   explicit ColumnHeaders(
      const wrapper<std::vector<containers::Column>> &column = {}
   ) :
      GNDSTK_COMPONENT(BlockData{}),
      column(this,column)
   {
      Component::finish();
   }

   // from node
   explicit ColumnHeaders(const Node &node) :
      GNDSTK_COMPONENT(BlockData{})
   {
      Component::finish(node);
   }

   // copy
   ColumnHeaders(const ColumnHeaders &other) :
      GNDSTK_COMPONENT(other.baseBlockData())
   {
      *this = other;
      Component::finish(other);
   }

   // move
   ColumnHeaders(ColumnHeaders &&other) :
      GNDSTK_COMPONENT(other.baseBlockData())
   {
      *this = std::move(other);
      Component::finish(other);
   }

   // ------------------------
   // Assignment operators
   // ------------------------

   ColumnHeaders &operator=(const ColumnHeaders &) = default;
   ColumnHeaders &operator=(ColumnHeaders &&) = default;

   // ------------------------
   // Custom functionality
   // ------------------------

   #include "try/v2.0/containers/ColumnHeaders/src/custom.hpp"
   #undef GNDSTK_COMPONENT
}; // class ColumnHeaders

} // namespace containers
} // namespace v2_0
} // namespace try

#endif
