
// THIS FILE WAS AUTOGENERATED!
// DO NOT MODIFY!

#ifndef TRY_V2_0_DOCUMENTATION_EXFORDATASETS
#define TRY_V2_0_DOCUMENTATION_EXFORDATASETS

#include "try/v2.0/documentation/ExforDataSet.hpp"

namespace try {
namespace v2_0 {
namespace documentation {

// -----------------------------------------------------------------------------
// documentation::
// class ExforDataSets
// -----------------------------------------------------------------------------

class ExforDataSets : public Component<documentation::ExforDataSets> {
   friend class Component;

   // ------------------------
   // For Component
   // ------------------------

   // Names: this namespace, this class, a field/node of this type
   static auto NAMESPACE() { return "documentation"; }
   static auto CLASS() { return "ExforDataSets"; }
   static auto FIELD() { return "exforDataSets"; }

   // Core Interface multi-query to extract metadata and child nodes
   static auto KEYS()
   {
      return
         // children
         documentation::ExforDataSet{}
            / ++Child<>("exforDataSet")
      ;
   }

public:
   using Component::construct;

   // children
   Field<std::vector<documentation::ExforDataSet>> exforDataSet{this};

   // ------------------------
   // Constructors
   // ------------------------

   #define GNDSTK_COMPONENT(blockdata) Component(blockdata, \
      this->exforDataSet)

   // default, and from fields
   explicit ExforDataSets(
      const wrapper<std::vector<documentation::ExforDataSet>> &exforDataSet = {}
   ) :
      GNDSTK_COMPONENT(BlockData{}),
      exforDataSet(this,exforDataSet)
   {
      Component::finish();
   }

   // from node
   explicit ExforDataSets(const Node &node) :
      GNDSTK_COMPONENT(BlockData{})
   {
      Component::finish(node);
   }

   // copy
   ExforDataSets(const ExforDataSets &other) :
      GNDSTK_COMPONENT(other.baseBlockData())
   {
      *this = other;
      Component::finish(other);
   }

   // move
   ExforDataSets(ExforDataSets &&other) :
      GNDSTK_COMPONENT(other.baseBlockData())
   {
      *this = std::move(other);
      Component::finish(other);
   }

   // ------------------------
   // Assignment operators
   // ------------------------

   ExforDataSets &operator=(const ExforDataSets &) = default;
   ExforDataSets &operator=(ExforDataSets &&) = default;

   // ------------------------
   // Custom functionality
   // ------------------------

   #include "try/v2.0/documentation/ExforDataSets/src/custom.hpp"
   #undef GNDSTK_COMPONENT
}; // class ExforDataSets

} // namespace documentation
} // namespace v2_0
} // namespace try

#endif
