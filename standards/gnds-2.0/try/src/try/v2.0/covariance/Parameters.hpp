
// THIS FILE WAS AUTOGENERATED!
// DO NOT MODIFY!

#ifndef TRY_V2_0_COVARIANCE_PARAMETERS
#define TRY_V2_0_COVARIANCE_PARAMETERS

#include "try/v2.0/covariance/ParameterLink.hpp"

namespace try {
namespace v2_0 {
namespace covariance {

// -----------------------------------------------------------------------------
// covariance::
// class Parameters
// -----------------------------------------------------------------------------

class Parameters : public Component<covariance::Parameters> {
   friend class Component;

   // ------------------------
   // For Component
   // ------------------------

   // Names: this namespace, this class, a field/node of this type
   static auto NAMESPACE() { return "covariance"; }
   static auto CLASS() { return "Parameters"; }
   static auto FIELD() { return "parameters"; }

   // Core Interface multi-query to extract metadata and child nodes
   static auto KEYS()
   {
      return
         // children
         std::optional<covariance::ParameterLink>{}
            / ++Child<>("parameterLink")
      ;
   }

public:
   using Component::construct;

   // children
   Field<std::optional<std::vector<covariance::ParameterLink>>> parameterLink{this};

   // ------------------------
   // Constructors
   // ------------------------

   #define GNDSTK_COMPONENT(blockdata) Component(blockdata, \
      this->parameterLink)

   // default, and from fields
   explicit Parameters(
      const wrapper<std::optional<std::vector<covariance::ParameterLink>>> &parameterLink = {}
   ) :
      GNDSTK_COMPONENT(BlockData{}),
      parameterLink(this,parameterLink)
   {
      Component::finish();
   }

   // from node
   explicit Parameters(const Node &node) :
      GNDSTK_COMPONENT(BlockData{})
   {
      Component::finish(node);
   }

   // copy
   Parameters(const Parameters &other) :
      GNDSTK_COMPONENT(other.baseBlockData())
   {
      *this = other;
      Component::finish(other);
   }

   // move
   Parameters(Parameters &&other) :
      GNDSTK_COMPONENT(other.baseBlockData())
   {
      *this = std::move(other);
      Component::finish(other);
   }

   // ------------------------
   // Assignment operators
   // ------------------------

   Parameters &operator=(const Parameters &) = default;
   Parameters &operator=(Parameters &&) = default;

   // ------------------------
   // Custom functionality
   // ------------------------

   #include "try/v2.0/covariance/Parameters/src/custom.hpp"
   #undef GNDSTK_COMPONENT
}; // class Parameters

} // namespace covariance
} // namespace v2_0
} // namespace try

#endif
