
// THIS FILE WAS AUTOGENERATED!
// DO NOT MODIFY!

#ifndef TRY_V2_0_COVARIANCE_PARAMETERLINK
#define TRY_V2_0_COVARIANCE_PARAMETERLINK

#include "try/v2.0/key.hpp"

namespace try {
namespace v2_0 {
namespace covariance {

// -----------------------------------------------------------------------------
// covariance::
// class ParameterLink
// -----------------------------------------------------------------------------

class ParameterLink : public Component<covariance::ParameterLink> {
   friend class Component;

   // ------------------------
   // For Component
   // ------------------------

   // Names: this namespace, this class, a field/node of this type
   static auto NAMESPACE() { return "covariance"; }
   static auto CLASS() { return "ParameterLink"; }
   static auto FIELD() { return "parameterLink"; }

   // Core Interface multi-query to extract metadata and child nodes
   static auto KEYS()
   {
      return
         // metadata
         std::optional<XMLName>{}
            / Meta<>("href") |
         std::optional<XMLName>{}
            / Meta<>("label") |
         Defaulted<Integer32>{0}
            / Meta<>("matrixStartIndex") |
         Defaulted<Integer32>{1}
            / Meta<>("nParameters")
      ;
   }

public:
   using Component::construct;

   // defaults
   static inline const struct Defaults {
      static inline const Integer32 matrixStartIndex = 0;
      static inline const Integer32 nParameters = 1;
   } defaults;

   // metadata
   Field<std::optional<XMLName>> href{this};
   Field<std::optional<XMLName>> label{this};
   Field<Defaulted<Integer32>> matrixStartIndex{this,defaults.matrixStartIndex};
   Field<Defaulted<Integer32>> nParameters{this,defaults.nParameters};

   // ------------------------
   // Constructors
   // ------------------------

   #define GNDSTK_COMPONENT(blockdata) Component(blockdata, \
      this->href, \
      this->label, \
      this->matrixStartIndex, \
      this->nParameters)

   // default, and from fields
   // std::optional replaces Defaulted; this class knows the default(s)
   explicit ParameterLink(
      const wrapper<std::optional<XMLName>> &href = {},
      const wrapper<std::optional<XMLName>> &label = {},
      const wrapper<std::optional<Integer32>> &matrixStartIndex = {},
      const wrapper<std::optional<Integer32>> &nParameters = {}
   ) :
      GNDSTK_COMPONENT(BlockData{}),
      href(this,href),
      label(this,label),
      matrixStartIndex(this,defaults.matrixStartIndex,matrixStartIndex),
      nParameters(this,defaults.nParameters,nParameters)
   {
      Component::finish();
   }

   // from node
   explicit ParameterLink(const Node &node) :
      GNDSTK_COMPONENT(BlockData{})
   {
      Component::finish(node);
   }

   // copy
   ParameterLink(const ParameterLink &other) :
      GNDSTK_COMPONENT(other.baseBlockData())
   {
      *this = other;
      Component::finish(other);
   }

   // move
   ParameterLink(ParameterLink &&other) :
      GNDSTK_COMPONENT(other.baseBlockData())
   {
      *this = std::move(other);
      Component::finish(other);
   }

   // ------------------------
   // Assignment operators
   // ------------------------

   ParameterLink &operator=(const ParameterLink &) = default;
   ParameterLink &operator=(ParameterLink &&) = default;

   // ------------------------
   // Custom functionality
   // ------------------------

   #include "try/v2.0/covariance/ParameterLink/src/custom.hpp"
   #undef GNDSTK_COMPONENT
}; // class ParameterLink

} // namespace covariance
} // namespace v2_0
} // namespace try

#endif
