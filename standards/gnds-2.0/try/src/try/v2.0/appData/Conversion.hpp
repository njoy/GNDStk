
// THIS FILE WAS AUTOGENERATED!
// DO NOT MODIFY!

#ifndef TRY_V2_0_APPDATA_CONVERSION
#define TRY_V2_0_APPDATA_CONVERSION

#include "try/v2.0/key.hpp"

namespace try {
namespace v2_0 {
namespace appData {

// -----------------------------------------------------------------------------
// appData::
// class Conversion
// -----------------------------------------------------------------------------

class Conversion : public Component<appData::Conversion> {
   friend class Component;

   // ------------------------
   // For Component
   // ------------------------

   // Names: this namespace, this class, a field/node of this type
   static auto NAMESPACE() { return "appData"; }
   static auto CLASS() { return "Conversion"; }
   static auto FIELD() { return "conversion"; }

   // Core Interface multi-query to extract metadata and child nodes
   static auto KEYS()
   {
      return
         // metadata
         std::optional<XMLName>{}
            / Meta<>("flags") |
         std::optional<std::string>{}
            / Meta<>("href")
      ;
   }

public:
   using Component::construct;

   // metadata
   Field<std::optional<XMLName>> flags{this};
   Field<std::optional<std::string>> href{this};

   // ------------------------
   // Constructors
   // ------------------------

   #define GNDSTK_COMPONENT(blockdata) Component(blockdata, \
      this->flags, \
      this->href)

   // default, and from fields
   explicit Conversion(
      const wrapper<std::optional<XMLName>> &flags = {},
      const wrapper<std::optional<std::string>> &href = {}
   ) :
      GNDSTK_COMPONENT(BlockData{}),
      flags(this,flags),
      href(this,href)
   {
      Component::finish();
   }

   // from node
   explicit Conversion(const Node &node) :
      GNDSTK_COMPONENT(BlockData{})
   {
      Component::finish(node);
   }

   // copy
   Conversion(const Conversion &other) :
      GNDSTK_COMPONENT(other.baseBlockData())
   {
      *this = other;
      Component::finish(other);
   }

   // move
   Conversion(Conversion &&other) :
      GNDSTK_COMPONENT(other.baseBlockData())
   {
      *this = std::move(other);
      Component::finish(other);
   }

   // ------------------------
   // Assignment operators
   // ------------------------

   Conversion &operator=(const Conversion &) = default;
   Conversion &operator=(Conversion &&) = default;

   // ------------------------
   // Custom functionality
   // ------------------------

   #include "try/v2.0/appData/Conversion/src/custom.hpp"
   #undef GNDSTK_COMPONENT
}; // class Conversion

} // namespace appData
} // namespace v2_0
} // namespace try

#endif
