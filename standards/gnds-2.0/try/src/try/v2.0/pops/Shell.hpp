
// THIS FILE WAS AUTOGENERATED!
// DO NOT MODIFY!

#ifndef TRY_V2_0_POPS_SHELL
#define TRY_V2_0_POPS_SHELL

#include "try/v2.0/key.hpp"

namespace try {
namespace v2_0 {
namespace pops {

// -----------------------------------------------------------------------------
// pops::
// class Shell
// -----------------------------------------------------------------------------

class Shell : public Component<pops::Shell> {
   friend class Component;

   // ------------------------
   // For Component
   // ------------------------

   // Names: this namespace, this class, a field/node of this type
   static auto NAMESPACE() { return "pops"; }
   static auto CLASS() { return "Shell"; }
   static auto FIELD() { return "shell"; }

   // Core Interface multi-query to extract metadata and child nodes
   static auto KEYS()
   {
      return
         // metadata
         XMLName{}
            / Meta<>("label") |
         Float64{}
            / Meta<>("value") |
         std::optional<XMLName>{}
            / Meta<>("unit")
      ;
   }

public:
   using Component::construct;

   // metadata
   Field<XMLName> label{this};
   Field<Float64> value{this};
   Field<std::optional<XMLName>> unit{this};

   // ------------------------
   // Constructors
   // ------------------------

   #define GNDSTK_COMPONENT(blockdata) Component(blockdata, \
      this->label, \
      this->value, \
      this->unit)

   // default, and from fields
   explicit Shell(
      const wrapper<XMLName> &label = {},
      const wrapper<Float64> &value = {},
      const wrapper<std::optional<XMLName>> &unit = {}
   ) :
      GNDSTK_COMPONENT(BlockData{}),
      label(this,label),
      value(this,value),
      unit(this,unit)
   {
      Component::finish();
   }

   // from node
   explicit Shell(const Node &node) :
      GNDSTK_COMPONENT(BlockData{})
   {
      Component::finish(node);
   }

   // copy
   Shell(const Shell &other) :
      GNDSTK_COMPONENT(other.baseBlockData())
   {
      *this = other;
      Component::finish(other);
   }

   // move
   Shell(Shell &&other) :
      GNDSTK_COMPONENT(other.baseBlockData())
   {
      *this = std::move(other);
      Component::finish(other);
   }

   // ------------------------
   // Assignment operators
   // ------------------------

   Shell &operator=(const Shell &) = default;
   Shell &operator=(Shell &&) = default;

   // ------------------------
   // Custom functionality
   // ------------------------

   #include "try/v2.0/pops/Shell/src/custom.hpp"
   #undef GNDSTK_COMPONENT
}; // class Shell

} // namespace pops
} // namespace v2_0
} // namespace try

#endif
