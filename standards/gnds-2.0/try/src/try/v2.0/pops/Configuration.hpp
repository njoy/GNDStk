
// THIS FILE WAS AUTOGENERATED!
// DO NOT MODIFY!

#ifndef TRY_V2_0_POPS_CONFIGURATION
#define TRY_V2_0_POPS_CONFIGURATION

#include "try/v2.0/pops/BindingEnergy.hpp"
#include "try/v2.0/pops/DecayData.hpp"

namespace try {
namespace v2_0 {
namespace pops {

// -----------------------------------------------------------------------------
// pops::
// class Configuration
// -----------------------------------------------------------------------------

class Configuration : public Component<pops::Configuration> {
   friend class Component;

   // ------------------------
   // For Component
   // ------------------------

   // Names: this namespace, this class, a field/node of this type
   static auto NAMESPACE() { return "pops"; }
   static auto CLASS() { return "Configuration"; }
   static auto FIELD() { return "configuration"; }

   // Core Interface multi-query to extract metadata and child nodes
   static auto KEYS()
   {
      return
         // metadata
         std::string{}
            / Meta<>("subshell") |
         Float64{}
            / Meta<>("electronNumber") |
         // children
         pops::BindingEnergy{}
            / --Child<>("bindingEnergy") |
         std::optional<pops::DecayData>{}
            / --Child<>("decayData")
      ;
   }

public:
   using Component::construct;

   // metadata
   Field<std::string> subshell{this};
   Field<Float64> electronNumber{this};

   // children
   Field<pops::BindingEnergy> bindingEnergy{this};
   Field<std::optional<pops::DecayData>> decayData{this};

   // ------------------------
   // Constructors
   // ------------------------

   #define GNDSTK_COMPONENT(blockdata) Component(blockdata, \
      this->subshell, \
      this->electronNumber, \
      this->bindingEnergy, \
      this->decayData)

   // default, and from fields
   explicit Configuration(
      const wrapper<std::string> &subshell = {},
      const wrapper<Float64> &electronNumber = {},
      const wrapper<pops::BindingEnergy> &bindingEnergy = {},
      const wrapper<std::optional<pops::DecayData>> &decayData = {}
   ) :
      GNDSTK_COMPONENT(BlockData{}),
      subshell(this,subshell),
      electronNumber(this,electronNumber),
      bindingEnergy(this,bindingEnergy),
      decayData(this,decayData)
   {
      Component::finish();
   }

   // from node
   explicit Configuration(const Node &node) :
      GNDSTK_COMPONENT(BlockData{})
   {
      Component::finish(node);
   }

   // copy
   Configuration(const Configuration &other) :
      GNDSTK_COMPONENT(other.baseBlockData())
   {
      *this = other;
      Component::finish(other);
   }

   // move
   Configuration(Configuration &&other) :
      GNDSTK_COMPONENT(other.baseBlockData())
   {
      *this = std::move(other);
      Component::finish(other);
   }

   // ------------------------
   // Assignment operators
   // ------------------------

   Configuration &operator=(const Configuration &) = default;
   Configuration &operator=(Configuration &&) = default;

   // ------------------------
   // Custom functionality
   // ------------------------

   #include "try/v2.0/pops/Configuration/src/custom.hpp"
   #undef GNDSTK_COMPONENT
}; // class Configuration

} // namespace pops
} // namespace v2_0
} // namespace try

#endif
