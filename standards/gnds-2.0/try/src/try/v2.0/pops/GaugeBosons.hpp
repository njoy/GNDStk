
// THIS FILE WAS AUTOGENERATED!
// DO NOT MODIFY!

#ifndef TRY_V2_0_POPS_GAUGEBOSONS
#define TRY_V2_0_POPS_GAUGEBOSONS

#include "try/v2.0/pops/GaugeBoson.hpp"

namespace try {
namespace v2_0 {
namespace pops {

// -----------------------------------------------------------------------------
// pops::
// class GaugeBosons
// -----------------------------------------------------------------------------

class GaugeBosons : public Component<pops::GaugeBosons> {
   friend class Component;

   // ------------------------
   // For Component
   // ------------------------

   // Names: this namespace, this class, a field/node of this type
   static auto NAMESPACE() { return "pops"; }
   static auto CLASS() { return "GaugeBosons"; }
   static auto FIELD() { return "gaugeBosons"; }

   // Core Interface multi-query to extract metadata and child nodes
   static auto KEYS()
   {
      return
         // children
         std::optional<pops::GaugeBoson>{}
            / ++Child<>("gaugeBoson")
      ;
   }

public:
   using Component::construct;

   // children
   Field<std::optional<std::vector<pops::GaugeBoson>>> gaugeBoson{this};

   // ------------------------
   // Constructors
   // ------------------------

   #define GNDSTK_COMPONENT(blockdata) Component(blockdata, \
      this->gaugeBoson)

   // default, and from fields
   explicit GaugeBosons(
      const wrapper<std::optional<std::vector<pops::GaugeBoson>>> &gaugeBoson = {}
   ) :
      GNDSTK_COMPONENT(BlockData{}),
      gaugeBoson(this,gaugeBoson)
   {
      Component::finish();
   }

   // from node
   explicit GaugeBosons(const Node &node) :
      GNDSTK_COMPONENT(BlockData{})
   {
      Component::finish(node);
   }

   // copy
   GaugeBosons(const GaugeBosons &other) :
      GNDSTK_COMPONENT(other.baseBlockData())
   {
      *this = other;
      Component::finish(other);
   }

   // move
   GaugeBosons(GaugeBosons &&other) :
      GNDSTK_COMPONENT(other.baseBlockData())
   {
      *this = std::move(other);
      Component::finish(other);
   }

   // ------------------------
   // Assignment operators
   // ------------------------

   GaugeBosons &operator=(const GaugeBosons &) = default;
   GaugeBosons &operator=(GaugeBosons &&) = default;

   // ------------------------
   // Custom functionality
   // ------------------------

   #include "try/v2.0/pops/GaugeBosons/src/custom.hpp"
   #undef GNDSTK_COMPONENT
}; // class GaugeBosons

} // namespace pops
} // namespace v2_0
} // namespace try

#endif
