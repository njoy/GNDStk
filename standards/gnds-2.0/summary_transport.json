{
    "__namespace__":"transport",
    "reactionSuite":{
        "__class__": "nodes.Node",
        "abstractNode": null,
        "attributes": {
            "evaluation": {
                "__class__": "nodes.Attribute",
                "default": null,
                "description": "Name of the evaluation, e.g. `ENDF-VIII.0'",
                "name": "evaluation",
                "required": true,
                "type": "XMLName"
            },
            "format": {
                "__class__": "nodes.Attribute",
                "default": null,
                "description": ["GNDS format version, e.g. `2.1'.  ", "See Appendix \\ref{append:versioning} for an extended discussion of the GNDS version numbering."],
                "name": "format",
                "required": true,
                "type": "XMLName"
            },
            "projectile": {
                "__class__": "nodes.Attribute",
                "default": null,
                "description": "Projectile particle id.",
                "name": "projectile",
                "required": true,
                "type": "XMLName"
            },
            "projectileFrame": {
                "__class__": "nodes.Attribute",
                "default": null,
                "description": "Options are `lab' or `centerOfMass'",
                "name": "projectileFrame",
                "required": true,
                "type": "frame"
            },
            "target": {
                "__class__": "nodes.Attribute",
                "default": null,
                "description": "Target particle id.",
                "name": "target",
                "required": true,
                "type": "XMLName"
            },
            "interaction": {
                "__class__": "nodes.Attribute",
                "default": null,
                "description": [ "Defines the type of interaction for the reaction data contained within the reactionSuite. Options are `nuclear', `atomic' and `thermalNeutronScatteringLaw'. ",
                                 "For example, a photo-nuclear reactionSuite must have a value of `nuclear' while a photo-atomic reactionSuite must have a value of `atomic'." ],
                "name": "interaction",
                "required": true,
                "type": "interaction"
            }
        },
        "bodyText": null,
        "childNodes": {
            "externalFiles": {
                "__class__": "nodes.ChildNode",
                "description": "stores a list of external files related to this \\element{reactionSuite}. Often used to link a \\element{reactionSuite} to one or more \\element{covarianceSuite} files.",
                "name": "externalFiles",
                "occurrence": "1",
                "required": false
            },
            "styles": {
                "__class__": "nodes.ChildNode",
                "description": ["Element containing a list of styles inside this covarinceSuite.  Each style describes",
                                "information about the evalualated data (e.g. library, version) representation and each processed data representation."],
                "name": "styles",
                "occurrence": "1",
                "required": true
            },
            "PoPs": {
                "__class__": "nodes.ChildNode",
                "description": "Particle database, as described in document~\\cite{PoPs}.  The database describes all particles involved in the reactionSuite, including projectile, target and reaction products.",
                "name": "PoPs",
                "occurrence": "1",
                "required": true
            },
            "resonances": {
                "__class__": "nodes.ChildNode",
                "description": "Describes resonance parameters.",
                "name": "resonances",
                "occurrence": "1",
                "required": false
            },
            "reactions": {
                "__class__": "nodes.ChildNode",
                "description": "List of all exclusive reaction nodes. The sum of the cross sections from each reaction must sum to the total cross section for neutral incident particles.",
                "name": "reactions",
                "occurrence": "1",
                "required": false
            },
            "orphanProducts": {
                "__class__": "nodes.ChildNode",
                "description": "Collection of products not associated with a particlar reaction.  In legacy evaluations, this element is used to store gamma-rays that are observed in experiment but whose provenance is unknown.",
                "name": "orphanProducts",
                "occurrence": "1",
                "required": false
            },
            "sums": {
                "__class__": "nodes.ChildNode",
                "description": "The \\elemlink{sums} node contains cross sections that are summations over two or more reaction cross sections, and also multiplicities that are summations over two or more reaction product multiplicities.",
                "name": "sums",
                "occurrence": "1",
                "required": false
            },
            "fissionComponents": {
                "__class__": "nodes.ChildNode",
                "description": "List of partial fission cross sections, often used to give first-chance, second-chance, etc. fission without supplying distributions for each chance. ",
                "name": "fissionComponents",
                "occurrence": "1",
                "required": false
            },
            "productions": {
                "__class__": "nodes.ChildNode",
                "description": "List of production reactions.",
                "name": "productions",
                "occurrence": "1",
                "required": false
            },
            "incompleteReactions": {
                "__class__": "nodes.ChildNode",
                "description": "List of reactions where only some data are available.  May be used to store very small cross sections (i.e. sub-actinide fission) or for sharing evaluations where some reactions are still not complete.",
                "name": "incompleteReactions",
                "occurrence": "1",
                "required": false
            },
            "applicationData": {
                "__class__": "nodes.ChildNode",
                "description": "List of application-specific data.",
                "name": "applicationData",
                "occurrence": "1",
                "required": false
            }
        },
        "description": "This element stores an evaluation of the reactions involving the combination of a projectile and target.",
        "name": "reactionSuite",
        "required": false,
        "rootNode": true
    },

    "interaction": {
        "__class__": "nodes.EnumeratedTypeNode",
        "description": "",
        "name": "interaction",
        "allowedValues":["nuclear", "atomic", "thermalNeutronScatteringLaw"]
    },

    "reactions":{
        "__class__": "nodes.Node",
        "abstractNode": null,
        "attributes": {},
        "bodyText": null,
        "childNodes": {
            "reaction": {
                "__class__": "nodes.ChildNode",
                "description": "A \\texttt{reaction}",
                "name": "reaction",
                "occurrence": "1+",
                "required": true
            }
        },
        "description": [
            "The \\element{reactions} section collects all of the \\element{reaction} elements.",
            "The sum of the cross sections from all \\element{reaction} elements inside \\element{reactions} should",
            "be equal to the total cross section (note that the total cross section is \\textit{not} stored in",
            "\\element{reactions} but rather inside \\element{sums} (see section~\\ref{format:transport:sums})."
        ],
        "name": "reactions",
        "required": false,
        "rootNode": false
    },
    "reaction":{
        "__class__": "nodes.Node",
        "abstractNode": null,
        "attributes": {
            "ENDF_MT": {
                "__class__": "nodes.Attribute",
                "default": null,
                "description": ["The ENDF MT number for this reaction. This attribute is currently required, ",
				"but should be considered deprecated. Future evaluations may include reactions ",
				"with no MT equivalent, so codes should not rely on the \\texttt{ENDF\\_MT}."],
                "name": "ENDF_MT",
                "required": true,
                "type": "Integer32"
            },
            "fissionGenre": {
                "__class__": "nodes.Attribute",
                "default": null,
                "description": "Identifies the type of fission. Must be one of `total', `firstChance', `secondChance', etc.",
                "name": "fissionGenre",
                "required": false,
                "type": "XMLName"
            },
            "label": {
                "__class__": "nodes.Attribute",
                "default": null,
                "description": "Arbitrary string identifier. It must be unique among all other \\element{reaction} elements.",
                "name": "label",
                "required": true,
                "type": "XMLName"
            }
        },
        "bodyText": null,
        "childNodes": {
            "doubleDifferentialCrossSection": {
                "__class__": "nodes.ChildNode",
                "description": "Differential cross section $d\\sigma(E)/dE'd\\Omega$ or $d\\sigma(E)/d\\Omega$ if using two-body kinematics.",
                "name": "doubleDifferentialCrossSection",
                "occurrence": "1",
                "required": false
            },
            "crossSection": {
                "__class__": "nodes.ChildNode",
                "description": null,
                "name": "crossSection",
                "occurrence": "1",
                "required": true
            },
            "outputChannel": {
                "__class__": "nodes.ChildNode",
                "description": "Describes the secondary particle emissions from the reaction",
                "name": "outputChannel",
                "occurrence": "1",
                "required": true
            }
        },
        "description": "A nuclear reaction is a process in which nucleus or nuclear particles changes by producing a set of products, either through spontaneous decay or particle collision.  The \\element{reaction} element collects the information pertaining to the final state of the reaction.",
        "name": "reaction",
        "required": false,
        "rootNode": false
    },
    "sums":{
        "__class__": "nodes.Node",
        "abstractNode": null,
        "attributes": {},
        "bodyText": null,
        "childNodes": {
            "crossSectionSums": {
                "__class__": "nodes.ChildNode",
                "description": "Contains one or more sums of partial cross sections.",
                "name": "crossSectionSums",
                "occurrence": "1",
                "required": true
            },
            "multiplicitySums": {
                "__class__": "nodes.ChildNode",
                "description": [
                    "Contains one or more sums of product multiplicites. Each sum should only include multiplicities for a single type of particle. Most often used for outgoing photons",
                    "and fission neutrons (e.g. to store `total nubar' as the sum of prompt + delayed nubar)."
                ],
                "name": "multiplicitySums",
                "occurrence": "1",
                "required": false
            }
        },
        "description": [
          "The \\element{sums} node contains two child nodes:  ",
          "cross section nodes, which are summations over two or more reaction cross sections, and ",
          "multiplicities, which are summations over two or more reaction product multiplicities."],
        "name": "sums",
        "required": false,
        "rootNode": false
    },
    "outputChannel":{
        "__class__": "nodes.Node",
        "abstractNode": null,
        "attributes": {
            "genre": {
                "__class__": "nodes.Attribute",
                "default": null,
                "description": "This can have a value of either \\element{twoBody} or \\element{NBody}",
                "name": "genre",
                "required": false,
                "type": "XMLName"
            },
            "process": {
                "__class__": "nodes.Attribute",
                "default": null,
                "description": null,
                "name": "process",
                "required": false,
                "type": "XMLName"
            }
        },
        "bodyText": null,
        "childNodes": {
            "Q": {
                "__class__": "nodes.ChildNode",
                "description": "The $Q$-value of the reaction. Fission reactions have a different format than other reactions.",
                "name": "Q",
                "occurrence": "1",
                "required": false
            },
            "products": {
                "__class__": "nodes.ChildNode",
                "description": "A list of secondary products from the reaction",
                "name": "products",
                "occurrence": "1",
                "required": false
            },
            "fissionFragmentData": {
                "__class__": "nodes.ChildNode",
                "description": "For use in fission reactions only. Contains information about delayed neutrons, fission product yields and energy partition.",
                "name": "fissionFragmentData",
                "occurrence": "1",
                "required": false
            }

        },
        "description": "The \\element{outputChannel} node contains all the data for the results of a reaction, including the Q-value and all outgoing products.",
        "name": "outputChannel",
        "required": false,
        "rootNode": false
    },
    "crossSectionSums":{
        "__class__": "nodes.Node",
        "abstractNode": null,
        "attributes": {},
        "bodyText": null,
        "childNodes": {
            "crossSectionSum": {
                "__class__": "nodes.ChildNode",
                "description": "The \\element{crossSectionSum} is similar to the \\element{crossSection}, but is a sum of the cross section for multiple partial reactions.",
                "name": "crossSectionSum",
                "occurrence": "1+",
                "required": false
            }
        },
        "description": null,
        "name": "crossSectionSums",
        "required": false,
        "rootNode": false
    },
    "crossSection":{
        "__class__": "nodes.Node",
        "abstractNode": "label",
        "attributes": {
            "label": {
                "default": null,
                "required": false,
                "type": "XMLName"
            }
        },
        "bodyText": null,
        "childUnique" : "yesLabel",
        "childNodes": {
            "XYs1d": {
                "__class__": "nodes.ChildNode",
                "description": "For pointwise data using a single interpolation everywhere.",
                "name": "XYs1d",
                "occurrence": "choice",
                "required": false
            },
            "regions1d": {
                "__class__": "nodes.ChildNode",
                "description": "Cross section stored in multiple regions, with different interpolations and/or discontinuities.",
                "name": "regions1d",
                "occurrence": "choice",
                "required": false
            },
            "resonancesWithBackground": {
                "__class__": "nodes.ChildNode",
                "description": "Indicates that resonance parameters need to be reconstructed and added to the background to obtain the cross section.",
                "name": "resonancesWithBackground",
                "occurrence": "choice",
                "required": false
            },
            "CoulombPlusNuclearElastic": {
                "__class__": "nodes.ChildNode",
                "description": "This is either a container holding the differential charged particle scattering cross section or a reference to said container.",
                "name": "CoulombPlusNuclearElastic",
                "occurrence": "choice",
                "required": false
            },
            "thermalNeutronScatteringLaw1d": {
                "__class__": "nodes.ChildNode",
                "description": "This contains a reference to the double-differential thermal neutron scattering law cross section.",
                "name": "thermalNeutronScatteringLaw1d",
                "occurrence": "choice",
                "required": false
            },
            "reference": {
                "__class__": "nodes.ChildNode",
                "description": "Link to another cross section form, e.g. in another reaction.",
                "name": "reference",
                "occurrence": "choice",
                "required": false
            },
            "gridded1d": {
                "__class__": "nodes.ChildNode",
                "description": "Grouped (and possibly flux-weighted) cross section. Appears in processed files only.",
                "name": "gridded1d",
                "occurrence": "choice",
                "required": false
            },
            "Ys1d": {
                "__class__": "nodes.ChildNode",
                "description": "Y-values, used when a common grid is used for multiple reaction cross sections for more efficient Monte Carlo sampling. Appears in processed files only.",
                "name": "Ys1d",
                "occurrence": "choice",
                "required": false
            },
            "URR_probabilityTables1d": {
                "__class__": "nodes.ChildNode",
                "description": "Stores cross section probability tables $P(\\sigma | E)$ to better capture the rapid cross section fluctuations possible in the unresolved resonance region. This element appears in processed files only.",
                "name": "URR_probabilityTables1d",
                "occurrence": "choice",
                "required": false
            }
        },
        "description": [
          "The effective target area for a particular reaction or reaction-like quantity on a given target, ",
          "$\\sigma(E)$.  Child elements of a \\element{crossSection} correspond to various representations of ",
          "the cross section.  At least one element that describes the dependance of the cross section as a ",
          "function of energy is required.  For evaluated files, one element must contain the \\attr{label}=\\attrval{eval} attribute."
        ],
        "name": "crossSection",
        "required": false,
        "rootNode": false
    },
    "resonancesWithBackground":{
        "__class__": "nodes.Node",
        "abstractNode": null,
        "attributes": {
            "label": {
                "__class__": "nodes.Attribute",
                "default": null,
                "description": "Name of the style in the \\element{styles} node associated with these data.",
                "name": "label",
                "required": true,
                "type": "XMLName"
            }
        },
        "bodyText": null,
        "childNodes": {
            "resonancesLink": {
                "__class__": "nodes.ChildNode",
                "description": "Link to the resonance parameters that have to be combined with the background.",
                "name": "resonances",
                "occurrence": "1",
                "required": true
            },
            "background": {
                "__class__": "nodes.ChildNode",
                "description": "The background cross section to be applied.",
                "name": "background",
                "occurrence": "1",
                "required": true
            },
            "uncertainty": {
                "__class__": "nodes.ChildNode",
                "description": null,
                "name": "uncertainty",
                "occurrence": "1",
                "required": false
            }
        },
        "description": [ "The \\element{resonancesWithBackground} node describes the cross ",
                         "sections as a set of resonance parameters with associated ",
                         "background cross sections." ],
        "name": "resonancesWithBackground",
        "required": false,
        "rootNode": false
    },
    "resonancesLink":{
        "__class__": "nodes.Node",
        "abstractNode": null,
        "attributes": {
            "label": {
                "__class__": "nodes.Attribute",
                "default": null,
                "description": "Label for this link.",
                "name": "label",
                "required": false,
                "type": "XMLName"
            },
            "href": {
                "__class__": "nodes.Attribute",
                "default": null,
                "description": "xPath link to the \\element{resonances} section.",
                "name": "href",
                "required": true,
                "type": "bodyText"
            }
        },
        "bodyText": null,
        "childNodes": {},
        "description": "Links to the \\element{resonances} section defined under the \\element{reactionSuite}.",
        "name": "resonances",
        "required": false,
        "rootNode": false
    },
    "background":{
        "__class__": "nodes.Node",
        "abstractNode": null,
        "attributes": {},
        "bodyText": null,
        "childNodes": {
            "resolvedRegion": {
                "__class__": "nodes.ChildNode",
                "description": "The background cross section in the resolved resonance region.",
                "name": "resolvedRegion",
                "occurrence": "1",
                "required": false
            },
            "unresolvedRegion": {
                "__class__": "nodes.ChildNode",
                "description": "The background cross section in the unresolved resonance region.",
                "name": "unresolvedRegion",
                "occurrence": "1",
                "required": false
            },
            "fastRegion": {
                "__class__": "nodes.ChildNode",
                "description": "The cross section in the fast region beyond the resolved and unresolved resonance region.",
                "name": "fastRegion",
                "occurrence": "1",
                "required": false
            }
        },
        "description": [ "The \\element{background} gives the background cross sections that ",
                         "have to be added to the resonance parameters to obtain the full set ",
                         "of cross sections." ],
        "name": "background",
        "required": false,
        "rootNode": false
    },
    "resolvedRegion":{
        "__class__": "nodes.Node",
        "abstractNode": null,
        "attributes": {},
        "bodyText": null,
        "childUnique" : "yes",
        "childNodes": {
            "XYs1d": {
                "__class__": "nodes.ChildNode",
                "description": [ "The background cross section is an energy dependent function with ",
                                 "a single interpolation range." ],
                "name": "XYs1d",
                "occurrence": "choice",
                "required": false
            },
            "regions1d": {
                "__class__": "nodes.ChildNode",
                "description": [ "The background cross section is an energy dependent function with ",
                                 "multiple interpolation ranges." ],
                "name": "regions1d",
                "occurrence": "choice",
                "required": false
            }
        },
        "description": [ "The \\element{resolvedRegion} gives the background cross section in ",
                         "the resolved resonance region." ],
        "name": "resolvedRegion",
        "required": false,
        "rootNode": false
    },
    "unresolvedRegion":{
        "__class__": "nodes.Node",
        "abstractNode": null,
        "attributes": {},
        "bodyText": null,
        "childUnique" : "yes",
        "childNodes": {
            "XYs1d": {
                "__class__": "nodes.ChildNode",
                "description": [ "The background cross section is an energy dependent function with ",
                                 "a single interpolation range." ],
                "name": "XYs1d",
                "occurrence": "choice",
                "required": false
            },
            "regions1d": {
                "__class__": "nodes.ChildNode",
                "description": [ "The background cross section is an energy dependent function with ",
                                 "multiple interpolation ranges." ],
                "name": "regions1d",
                "occurrence": "choice",
                "required": false
            }
        },
        "description": [ "The \\element{unresolvedRegion} gives the background cross section in ",
                         "the unresolved resonance region." ],
        "name": "unresolvedRegion",
        "required": false,
        "rootNode": false
    },
    "fastRegion":{
        "__class__": "nodes.Node",
        "abstractNode": null,
        "attributes": {},
        "bodyText": null,
        "childUnique" : "yes",
        "childNodes": {
            "XYs1d": {
                "__class__": "nodes.ChildNode",
                "description": [ "The cross section as an energy dependent function with ",
                                 "a single interpolation range." ],
                "name": "XYs1d",
                "occurrence": "choice",
                "required": false
            },
            "regions1d": {
                "__class__": "nodes.ChildNode",
                "description": [ "The cross section as an energy dependent function with ",
                                 "multiple interpolation ranges." ],
                "name": "regions1d",
                "occurrence": "choice",
                "required": false
            }
        },
        "description": [ "The \\element{fastRegion} gives the entire cross section in the fast region,",
                         "beyond the resolved and unresolved resonance region." ],
        "name": "fastRegion",
        "required": false,
        "rootNode": false
    },
    "URR_probabilityTables1d":{
        "__class__": "nodes.Node",
        "abstractNode": null,
        "attributes": {
            "label": {
                "__class__": "nodes.Attribute",
                "default": null,
                "description": "Name of the style in the \\element{styles} node associated with these data.",
                "name": "label",
                "required": true,
                "type": "XMLName"
            }
        },
        "bodyText": null,
        "childNodes": {
            "XYs2d": {
                "__class__": "nodes.ChildNode",
                "description": "Probability distribution stored as an \\element{XYs2d}.",
                "name": "XYs2d",
                "occurrence": "choice",
                "required": false
            },
            "regions2d": {
                "__class__": "nodes.ChildNode",
                "description": "Probability distribution stored as a \\element{regions2d}.",
                "name": "regions2d",
                "occurrence": "choice",
                "required": false
            }
        },
        "description": [ "The \\element{URR\\_probabilityTables1d} gives probability distributions for the",
            "cross section as a function of incident energy, $P(\\sigma | E)$. It is derived from the",
            "average widths and level spacings in the \\element{unresolved} resonance section, and is used in",
            "in Monte Carlo transport codes. The child \\element{XYs2d} or \\element{regions2d} should",
            "generally use an \\attr{interpolationQualifier} like `unitBase' since the cross section domain",
            "varies with incident energy."
        ],
        "name": "URR_probabilityTables1d",
        "required": false,
        "rootNode": false
    },
    "crossSectionSum":{
        "__class__": "nodes.Node",
        "abstractNode": "labelNode",
        "attributes": {
            "ENDF_MT": {
                "__class__": "nodes.Attribute",
                "default": null,
                "description": "The corresponding ENDF MT number.",
                "name": "ENDF_MT",
                "required": false,
                "type": "Integer32"
            },
            "label": {
                "__class__": "nodes.Attribute",
                "default": null,
                "description": "An arbitrary, but unique identifier for the summed cross section.",
                "name": "label",
                "required": true,
                "type": "XMLName"
            }
        },
        "bodyText": null,
        "childNodes": {
            "Q": {
                "__class__": "nodes.ChildNode",
                "description": "The $Q$-value of the summed reaction.",
                "name": "Q",
                "occurrence": "1",
                "required": true
            },
            "crossSection": {
                "__class__": "nodes.ChildNode",
                "description": "The summed cross section values.",
                "name": "crossSection",
                "occurrence": "1",
                "required": true
            },
            "summands": {
                "__class__": "nodes.ChildNode",
                "description": "A list of links to the partial cross sections that are the summands (hence the name of the element) of the summed reaction.",
                "name": "summands",
                "occurrence": "1",
                "required": true
            }
        },
        "description": "The \\element{crossSectionSum} is similar to the \\element{crossSection}, but is a sum of the cross section for multiple partial reactions.",
        "name": "crossSectionSum",
        "required": false,
        "rootNode": false
    },
    "doubleDifferentialCrossSection":{
        "__class__": "nodes.Node",
        "abstractNode": null,
        "attributes": {},
        "bodyText": null,
        "childUnique": true,
        "childNodes": {
            "regions3d": {
                "__class__": "nodes.ChildNode",
                "description": "For a differential cross section broken up into incident energy regions.  Regions may contain different interpolations, or different representations (i.e. a reference for one incident energy range followed by a CoulombPlusNuclearElastic in another energy range).  ",
                "name": "regions3d",
                "occurrence": "1",
                "required": false
            },
            "XYs3d": {
                "__class__": "nodes.ChildNode",
                "description": "A pointwise table of $\\sigma(\\mu, E' | E)$ or $\\sigma(E', \\mu | E)$ values.",
                "name": "XYs3d",
                "occurrence": "1",
                "required": false
            },
            "CoulombPlusNuclearElastic": {
                "__class__": "nodes.ChildNode",
                "description": "This is either a container holding the differential charged particle scattering cross section or a reference to said container.",
                "name": "CoulombPlusNuclearElastic",
                "occurrence": "1",
                "required": false
            },
            "reference": {
                "__class__": "nodes.ChildNode",
                "description": "A link to resonance data, from which\n the differential cross section should be derived.",
                "name": "reference",
                "occurrence": "1",
                "required": false
            },
            "coherentPhotonScattering": {
                "__class__": "nodes.ChildNode",
                "description": "This is either a container holding the coherent photon scattering cross section or a reference to said container.",
                "name": "coherentPhotonScattering",
                "occurrence": "1",
                "required": false
            },
            "incoherentPhotonScattering": {
                "__class__": "nodes.ChildNode",
                "description": "This is either a container holding the incoherent photon scattering cross section or a reference to said container.",
                "name": "incoherentPhotonScattering",
                "occurrence": "1",
                "required": false
            },
            "thermalNeutronScatteringLaw_coherentElastic": {
                "__class__": "nodes.ChildNode",
                "description": "Contains the coherent elastic double-differential cross section for thermal neutrons.",
                "name": "thermalNeutronScatteringLaw_coherentElastic",
                "occurrence": "1",
                "required": false
            },
            "thermalNeutronScatteringLaw_incoherentElastic": {
                "__class__": "nodes.ChildNode",
                "description": "Contains the incoherent elastic double-differential cross section for thermal neutrons.",
                "name": "thermalNeutronScatteringLaw_incoherentElastic",
                "occurrence": "1",
                "required": false
            },
            "thermalNeutronScatteringLaw_incoherentInelastic": {
                "__class__": "nodes.ChildNode",
                "description": "Contains the incoherent inelastic double-differential cross section for thermal neutrons.",
                "name": "thermalNeutronScatteringLaw_incoherentInelastic",
                "occurrence": "1",
                "required": false
            }
        },
        "description": [
            "This node represents multi-dimensional differential cross section data, ",
            "e.g. $d\\sigma(E)/d\\mu$ or $d\\sigma(E)/d\\mu dE'$.  In most cases, such as in ",
            "charged particle, thermal neutron or (in)coherent x-ray scattering, ",
            "a parameterised form of the data exists to simplify the representation of the tabulated data."
        ],
        "name": "doubleDifferentialCrossSection",
        "required": false,
        "rootNode": false
    },
    "coherentPhoton":{
        "__class__": "nodes.Node",
        "abstractNode": null,
        "attributes": {},
        "bodyText": null,
        "childNodes": {},
        "description":  "coherentPhoton for doubleDifferentialCrossSection",
         "name": "coherentPhoton",
         "required": false,
        "rootNode": false
    },
    "incoherentPhoton":{
        "__class__": "nodes.Node",
        "abstractNode": null,
        "attributes": {},
        "bodyText": null,
        "childNodes": {},
        "description":  "incoherentPhoton for doubleDifferentialCrossSection",
         "name": "incoherentPhoton",
         "required": false,
        "rootNode": false
    },
    "multiplicitySums":{
        "__class__": "nodes.Node",
        "abstractNode": null,
        "attributes": {},
        "bodyText": null,
        "childNodes": {
            "multiplicitySum": {
                "__class__": "nodes.ChildNode",
                "description": "Sums over the multiplicity of multiple products of the same type of particle.",
                "name": "multiplicitySum",
                "occurrence": "1+",
                "required": false
            }
        },
        "description": null,
        "name": "multiplicitySums",
        "required": false,
        "rootNode": false
    },
    "multiplicity":{
        "__class__": "nodes.Node",
        "abstractNode": null,
        "attributes": {},
        "bodyText": null,
        "childUnique":"yesLabel",
        "childNodes": {
            "XYs1d": {
                "__class__": "nodes.ChildNode",
                "description": null,
                "name": "XYs1d",
                "occurrence": "choice",
                "required": false
            },
            "constant1d": {
                "__class__": "nodes.ChildNode",
                "description": null,
                "name": "constant1d",
                "occurrence": "choice",
                "required": false
            },
            "polynomial1d": {
                "__class__": "nodes.ChildNode",
                "description": null,
                "name": "polynomial1d",
                "occurrence": "choice",
                "required": false
            },
            "branching1d": {
                "__class__": "nodes.ChildNode",
                "description": "Multiplicity is computed from decay branching ratios listed in the \\elemlink{PoPs} database.",
                "name": "branching1d",
                "occurrence": "choice",
                "required": false
            },
            "reference": {
                "__class__": "nodes.ChildNode",
                "description": null,
                "name": "reference",
                "occurrence": "choice",
                "required": false
            },
            "gridded1d": {
                "__class__": "nodes.ChildNode",
                "description": "Grouped multiplicy, weighted by the cross-section and optionally by the flux. Appears in processed files only.",
                "name": "gridded1d",
                "occurrence": "choice",
                "required": false
            },
            "regions1d": {
                "__class__": "nodes.ChildNode",
                "description": null,
                "name": "regions1d",
                "occurrence": "choice",
                "required": false
            }
        },
        "description": null,
        "name": "multiplicity",
        "required": false,
        "rootNode": false
    },
    "branching1d":{
        "__class__": "nodes.Node",
        "abstractNode": "labelNode",
        "attributes": {
            "label": {
                "__class__": "nodes.Attribute",
                "default": null,
                "description": "Unique label for the multiplicity form.",
                "name": "label",
                "required": true,
                "type": "XMLName"
            }
        },
        "bodyText": null,
        "childNodes": {},
        "description": ["Indicates that the multiplicity can be computed from decay information in the \\elemlink{PoPs} database. ",
                        "Mainly used for photons emitted from discrete excited states. Also see Section~\\ref{sec:dcfdbrfcead}." ],
        "name": "branching1d",
        "required": false,
        "rootNode": false
    },

    "orphanProducts":{
        "__class__": "nodes.Node",
        "abstractNode": null,
        "attributes": {},
        "bodyText": null,
        "childNodes": {
            "orphanProduct": {
                "__class__": "nodes.ChildNode",
                "description": "A reaction container to group together groups of correlated `orphan' products.",
                "name": "orphanProduct",
                "occurrence": "1+",
                "required": true
            }
        },
        "description": [
            "The \\element{orphanProducts} node is similar to the \\element{reactions} node described in",
            "section~\\ref{format:transport:reactions}, containing a list of \\element{orphanProduct} nodes",
            "each with a \\element{crossSection} and \\element{outputChannel}.",
            "However, products inside the \\element{orphanProducts} section are not associated with a",
            "particular reaction. This section is most often used to store gamma-rays that are observed",
            "during reaction experiments but whose provenance is unknown.",
            "",
            "The \\element{crossSection} inside an orphan product reaction should be a link to one of the",
            "summed cross sections inside the \\element{sums} section (see section~\\ref{format:transport:sums})."
        ],
        "name": "orphanProducts",
        "required": false,
        "rootNode": false
    },
    "orphanProduct":{
        "__class__": "nodes.Node",
        "abstractNode": null,
        "attributes": {
            "ENDF_MT": {
                "__class__": "nodes.Attribute",
                "default": null,
                "description": ["The ENDF MT number for this orphanProduct. This attribute is currently required, ",
				"but should be considered deprecated. Future evaluations may include reactions ",
				"with no MT equivalent, so codes should not rely on the \\texttt{ENDF\\_MT}."],
                "name": "ENDF_MT",
                "required": true,
                "type": "Integer32"
            },
            "label": {
                "__class__": "nodes.Attribute",
                "default": null,
                "description": "Arbitrary string identifier. It must be unique among all other \\element{orphanProduct} elements.",
                "name": "label",
                "required": true,
                "type": "XMLName"
            }
        },
        "bodyText": null,
        "childNodes": {
            "crossSection": {
                "__class__": "nodes.ChildNode",
                "description": ["Cross section for emission of this orphan product. The cross section is typically a reference",
                                "to one of the summed cross sections defined in the \\element{sums} section of the \\element{reactionSuite}."],
                "name": "crossSection",
                "occurrence": "1",
                "required": true
            },
            "outputChannel": {
                "__class__": "nodes.ChildNode",
                "description": "Describes the outgoing energy/angular distributions for this orphanProduct.",
                "name": "outputChannel",
                "occurrence": "1",
                "required": true
            }
        },
        "description": ["An orphanProduct is observed to be emitted during the interaction between a given projectile/target,",
                        "but cannot be associated with a particular reaction."],
        "name": "orphanProduct",
        "required": false,
        "rootNode": false
    },
    "multiplicitySum":{
        "__class__": "nodes.Node",
        "abstractNode": "labelNode",
        "attributes": {
            "ENDF_MT": {
                "__class__": "nodes.Attribute",
                "default": null,
                "description": "The corresponding ENDF MT number.",
                "name": "ENDF_MT",
                "required": false,
                "type": "Integer32"
            },
            "label": {
                "__class__": "nodes.Attribute",
                "default": null,
                "description": "An arbitrary, but unique identifier for the summed cross section.",
                "name": "label",
                "required": true,
                "type": "XMLName"
            }
        },
        "bodyText": null,
        "childNodes": {
            "multiplicity": {
                "__class__": "nodes.ChildNode",
                "description": "The summed multiplicity",
                "name": "multiplicity",
                "occurrence": "1",
                "required": true
            },
            "summands": {
                "__class__": "nodes.ChildNode",
                "description": "A list of links to the partial cross sections that are the summands (hence the name of the element) of the summed reaction.",
                "name": "summands",
                "occurrence": "1",
                "required": true
            }
        },
        "description": "The \\element{multiplicitySum} sums over the multiplicity of multiple products of the same type of particle.",
        "name": "multiplicitySum",
        "required": false,
        "rootNode": false
    },
    "distribution":{
        "__class__": "nodes.Node",
        "abstractNode": null,
        "attributes": {},
        "bodyText": null,
        "childUnique" : "yesLabel",
        "childNodes": {
            "angularTwoBody": {
                "__class__": "nodes.ChildNode",
                "description": "This format is used to describe the distribution in energy and angle of particles described by two-body kinematics.  Since the energy of a particle emitted with a particular scattering cosine $\\mu$ is determined by kinematics, it is only necessary to give $P(\\mu|E)$.",
                "name": "angularTwoBody",
                "occurrence": "choice",
                "required": false
            },
            "uncorrelated": {
                "__class__": "nodes.ChildNode",
                "description": "The outgoing energy and angular data are uncorrelated with respect to the projectile's energy and can thus be written as a product of the outgoing energy probability times the outgoing angular probability as $P(\\mu,E'|E) = P(E'|E) \\, P(\\mu|E)$.  Both $P(\\mu,E'|E)$ and $P(E'|E)$ must be normalised to 1.",
                "name": "uncorrelated",
                "occurrence": "choice",
                "required": false
            },
            "angularEnergy": {
                "__class__": "nodes.ChildNode",
                "description": "The distribution is a hierarchy in $E$, then $\\mu$ and finally $E',P$. That is, the data are given at a list of $E$ values. For each $E$, there is an associated $P(\\mu,E')$. Each $P(\\mu,E')$ is given as a list $\\mu$ values. For each $\\mu$, there is an associated $f(E')$. The $f(E')$ can be  an \\XYsOneD\\ or \\regionsOneD\\ functional data container.",
                "name": "angularEnergy",
                "occurrence": "choice",
                "required": false
            },
            "energyAngular": {
                "__class__": "nodes.ChildNode",
                "description": "The distribution is stored as a hierarchy in $E$, then $E'$ and finally $\\mu,P$. That is, the data are given at a list of $E$ values. For each $E$, there is an associated $P(E',\\mu)$. Each $P(E',\\mu)$ is given as a list $E'$ values. For each $E'$, there is an associated $f(\\mu)$. The $f(\\mu)$ can be an \\XYsOneD, \\regionsOneD\\ or \\LegendreOneD\\ functional data container.",
                "name": "energyAngular",
                "occurrence": "choice",
                "required": false
            },
            "KalbachMann": {
                "__class__": "nodes.ChildNode",
                "description": " The distribution is defined using Kalbach-Mann systematics.",
                "name": "KalbachMann",
                "occurrence": "choice",
                "required": false
            },
            "reference": {
                "__class__": "nodes.ChildNode",
                "description": "Contains a link to another \\element{distribution} form.",
                "name": "reference",
                "occurrence": "choice",
                "required": false
            },
            "branching3d": {
                "__class__": "nodes.ChildNode",
                "description": [
                    "Indicates that the distribution can be computed from the decay information listed in the",
                    "\\element{PoPs} database. Currently only used for photon distributions from the decay",
                    "of discrete excited states (e.g. after inelastic scattering)."
                ],
                "name": "branching3d",
                "occurrence": "choice",
                "required": false
            },
            "CoulombPlusNuclearElastic": {
                "__class__": "nodes.ChildNode",
                "description": "This is either a container holding the differential charged particle scattering cross section or a reference to said container.",
                "name": "CoulombPlusNuclearElastic",
                "occurrence": "choice",
                "required": false
            },
            "thermalNeutronScatteringLaw": {
                "__class__": "nodes.ChildNode",
                "description": "This contains a reference to the double-differential thermal neutron scattering law cross section.",
                "name": "thermalNeutronScatteringLaw",
                "occurrence": "choice",
                "required": false
            },
            "coherentPhotonScattering": {
                "__class__": "nodes.ChildNode",
                "description": "Describes coherent photon scattering off of an atom.",
                "name": "coherentPhotonScattering",
                "occurrence": "choice",
                "required": false
            },
            "incoherentPhotonScattering": {
                "__class__": "nodes.ChildNode",
                "description": "Describes incoherent photon scattering off of an atom.",
                "name": "incoherentPhotonScattering",
                "occurrence": "choice",
                "required": false
            },
            "unspecified": {
                "__class__": "nodes.ChildNode",
                "description": "The distribution is not specified\\footnote{This often happens for reactions with a heavy product, often called the residual, where the evaluator does not give the heavy product's distribution information.  It also happens in legacy ENDF files where only the neutron and maybe the gamma distributions are given by the evaluator.}.",
                "name": "unspecified",
                "occurrence": "choice",
                "required": false
            },
            "multiGroup3d": {
                "__class__": "nodes.ChildNode",
                "description": "(appears only in processed data files). This is a multi-group Legendre expanded representation with grouped integration over $E$ and $E'$. The representation is used by deterministic transport codes.",
                "namespace": "transport",
                "name": "multiGroup3d",
                "occurrence": "choice",
                "required": false
            },
            "angularEnergyMC": {
                "__class__": "nodes.ChildNode",
                "description": "(appears only in processed data files). The distribution is the product of $P(\\mu,E) \\times P(E' | E,\\mu)$. This representation is used by Monte Carlo transport codes.",
                "name": "angularEnergyMC",
                "occurrence": "choice",
                "required": false
            },
            "energyAngularMC": {
                "__class__": "nodes.ChildNode",
                "description": "(appears only in processed data files). The distribution is the product of $P(E',E) \\times P(\\mu | E,E')$. This representation is used by Monte Carlo transport codes.",
                "name": "energyAngularMC",
                "occurrence": "choice",
                "required": false
            }
        },
        "description": "Container for all (un)correlated energy-angle distributions.",
        "name": "distribution",
        "required": false,
        "rootNode": false
    },
    "branching3d":{
        "__class__": "nodes.Node",
        "abstractNode": null,
        "attributes": {
            "label": {
                "__class__": "nodes.Attribute",
                "default": null,
                "description": "Name of the style in the \\element{styles} element associated with these data.",
                "name": "label",
                "required": true,
                "type": "XMLName"
            },
            "productFrame": {
                "__class__": "nodes.Attribute",
                "default": null,
                "description": "The frame that the product data are defined in.",
                "name": "productFrame",
                "required": true,
                "type": "XMLName"
            }
        },
        "bodyText": null,
        "childNodes": {},
        "description":  "Used when a distribution (typically for photons emitted from a discrete excited state) can be computed from decay branching ratios listed in \\elemlink{PoPs}.",
        "name": "branching3d",
        "required": false,
        "rootNode": false
    },
    "multiGroup3d":{
        "__class__": "nodes.Node",
        "abstractNode": null,
        "attributes": {
            "label": {
                "__class__": "nodes.Attribute",
                "default": null,
                "description": "Name of the style in the \\element{styles} element associated with these data.",
                "name": "label",
                "required": true,
                "type": "XMLName"
            },
            "productFrame": {
                "__class__": "nodes.Attribute",
                "default": null,
                "description": "The frame that the product data are defined in.",
                "name": "productFrame",
                "required": true,
                "type": "XMLName"
            }
        },
        "bodyText": null,
        "childNodes": {
            "gridded3d": {
                "__class__": "nodes.ChildNode",
                "description": [
                    "Transfer matrices for each Legendre order, stored in a 3-dimensional array with axes 1) incident energy group, 2) outgoing energy group and 3) Legendre order.",
                    "Depending on the associated data \\element{style}, the transfer matrices may include corrections for thermal upscattering."
                ],
                "name": "gridded3d",
                "occurrence": "1",
                "required": true
            }
        },
        "description":  "This is a multi-group Legendre expanded representation with groups integrated over $E$ and $E'$. The representation is used by deterministic transport codes.",
        "name": "scatteringMatrix",
        "required": false,
        "rootNode": false
    },
    "NBodyPhaseSpace":{
        "__class__": "nodes.Node",
        "abstractNode": null,
        "attributes": {
            "numberOfProducts": {
                "__class__": "nodes.Attribute",
                "default": null,
                "description": "The number of products being treated by this distribution.",
                "name": "numberOfProducts",
                "required": false,
                "type": "Integer32"
            }
        },
        "bodyText": null,
        "childNodes": {
            "mass": {
                "__class__": "nodes.ChildNode",
                "description": "The total mass of the products being treated by this distribution.",
                "namespace": "tsl",
                "name": "mass",
                "occurrence": "1",
                "required": false
            }
        },
        "description": "Outgoing particles using the n-body phase-space formalism",
        "name": "NBodyPhaseSpace",
        "required": false,
        "rootNode": false
    },
    "angular_uncorrelated":{
        "__class__": "nodes.Node",
        "abstractNode": null,
        "attributes": {},
        "bodyText": null,
        "childNodes": {
            "XYs2d": {
                "__class__": "nodes.ChildNode",
                "description": "$P(\\mu|E)$ given as a 2d interpolation table.",
                "name": "XYs2d",
                "occurrence": "1",
                "required": false
            },
            "isotropic2d": {
                "__class__": "nodes.ChildNode",
                "description": "The angular distribution is isotropic so $P(\\mu|E)=1/2$.",
                "name": "isotropic2d",
                "occurrence": "1",
                "required": false
            },
            "forward": {
                "__class__": "nodes.ChildNode",
                "description": "The angular distribution is pure forward-peaked so $P(\\mu|E)=\\delta(\\mu-1)$.",
                "name": "forward",
                "occurrence": "1",
                "required": false
            }
        },
        "description": null,
        "name": "angular",
        "required": false,
        "rootNode": false
    },
    "energy_uncorrelated":{
        "__class__": "nodes.Node",
        "abstractNode": null,
        "attributes": {},
        "bodyText": null,
        "childNodes": {
            "XYs2d": {
                "__class__": "nodes.ChildNode",
                "description": "$P(E'|E)$ given as a 2d interpolation table.",
                "name": "XYs2d",
                "occurrence": "1",
                "required": false
            },
            "regions2d": {
                "__class__": "nodes.ChildNode",
                "description": "$P(E'|E)$ given in multiple regions.",
                "name": "regions2d",
                "occurrence": "1",
                "required": false
            },
            "generalEvaporation": {
                "__class__": "nodes.ChildNode",
                "description": "$P(E'|E)$ stored as a general evapouration spectrum.",
                "name": "generalEvaporation",
                "occurrence": "1",
                "required": false
            },
            "discreteGamma": {
                "__class__": "nodes.ChildNode",
                "description": "$P(E'|E)=\\delta(E_\\gamma)$.",
                "name": "discreteGamma",
                "occurrence": "1",
                "required": false
            },
            "primaryGamma": {
                "__class__": "nodes.ChildNode",
                "description": "Energy distribution for a `primary capture gamma'. Unlike discrete gammas, the primary gamma energy varies with incident energy E.",
                "name": "primaryGamma",
                "occurrence": "1",
                "required": false
            },
            "NBodyPhaseSpace": {
                "__class__": "nodes.ChildNode",
                "description": "$P(E'|E)$ represented using N-body phase space (must be in the centre of mass).",
                "name": "NBodyPhaseSpace",
                "occurrence": "1",
                "required": false
            },
            "evaporation": {
                "__class__": "nodes.ChildNode",
                "description": "$P(E'|E)$ stored as an evapouration spectrum.",
                "name": "evaporation",
                "occurrence": "1",
                "required": false
            },
            "weightedFunctionals": {
                "__class__": "nodes.ChildNode",
                "description": "$P(E'|E)$ stored as the weighted sum of 2 or more other energy spectra.",
                "name": "weightedFunctionals",
                "occurrence": "1",
                "required": false
            },
            "simpleMaxwellianFission": {
                "__class__": "nodes.ChildNode",
                "description": "Maxwellian representation for $P(E'|E)$, primarily for fission neutrons.",
                "name": "simpleMaxwellianFission",
                "occurrence": "1",
                "required": false
            },
            "Watt": {
                "__class__": "nodes.ChildNode",
                "description": "Watt spectrum representation for $P(E'|E)$, primarily for fission neutrons.",
                "name": "Watt",
                "occurrence": "1",
                "required": false
            },
            "MadlandNix": {
                "__class__": "nodes.ChildNode",
                "description": "Madland-Nix parameterisation for $P(E'|E)$, primarily for fission neutrons.",
                "name": "MadlandNix",
                "occurrence": "1",
                "required": false
            }

        },
        "description": null,
        "name": "energy",
        "required": false,
        "rootNode": false
    },
    "angularEnergy":{
        "__class__": "nodes.Node",
        "abstractNode": null,
        "attributes": {
            "label": {
                "__class__": "nodes.Attribute",
                "default": null,
                "description": "Name of the style in the \\element{styles} element associated with these data.",
                "name": "label",
                "required": true,
                "type": "XMLName"
            },
            "productFrame": {
                "__class__": "nodes.Attribute",
                "default": null,
                "description": "The frame that the product data are defined in.",
                "name": "productFrame",
                "required": true,
                "type": "XMLName"
            }
        },
        "bodyText": null,
        "childNodes": {
            "XYs3d": {
                "__class__": "nodes.ChildNode",
                "description": "Distribution given as $P(\\mu, E'|E)$ using a $\\mu$ major ordering.",
                "name": "XYs3d",
                "occurrence": "1",
                "required": true
            }
        },
        "description": "A valid $P(\\mu,E'|E)$ represented with either a \\XYsThreeD\\ or \\regionsThreeD\\ functional data container.  A \\regionsThreeD\\ must contain one or more \\XYsThreeD. Each \\XYsThreeD\\ must contain a list of \\XYsTwoD\\ and/or \\regionsTwoD\\ functional data container. A \\regionsTwoD\\ must contain one or more \\XYsTwoD.  Each \\XYsTwoD\\ must contain a list of \\XYsOneD\\ and/or \\regionsOneD\\ functional data container.  Each \\regionsOneD\\ must contain one or more  \\XYsOneD\\ functional data container.",
        "name": "angularEnergy",
        "required": false,
        "rootNode": false
    },
    "energyAngular":{
        "__class__": "nodes.Node",
        "abstractNode": "distributionNode",
        "attributes": {
            "label": {
                "__class__": "nodes.Attribute",
                "default": null,
                "description": "Name of the style in the \\element{styles} element associated with these data.",
                "name": "label",
                "required": false,
                "type": "XMLName"
            },
            "productFrame": {
                "__class__": "nodes.Attribute",
                "default": null,
                "description": "The frame that the product data are defined in.",
                "name": "productFrame",
                "required": true,
                "type": "XMLName"
            }
        },
        "bodyText": null,
        "childNodes": {
            "XYs3d": {
                "__class__": "nodes.ChildNode",
                "description": "Distribution given as $P(E', \\mu|E)$ using a $E'$ major ordering.",
                "name": "XYs3d",
                "occurrence": "1",
                "required": true
            }
        },
        "description": null,
        "name": "energyAngular",
        "required": false,
        "rootNode": false
    },
    "angularTwoBody":{
        "__class__": "nodes.Node",
        "abstractNode": "distributionNode",
        "attributes": {
            "label": {
                "__class__": "nodes.Attribute",
                "default": null,
                "description": "Name of the style in the \\element{styles} element associated with these data.",
                "name": "label",
                "required": false,
                "type": "XMLName"
            },
            "productFrame": {
                "__class__": "nodes.Attribute",
                "default": null,
                "description": "The frame that the product data are defined in.",
                "name": "productFrame",
                "required": true,
                "type": "XMLName"
            }
        },
        "bodyText": null,
        "childNodes": {
            "XYs2d": {
                "__class__": "nodes.ChildNode",
                "description": "$P(\\mu|E)$ given as a 2d interpolation table.",
                "name": "XYs2d",
                "occurrence": "1",
                "required": false
            },
            "regions2d": {
                "__class__": "nodes.ChildNode",
                "description": "The angular distribution is composed of multiple regions contained within this container.",
                "name": "regions2d",
                "occurrence": "1",
                "required": false
            },
            "isotropic2d": {
                "__class__": "nodes.ChildNode",
                "description": "The angular distribution is isotropic so $P(\\mu|E)=1/2$.",
                "name": "isotropic2d",
                "occurrence": "1",
                "required": false
            },
            "recoil": {
                "__class__": "nodes.ChildNode",
                "description": "The particle in question is recoiling from the rest of the system and it's angular distribution can be determined by kinematics.",
                "name": "recoil",
                "occurrence": "1",
                "required": false
            }
        },
        "description": [
            "This form is used to describe the distribution in energy and angle of",
            "particles described by two-body kinematics.  ",
            "It corresponds to ENDF's File 6, LAW=2 and is very similar to ENDF's File~4.",
            "Since the energy of a particle emitted",
            "with a particular scattering cosine $\\mathrm{\\mu}$ is determined by",
            "kinematics, it is only necessary to specify the angular distribution which is easiest to do using Legendre polynomials:",
            "\\begin{eqnarray}",
            "   p_i (\\mu ,E) &=& \\int {dE' \\; f_i (\\mu ,E,E')}  \\nonumber \\\\",
            "                 &=& \\frac{1}{2} + \\sum_{l = 1}^{\\rm NL} {\\frac{{2l + 1}}{2} \\; a_l (E) \\; P_l (\\mu),}",
            "\\end{eqnarray}",
            "where the $P_{l}$ are the Legendre polynomials with maximum,",
            "order NL.  Note that the angular distribution $p_{i}$ is normalised."
        ],
        "name": "angularTwoBody",
        "required": false,
        "rootNode": false
    },
    "uncorrelated":{
        "__class__": "nodes.Node",
        "abstractNode": "distributionNode",
        "attributes": {
            "label": {
                "__class__": "nodes.Attribute",
                "default": null,
                "description": "Name of the style in the \\element{styles} element associated with these data.",
                "name": "label",
                "required": false,
                "type": "XMLName"
            },
            "productFrame": {
                "__class__": "nodes.Attribute",
                "default": null,
                "description": "The frame that the product data are defined in.",
                "name": "productFrame",
                "required": true,
                "type": "XMLName"
            }
        },
        "bodyText": null,
        "childNodes": {
            "angular_uncorrelated": {
                "__class__": "nodes.ChildNode",
                "description": "Any valid $P(\\mu|E)$ as defined in Section~\\ref{format:transport:angular}.",
                "name": "angular",
                "occurrence": "1",
                "required": true
            },
            "energy_uncorrelated": {
                "__class__": "nodes.ChildNode",
                "description": "Any valid $P(E'|E)$ as defined in Sections~\\ref{sec:edr}, \\ref{sec:edgbeem}, \\ref{sec:edfdg}, or \\ref{sec:edffn}.",
                "name": "energy",
                "occurrence": "1",
                "required": true
            }
        },
        "description": "The outgoing energy and angular data are uncorrelated with respect to the projectile's energy and can thus be written as a product of the outgoing energy probability times the outgoing angular probability as $P(\\mu,E'|E) = P(E'|E) \\, P(\\mu|E)$. Note, both $P(\\mu,E'|E)$ and $P(E'|E)$ must be normalised to 1.",
        "name": "uncorrelated",
        "required": false,
        "rootNode": false
    },
    "recoil":{
        "__class__": "nodes.Node",
        "abstractNode": "link",
        "attributes": {
            "href": {
                "__class__": "nodes.Attribute",
                "default": null,
                "description": "A link to the other product's distribution representation in a two-body channel.",
                "name": "href",
                "required": true,
                "type": "bodyText"
            }
        },
        "bodyText": null,
        "childNodes": {},
        "description": "In \\element{recoil} scattering, the angular distribution is the reflection in all axes of the other emitted particle's two-body product. Hence, $f(E,\\mu) = f_{\\textrm{other}}(E,-\\mu)$ where $f_{\\textrm{other}}(E,\\mu)$ is the other product's angular distribution.",
        "name": "recoil",
        "required": false,
        "rootNode": false
    },
    "KalbachMann":{
        "__class__": "nodes.Node",
        "abstractNode": "distributionNode",
        "attributes": {
            "label": {
                "__class__": "nodes.Attribute",
                "default": null,
                "description": "Name of the style in the \\element{styles} element associated with these data.",
                "name": "label",
                "required": false,
                "type": "XMLName"
            },
            "productFrame": {
                "__class__": "nodes.Attribute",
                "default": null,
                "description": "The frame that the product data are defined in. Must always be \\centerOfMass.",
                "name": "productFrame",
                "required": true,
                "type": "XMLName"
            }
        },
        "bodyText": null,
        "childNodes": {
            "f": {
                "__class__": "nodes.ChildNode",
                "description": "Kalbach-Mann $f$ parameter.",
                "name": "f",
                "occurrence": "1",
                "required": true
            },
            "r": {
                "__class__": "nodes.ChildNode",
                "description": "Kalbach-Mann $r$ parameter.",
                "name": "r",
                "occurrence": "1",
                "required": true
            },
            "a": {
                "__class__": "nodes.ChildNode",
                "description": "Kalbach-Mann $a$ parameter.",
                "namespace": "transport",
                "name": "a",
                "occurrence": "1",
                "required": false
            }
        },
        "description": "Kalbach-Mann distribution for outgoing particles.",
        "name": "KalbachMann",
        "required": false,
        "rootNode": false
    },
    "generalEvaporation":{
        "__class__": "nodes.Node",
        "abstractNode": null,
        "attributes": {},
        "bodyText": null,
        "childNodes": {
            "U": {
                "__class__": "nodes.ChildNode",
                "description": "The U value.",
                "name": "U",
                "occurrence": "1",
                "required": false
            },
            "g": {
                "__class__": "nodes.ChildNode",
                "description": "Container that represents a valid $g(x)$ where $x = E' / \\theta(E)$",
                "name": "g",
                "occurrence": "1",
                "required": false
            },
            "theta": {
                "__class__": "nodes.ChildNode",
                "description": "Data container that represents a valid $\\theta(E)$",
                "name": "theta",
                "occurrence": "1",
                "required": false
            }
        },
        "description": [
            "This defines the energy distribution for",
            "\\begin{displaymath}",
            "    P(E'|E) = g\\left( E' / \\theta (E) \\right)",
            "\\end{displaymath}",
            "and is equivalent to ENDF-6's format's $f(E \\to E')$ in MF=5, LF=5."
        ],
        "name": "generalEvaporation",
        "required": false,
        "rootNode": false
    },
    "weightedFunctionals":{
        "__class__": "nodes.Node",
        "abstractNode": null,
        "attributes": {},
        "bodyText": null,
        "childNodes": {
            "weighted": {
                "__class__": "nodes.ChildNode",
                "description": [
                    "The partial energy distributions $f_{k}(E\\rightarrow E')$ are represented by various analytical formulations.",
                    "Each formulation is also an energy distribution."
                ],
                "name": "weighted",
                "occurrence": "1",
                "required": true
            }
        },
        "description": [
            "The energy distributions $P(E'|E)$ can be broken down into partial energy distributions $f_{k}(E\\rightarrow E')$,",
            "where each of the partial distributions can be described by a different analytic representation;\n",
            "\\begin{equation}\n",
            "    P(E'|E) = \\sum\\limits_{k = 1}^{\\rm NK} p_k (E)f_k (E \\to E')\n",
            "\\end{equation}\n",
            "and at a particular incident energy $E$,",
            "\\begin{equation}\n",
            "    \\sum\\limits_{k = 1}^{\\rm NK} p_k (E) = 1\n",
            "\\end{equation}\n",
            "where $p_{k}(E)$ is the fractional probability",
            "that the distribution $f_{k}(E\\rightarrow E')$ can be used at energy $E$.",
            "The partial energy distributions $f_{k}(E\\rightarrow E')$ are represented by various analytical formulations.",
            "Each formulation is also an energy distribution."
        ],
        "name": "weightedFunctionals",
        "required": false,
        "rootNode": false
    },
    "evaporation":{
        "__class__": "nodes.Node",
        "abstractNode": null,
        "attributes": {},
        "bodyText": null,
        "childNodes": {
            "U": {
                "__class__": "nodes.ChildNode",
                "description": "The U value.",
                "name": "U",
                "occurrence": "1",
                "required": false
            },
            "theta": {
                "__class__": "nodes.ChildNode",
                "description": "Data container that represents a valid $\\theta(E)$",
                "name": "theta",
                "occurrence": "1",
                "required": false
            }
        },
        "description": [
            "This element allows one to store a ``fixed temperature'' thermal spectrum and is equivalent to ENDF-6's MF=6, LF=9 format.",
            "\\begin{displaymath}",
            "     P(E'|E) = \\frac{{E'}}{I}e^{ - E'/\\theta (E)}",
            "\\end{displaymath}",
            "where $I$ is the normalisation constant:",
            "\\begin{displaymath}",
            "    I = \\theta ^2 \\left[ {1 - e^{ - (E - U)/\\theta } \\left(",
            "    {1 + \\frac{{E - U}}{\\theta }} \\right)} \\right]",
            "\\end{displaymath}"],
        "name": "evaporation",
        "required": false,
        "rootNode": false
    },
    "unspecified":{
        "__class__": "nodes.Node",
        "abstractNode": "distributionNode",
        "attributes": {
            "label": {
                "__class__": "nodes.Attribute",
                "default": null,
                "description": "Name of the style in the \\element{styles} element associated with these data.",
                "name": "label",
                "required": false,
                "type": "XMLName"
            },
            "productFrame": {
                "__class__": "nodes.Attribute",
                "default": null,
                "description": "The frame that the product data are defined in.",
                "name": "productFrame",
                "required": true,
                "type": "XMLName"
            }
        },
        "bodyText": null,
        "childNodes": {},
        "description": "The distribution is not specified\\footnote{This often happens for reactions with a heavy product, (the heavy product is often called the residual) where the evaluator does not give the heavy product's distribution information.  It also happens in legacy ENDF files where only the neutron and maybe the gamma distributions are given by the evaluator.}.",
        "name": "unspecified",
        "required": false,
        "rootNode": false
    },
    "discreteGamma":{
        "__class__": "nodes.Node",
        "abstractNode": null,
        "attributes": {
            "domainMax": {
                "__class__": "nodes.Attribute",
                "default": null,
                "description": null,
                "name": "domainMax",
                "required": false,
                "type": "Float64"
            },
            "domainMin": {
                "__class__": "nodes.Attribute",
                "default": null,
                "description": null,
                "name": "domainMin",
                "required": false,
                "type": "Float64"
            },
            "value": {
                "__class__": "nodes.Attribute",
                "default": null,
                "description": ["$E_\\gamma$, the outgoing gammma energy (in eV)"],
                "name": "value",
                "required": false,
                "type": "Float64"
            }
        },
        "bodyText": null,
        "childNodes": {
            "axes": {
                "__class__": "nodes.ChildNode",
                "description": null,
                "name": "axes",
                "occurrence": "1",
                "required": false
            }
        },
        "description": ["This format is to store the discrete energy of a photon from a bound level-bound ",
			"level transition in which either the initial or final level is unspecified.  ",
			"The photon energy is simply $E_\\gamma'$.\n"],
        "name": "discreteGamma",
        "required": false,
        "rootNode": false
    },
    "photonEmissionProbabilities":{
        "__class__": "nodes.Node",
        "abstractNode": null,
        "attributes": {},
        "bodyText": null,
        "childNodes": {
            "shell": {
                "__class__": "nodes.ChildNode",
                "description": null,
                "name": "shell",
                "occurrence": "1",
                "required": false
            }
        },
        "description": null,
        "name": "photonEmissionProbabilities",
        "required": false,
        "rootNode": false
    },
    "primaryGamma":{
        "__class__": "nodes.Node",
        "abstractNode": null,
        "attributes": {
            "domainMax": {
                "__class__": "nodes.Attribute",
                "default": null,
                "description": null,
                "name": "domainMax",
                "required": false,
                "type": "Float64"
            },
            "domainMin": {
                "__class__": "nodes.Attribute",
                "default": null,
                "description": null,
                "name": "domainMin",
                "required": false,
                "type": "Float64"
            },
            "value": {
                "__class__": "nodes.Attribute",
                "default": null,
                "description": [
                    "$E^0_\\gamma$, the parameter needed to define the outgoing gammma energy as a function of the incident particle energy (in eV).",
                    "If not given, then a \\attr{finalState} must be specified."
                ],
                "name": "value",
                "required": false,
                "type": "Float64"
            },
            "finalState": {
                "__class__": "nodes.Attribute",
                "default": null,
                "description": [
                    "The pid of the final state for this primary gamma ray transition.  ",
                    "This should be a valid \\element{nuclide}'s \\attr{id}.  ",
                    "If known, then modeling the coincidence gamma emission following this primary gamma can be done."],
                "name": "finalState",
                "required": false,
                "type": "XMLName"
            }
        },
        "bodyText": null,
        "childNodes": {
            "axes": {
                "__class__": "nodes.ChildNode",
                "description": null,
                "name": "axes",
                "occurrence": "1",
                "required": false
            }
        },
        "description": ["This format is to store the discrete energy of a photon from an unbound level-bound level transition.  ",
			"The unbound level is above the target+projectile separation energy. ",
			"The photon energy depends on the incident projectile energy $E$ and an optional parameter $E^0_\\gamma$.",
            "Ignoring the recoil of the residual nucleus, ",
			"\n\\begin{displaymath}\n\tE_\\gamma'   =  E^0_\\gamma   +   E \\; \\frac{M_{\\scriptsize{\\textrm{target}}}}{M_{\\scriptsize{\\textrm{target}}} + M_{\\scriptsize{\\textrm{projectile}}}}.\n\\end{displaymath}\n",
            "Including the recoil, one finds ",
            "\n\\begin{displaymath}\n\tE_\\gamma'   =  E^0_\\gamma   +   E \\; \\frac{M_{\\scriptsize{\\textrm{target}}}}{M_{\\scriptsize{\\textrm{target}}} + M_{\\scriptsize{\\textrm{projectile}}}} \\left(1-\\frac{Q}{(M_{\\scriptsize{\\textrm{target}}} + M_{\\scriptsize{\\textrm{projectile}}})c^2}\\right).\n\\end{displaymath}\n",
            "where $Q=M_{\\scriptsize{\\textrm{target}}} + M_{\\scriptsize{\\textrm{projectile}}} - M_{\\scriptsize{\\textrm{residual}}}$.",
            "The optional parameter $E^0_\\gamma$ is",
            "\n\\begin{displaymath}\n\tE^0_\\gamma  =  Q \\; \\left(1-\\frac{Q}{2(M_{\\scriptsize{\\textrm{target}}} + M_{\\scriptsize{\\textrm{projectile}}})c^2}\\right).\n\\end{displaymath}\n",
            "Thus, if the final state of the residual nucleus is known, then $M_{\\scriptsize{\\textrm{residual}}}$ is known, enabling both the recoil corrections and complete specification of $E^0_\\gamma$.",
            "Furthermore, one has the additional information needed to continue the secondary cascade induced in the residual nucleus by the present primary gamma."
        ],
        "name": "primaryGamma",
        "required": false,
        "rootNode": false
    },
    "production":{
        "__class__": "nodes.Node",
        "abstractNode": null,
        "attributes": {
            "ENDF_MT": {
                "__class__": "nodes.Attribute",
                "default": null,
                "description": "An integer MT number (e.g. `3' for the non-elastic cross section which may produce gamma products).",
                "name": "ENDF_MT",
                "required": false,
                "type": "Integer32"
            },
            "label": {
                "__class__": "nodes.Attribute",
                "default": null,
                "description": null,
                "name": "label",
                "required": false,
                "type": "XMLName"
            }
        },
        "bodyText": null,
        "childNodes": {
            "crossSection": {
                "__class__": "nodes.ChildNode",
                "description": null,
                "name": "crossSection",
                "occurrence": "1",
                "required": false
            },
            "outputChannel": {
                "__class__": "nodes.ChildNode",
                "description": "Describes the secondary particle emissions from the reaction",
                "name": "outputChannel",
                "occurrence": "1",
                "required": false
            }
        },
        "description": [
            "A \\elemlink{production} node defines a single production reaction.",
            "Like the \\elemlink{reaction} it contains a cross section and an outputChannel.",
            "Unlike a \\elemlink{reaction}, the \\elemlink{production} does not force the evaluator to",
            "differentiate between different ways of getting to the same residual. For example,",
            "the `n,d' `n,n+p' and `n,p+n' reactions all end up at the same residual. Inside the",
            "\\elemlink{reactions} section, evaluators may choose to store each one separately.",
            "In the \\elemlink{productions} section the three methods can be combined into a single",
            "reaction that produces the final residual."
        ],
        "name": "production",
        "required": false,
        "rootNode": false
    },
    "productions":{
        "__class__": "nodes.Node",
        "abstractNode": null,
        "attributes": {},
        "bodyText": null,
        "childNodes": {
            "production": {
                "__class__": "nodes.ChildNode",
                "description": null,
                "name": "production",
                "occurrence": "1",
                "required": false
            }
        },
        "description": [
            "Production reactions are used for inventory applications (such as dosimetry, decay heat, and activity) ",
            "and for calculating the amount of ",
            "material accreted and/or depleted during radiation exposure."
        ],
        "name": "productions",
        "required": false,
        "rootNode": false
    },
    "incompleteReactions":{
        "__class__": "nodes.Node",
        "abstractNode": null,
        "attributes": {},
        "bodyText": null,
        "childNodes": {
            "reaction": {
                "__class__": "nodes.ChildNode",
                "description": null,
                "name": "reaction",
                "occurrence": "1",
                "required": false
            }
        },
        "description": [
            "The \\element{incompleteReactions} section allows evaluators to include information about reactions ", "without providing complete information. For example, some sub-actinide fission reaction cross sections ",
            "may be included as only a total fission cross section. This allows simulations to account for the ",
            "reaction while not considering all of the reaction process (e.g. neutron production and fission ",
            "products) or allows the evaluator to provide other information. It is strongly recommended that",
            "this be used only in cases where the reaction cross sections are negligible. "
        ],
        "name": "incompleteReactions",
        "required": false,
        "rootNode": false
    },
    "summands":{
       "__class__": "nodes.Node",
       "abstractNode": null,
       "attributes": {},
       "bodyText": null,
       "childNodes": {
           "add": {
               "__class__": "nodes.ChildNode",
               "description": null,
               "name": "add",
               "occurrence": "1+",
               "required": false
           }
       },
       "description": null,
       "name": "summands",
       "required": false,
       "rootNode": false
    },
    "add":{
        "__class__": "nodes.Node",
        "abstractNode": null,
        "attributes": {
            "href": {
                "__class__": "nodes.Attribute",
                "default": null,
                "description": null,
                "name": "href",
                "required": false,
                "type": "bodyText"
            }
        },
        "bodyText": null,
        "childNodes": {},
        "description": null,
        "name": "add",
        "required": false,
        "rootNode": false
    },
    "f":{
        "__class__": "nodes.Node",
        "abstractNode": null,
        "attributes": {},
        "bodyText": null,
        "childNodes": {
            "XYs2d": {
                "__class__": "nodes.ChildNode",
                "description": null,
                "name": "XYs2d",
                "occurrence": "choice",
                "required": false
            },
            "regions2d": {
                "__class__": "nodes.ChildNode",
                "description": null,
                "name": "regions2d",
                "occurrence": "choice",
                "required": false
            }
        },
        "description": "Kalbach-Mann $f(E,E')$ parameter, stored either as an \\XYsTwoD\\ or \\regionsTwoD\\ functional data container.",
        "name": "f",
        "required": false,
        "rootNode": false
    },
    "g":{
        "__class__": "nodes.Node",
        "abstractNode": null,
        "attributes": {},
        "bodyText": null,
        "childNodes": {
            "XYs1d": {
                "__class__": "nodes.ChildNode",
                "description": "The $g(x)$ given as an interpolation table.",
                "name": "XYs1d",
                "occurrence": "1",
                "required": false
            },
            "regions1d": {
                "__class__": "nodes.ChildNode",
                "description": "The $g(x)$ given as a few interpolation tables.",
                "name": "regions1d",
                "occurrence": "1",
                "required": false
            }
        },
        "description": "An arbitrary energy dependent weighting, tabulated as a function of $x$, and $x = E'/\\theta (E)$.",
        "name": "g",
        "required": false,
        "rootNode": false
    },
    "r":{
        "__class__": "nodes.Node",
        "abstractNode": null,
        "attributes": {},
        "bodyText": null,
        "childNodes": {
            "XYs2d": {
                "__class__": "nodes.ChildNode",
                "description": null,
                "name": "XYs2d",
                "occurrence": "choice",
                "required": false
            },
            "regions2d": {
                "__class__": "nodes.ChildNode",
                "description": null,
                "name": "regions2d",
                "occurrence": "choice",
                "required": false
            }
        },
        "description": "Kalbach-Mann $r(E,E')$ parameter, stored either as an \\XYsTwoD\\ or \\regionsTwoD\\ functional data container.",
        "name": "r",
        "required": false,
        "rootNode": false
    },
    "a":{
        "__class__": "nodes.Node",
        "abstractNode": null,
        "attributes": {},
        "bodyText": null,
        "childNodes": {
            "XYs2d": {
                "__class__": "nodes.ChildNode",
                "description": null,
                "name": "XYs2d",
                "occurrence": "choice",
                "required": false
            },
            "regions2d": {
                "__class__": "nodes.ChildNode",
                "description": null,
                "name": "regions2d",
                "occurrence": "choice",
                "required": false
            }
        },
        "description": "Kalbach-Mann $a(E,E')$ parameter, stored either as an \\XYsTwoD\\ or \\regionsTwoD\\ functional data container.",
        "name": "a",
        "required": false,
        "rootNode": false
    },
    "theta":{
        "__class__": "nodes.Node",
        "abstractNode": null,
        "attributes": {},
        "bodyText": null,
        "childNodes": {
            "XYs1d": {
                "__class__": "nodes.ChildNode",
                "description": "The $\\theta(E)$ given as an interpolation table.",
                "name": "XYs1d",
                "occurrence": "1",
                "required": false
            },
            "regions1d": {
                "__class__": "nodes.ChildNode",
                "description": "The $\\theta(E)$ given as a few interpolation tables.",
                "name": "regions1d",
                "occurrence": "1",
                "required": false
            }
        },
        "description": "$\\theta$ is an effective emission temperature.",
        "name": "theta",
        "required": false,
        "rootNode": false
    },
    "U":{
        "__class__": "nodes.Node",
        "abstractNode": null,
        "attributes": {
            "unit": {
                "__class__": "nodes.Attribute",
                "default": null,
                "description": "A valid energy unit for U",
                "name": "unit",
                "required": false,
                "type": "XMLName"
            },
            "value": {
                "__class__": "nodes.Attribute",
                "default": null,
                "description": "The value of U given as a Float64",
                "name": "value",
                "required": false,
                "type": "Float64"
            }
        },
        "bodyText": null,
        "childNodes": {},
        "description": "$U$ is a constant introduced to define the proper upper limit for the final particle energy such that $0 \\leq E' \\leq (E - U)$.",
        "name": "U",
        "required": false,
        "rootNode": false
    },
    "forward":{
        "__class__": "nodes.Node",
        "abstractNode": null,
        "attributes": {},
        "bodyText": null,
        "childNodes": {},
        "description": "In forward scattering, the product goes in the same direction as the projectile.  As the distributions is always normalised to 1, $f(E,\\mu) = P(\\mu|E) = \\delta(\\mu - 1)$.  This is needed per Section~26.1, paragraph 3 of the ENDF manual \\cite{ENDF6Doc}.",
        "name": "forward",
        "required": false,
        "rootNode": false
    },
    "isotropic2d":{
        "__class__": "nodes.Node",
        "abstractNode": null,
        "attributes": {},
        "bodyText": null,
        "childNodes": {},
        "description": "When the scattering is isotropic and independent of energy $E$ the \\element{isotropic} angular distribution can be used. Normalisation is always 1; hence, $f(E,\\mu) = P(\\mu,E) = 1/2$.",
        "name": "isotropic2d",
        "required": false,
        "rootNode": false
    },
    "weighted":{
        "__class__": "nodes.Node",
        "abstractNode": null,
        "attributes": {},
        "bodyText": null,
        "childNodes": {
            "XYs1d": {
                "__class__": "nodes.ChildNode",
                "description": "The weighting function $p_k(E)$ given as an XYs1d.",
                "name": "XYs1d",
                "occurrence": "1",
                "required": true
            },
            "XYs2d": {
                "__class__": "nodes.ChildNode",
                "description": "The energy distribution $f_{k}(E\\rightarrow E')$ given as an \\element{XYs2d}.",
                "name": "XYs2d",
                "occurrence": "1",
                "required": false
            },
            "evaporation": {
                "__class__": "nodes.ChildNode",
                "description": "The energy distribution $f_{k}(E\\rightarrow E')$ given as an \\element{evaporation}.",
                "name": "evaporation",
                "occurrence": "1",
                "required": false
            },
            "generalEvaporation": {
                "__class__": "nodes.ChildNode",
                "description": "The energy distribution $f_{k}(E\\rightarrow E')$ given as an \\element{generalEvaporation}.",
                "name": "generalEvaporation",
                "occurrence": "1",
                "required": false
            },
            "simpleMaxwellianFission": {
                "__class__": "nodes.ChildNode",
                "description": "Maxwellian representation for $P(E'|E)$, primarily for fission neutrons.",
                "name": "simpleMaxwellianFission",
                "occurrence": "1",
                "required": false
            },
            "Watt": {
                "__class__": "nodes.ChildNode",
                "description": "Watt spectrum representation for $P(E'|E)$, primarily for fission neutrons.",
                "name": "Watt",
                "occurrence": "1",
                "required": false
            },
            "MadlandNix": {
                "__class__": "nodes.ChildNode",
                "description": "Madland-Nix parameterisation for $P(E'|E)$, primarily for fission neutrons.",
                "name": "MadlandNix",
                "occurrence": "1",
                "required": false
            }
        },
        "description": [
            "The partial energy distributions $f_{k}(E\\rightarrow E')$ are represented by various analytical formulations.",
            "Each formulation is itself an energy distribution."
        ],
        "name": "weighted",
        "required": true,
        "rootNode": false
    },
    "reference":{
        "__class__": "nodes.Node",
        "abstractNode": "labelNode",
        "attributes": {
            "href": {
                "__class__": "nodes.Attribute",
                "default": null,
                "description": "Link (using xPath syntax) to another multiplicity in the file. Link may be absolute or relative.",
                "name": "href",
                "required": false,
                "type": "bodyText"
            },
            "label": {
                "__class__": "nodes.Attribute",
                "default": null,
                "description": null,
                "name": "label",
                "required": false,
                "type": "XMLName"
            }
        },
        "bodyText": null,
        "childNodes": {},
        "description": "A multiplicity may consist of a link to another multiplicity in the same file. The primary purpose for this option is to associate fission neutron multiplicity with a fission \\element{reaction}.",
        "name": "reference",
        "required": false,
        "rootNode": false
    }
}
