
// THIS FILE WAS AUTOGENERATED!
// DO NOT MODIFY!

#ifndef TEST_V2_0_DOCUMENTATION_INPUTDECKS
#define TEST_V2_0_DOCUMENTATION_INPUTDECKS

#include "test/v2.0/documentation/InputDeck.hpp"

namespace test {
namespace v2_0 {
namespace documentation {

// -----------------------------------------------------------------------------
// documentation::
// class InputDecks
// -----------------------------------------------------------------------------

class InputDecks :
   public Component<documentation::InputDecks>
{
   friend class Component;

   // ------------------------
   // For Component
   // ------------------------

   // Names: this namespace, this class, and a field/node of this type
   static auto NAMESPACE() { return "documentation"; }
   static auto CLASS() { return "InputDecks"; }
   static auto FIELD() { return "inputDecks"; }

   // Core Interface multi-query to transfer information to/from Nodes
   static auto KEYS()
   {
      return
         // comment
         ++Child<std::string>(special::comment) / CommentConverter{} |

         // children
         ++Child<documentation::InputDeck>("inputDeck")
      ;
   }

public:
   using Component::construct;

   // comment
   Field<std::vector<std::string>> comment{this};

   // children
   Field<std::vector<documentation::InputDeck>> inputDeck{this};

   // ------------------------
   // Constructors
   // ------------------------

   #define GNDSTK_COMPONENT(blockdata) Component(blockdata, \
      this->comment, \
      this->inputDeck)

   // default
   InputDecks() :
      GNDSTK_COMPONENT(BlockData{})
   {
      Component::finish();
   }

   // from fields, comment excluded
   explicit InputDecks(
      const wrapper<std::vector<documentation::InputDeck>> &inputDeck
   ) :
      GNDSTK_COMPONENT(BlockData{}),
      inputDeck(this,inputDeck)
   {
      Component::finish();
   }

   // from node
   explicit InputDecks(const Node &node) :
      GNDSTK_COMPONENT(BlockData{})
   {
      Component::finish(node);
   }

   // copy
   InputDecks(const InputDecks &other) :
      GNDSTK_COMPONENT(other.baseBlockData()),
      comment(this,other.comment),
      inputDeck(this,other.inputDeck)
   {
      Component::finish(other);
   }

   // move
   InputDecks(InputDecks &&other) :
      GNDSTK_COMPONENT(other.baseBlockData()),
      comment(this,std::move(other.comment)),
      inputDeck(this,std::move(other.inputDeck))
   {
      Component::finish(other);
   }

   // ------------------------
   // Assignment operators
   // ------------------------

   InputDecks &operator=(const InputDecks &) = default;
   InputDecks &operator=(InputDecks &&) = default;

   // ------------------------
   // Custom functionality
   // ------------------------

   #include "test/v2.0/documentation/InputDecks/src/custom.hpp"
   #undef GNDSTK_COMPONENT
}; // class InputDecks

} // namespace documentation
} // namespace v2_0
} // namespace test

#endif
