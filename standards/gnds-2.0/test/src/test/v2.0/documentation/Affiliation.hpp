
// THIS FILE WAS AUTOGENERATED!
// DO NOT MODIFY!

#ifndef TEST_V2_0_DOCUMENTATION_AFFILIATION
#define TEST_V2_0_DOCUMENTATION_AFFILIATION

#include "test/v2.0/key.hpp"

namespace test {
namespace v2_0 {
namespace documentation {

// -----------------------------------------------------------------------------
// documentation::
// class Affiliation
// -----------------------------------------------------------------------------

class Affiliation : public Component<documentation::Affiliation> {
   friend class Component;

   // ------------------------
   // For Component
   // ------------------------

   // Names: this namespace, this class, a field/node of this type
   static auto NAMESPACE() { return "documentation"; }
   static auto CLASS() { return "Affiliation"; }
   static auto FIELD() { return "affiliation"; }

   // Core Interface multi-query to extract metadata and child nodes
   static auto KEYS()
   {
      return
         // metadata
         UTF8Text{}
            / Meta<>("name") |
         std::optional<UTF8Text>{}
            / Meta<>("href")
      ;
   }

public:
   using Component::construct;

   // metadata
   Field<UTF8Text> name{this};
   Field<std::optional<UTF8Text>> href{this};

   // ------------------------
   // Constructors
   // ------------------------

   #define GNDSTK_COMPONENT(blockdata) Component(blockdata, \
      this->name, \
      this->href)

   // default
   Affiliation() :
      GNDSTK_COMPONENT(BlockData{})
   {
      Component::finish();
   }

   // from fields
   explicit Affiliation(
      const wrapper<UTF8Text> &name,
      const wrapper<std::optional<UTF8Text>> &href = {}
   ) :
      GNDSTK_COMPONENT(BlockData{}),
      name(this,name),
      href(this,href)
   {
      Component::finish();
   }

   // from node
   explicit Affiliation(const Node &node) :
      GNDSTK_COMPONENT(BlockData{})
   {
      Component::finish(node);
   }

   // copy
   Affiliation(const Affiliation &other) :
      GNDSTK_COMPONENT(other.baseBlockData()),
      name(this,other.name),
      href(this,other.href)
   {
      Component::finish(other);
   }

   // move
   Affiliation(Affiliation &&other) :
      GNDSTK_COMPONENT(other.baseBlockData()),
      name(this,std::move(other.name)),
      href(this,std::move(other.href))
   {
      Component::finish(other);
   }

   // ------------------------
   // Assignment operators
   // ------------------------

   Affiliation &operator=(const Affiliation &) = default;
   Affiliation &operator=(Affiliation &&) = default;

   // ------------------------
   // Custom functionality
   // ------------------------

   #include "test/v2.0/documentation/Affiliation/src/custom.hpp"
   #undef GNDSTK_COMPONENT
}; // class Affiliation

} // namespace documentation
} // namespace v2_0
} // namespace test

#endif
