
// THIS FILE WAS AUTOGENERATED!
// DO NOT MODIFY!

#ifndef TEST_V2_0_STYLES_MULTIGROUP
#define TEST_V2_0_STYLES_MULTIGROUP

#include "test/v2.0/containers/Grid.hpp"

namespace test {
namespace v2_0 {
namespace styles {

// -----------------------------------------------------------------------------
// styles::
// class MultiGroup
// -----------------------------------------------------------------------------

class MultiGroup :
   public Component<styles::MultiGroup>
{
   friend class Component;

   // ------------------------
   // For Component
   // ------------------------

   // Names: this namespace, this class, and a field/node of this type
   static auto NAMESPACE() { return "styles"; }
   static auto CLASS() { return "MultiGroup"; }
   static auto FIELD() { return "multiGroup"; }

   // Core Interface multi-query to transfer information to/from Nodes
   static auto KEYS()
   {
      return
         // comment
         ++Child<std::string>(special::comment) / CommentConverter{} |

         // metadata
         XMLName{}
            / Meta<>("label") |

         // children
         --Child<containers::Grid>("grid")
      ;
   }

public:
   using Component::construct;

   // comment
   Field<std::vector<std::string>> comment{this};

   // metadata
   Field<XMLName> label{this};

   // children
   Field<containers::Grid> grid{this};

   // ------------------------
   // Constructors
   // ------------------------

   #define GNDSTK_COMPONENT(blockdata) Component(blockdata, \
      this->comment, \
      this->label, \
      this->grid)

   // default
   MultiGroup() :
      GNDSTK_COMPONENT(BlockData{})
   {
      Component::finish();
   }

   // from fields, comment excluded
   explicit MultiGroup(
      const wrapper<XMLName> &label,
      const wrapper<containers::Grid> &grid = {}
   ) :
      GNDSTK_COMPONENT(BlockData{}),
      label(this,label),
      grid(this,grid)
   {
      Component::finish();
   }

   // from node
   explicit MultiGroup(const Node &node) :
      GNDSTK_COMPONENT(BlockData{})
   {
      Component::finish(node);
   }

   // copy
   MultiGroup(const MultiGroup &other) :
      GNDSTK_COMPONENT(other.baseBlockData()),
      comment(this,other.comment),
      label(this,other.label),
      grid(this,other.grid)
   {
      Component::finish(other);
   }

   // move
   MultiGroup(MultiGroup &&other) :
      GNDSTK_COMPONENT(other.baseBlockData()),
      comment(this,std::move(other.comment)),
      label(this,std::move(other.label)),
      grid(this,std::move(other.grid))
   {
      Component::finish(other);
   }

   // ------------------------
   // Assignment operators
   // ------------------------

   MultiGroup &operator=(const MultiGroup &) = default;
   MultiGroup &operator=(MultiGroup &&) = default;

   // ------------------------
   // Custom functionality
   // ------------------------

   #include "test/v2.0/styles/MultiGroup/src/custom.hpp"
   #undef GNDSTK_COMPONENT
}; // class MultiGroup

} // namespace styles
} // namespace v2_0
} // namespace test

#endif
