
// THIS FILE WAS AUTOGENERATED!
// DO NOT MODIFY!

#ifndef TEST_V2_0_STYLES_SIGMAZEROS
#define TEST_V2_0_STYLES_SIGMAZEROS

#include "test/v2.0/containers/Values.hpp"

namespace test {
namespace v2_0 {
namespace styles {

// -----------------------------------------------------------------------------
// styles::
// class SigmaZeros
// -----------------------------------------------------------------------------

class SigmaZeros :
   public Component<styles::SigmaZeros>
{
   friend class Component;

   // ------------------------
   // For Component
   // ------------------------

   // Names: this namespace, this class, and a field/node of this type
   static auto NAMESPACE() { return "styles"; }
   static auto CLASS() { return "SigmaZeros"; }
   static auto FIELD() { return "sigmaZeros"; }

   // Core Interface multi-query to transfer information to/from Nodes
   static auto KEYS()
   {
      return
         // comment
         ++Child<std::string>(special::comment) / CommentConverter{} |

         // metadata
         std::optional<XMLName>{}
            / Meta<>("label") |

         // children
         --Child<containers::Values>("values")
      ;
   }

public:
   using Component::construct;

   // comment
   Field<std::vector<std::string>> comment{this};

   // metadata
   Field<std::optional<XMLName>> label{this};

   // children
   Field<containers::Values> values{this};

   // ------------------------
   // Constructors
   // ------------------------

   #define GNDSTK_COMPONENT(blockdata) Component(blockdata, \
      this->comment, \
      this->label, \
      this->values)

   // default
   SigmaZeros() :
      GNDSTK_COMPONENT(BlockData{})
   {
      Component::finish();
   }

   // from fields, comment excluded
   explicit SigmaZeros(
      const wrapper<std::optional<XMLName>> &label,
      const wrapper<containers::Values> &values = {}
   ) :
      GNDSTK_COMPONENT(BlockData{}),
      label(this,label),
      values(this,values)
   {
      Component::finish();
   }

   // from node
   explicit SigmaZeros(const Node &node) :
      GNDSTK_COMPONENT(BlockData{})
   {
      Component::finish(node);
   }

   // copy
   SigmaZeros(const SigmaZeros &other) :
      GNDSTK_COMPONENT(other.baseBlockData()),
      comment(this,other.comment),
      label(this,other.label),
      values(this,other.values)
   {
      Component::finish(other);
   }

   // move
   SigmaZeros(SigmaZeros &&other) :
      GNDSTK_COMPONENT(other.baseBlockData()),
      comment(this,std::move(other.comment)),
      label(this,std::move(other.label)),
      values(this,std::move(other.values))
   {
      Component::finish(other);
   }

   // ------------------------
   // Assignment operators
   // ------------------------

   SigmaZeros &operator=(const SigmaZeros &) = default;
   SigmaZeros &operator=(SigmaZeros &&) = default;

   // ------------------------
   // Custom functionality
   // ------------------------

   #include "test/v2.0/styles/SigmaZeros/src/custom.hpp"
   #undef GNDSTK_COMPONENT
}; // class SigmaZeros

} // namespace styles
} // namespace v2_0
} // namespace test

#endif
