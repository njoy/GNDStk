
// THIS FILE WAS AUTOGENERATED!
// DO NOT MODIFY!

#ifndef TEST_V2_0_STYLES_TRANSPORTABLES
#define TEST_V2_0_STYLES_TRANSPORTABLES

#include "test/v2.0/styles/Transportable.hpp"

namespace test {
namespace v2_0 {
namespace styles {

// -----------------------------------------------------------------------------
// styles::
// class Transportables
// -----------------------------------------------------------------------------

class Transportables : public Component<styles::Transportables> {
   friend class Component;

   // ------------------------
   // For Component
   // ------------------------

   // Names: this namespace, this class, a field/node of this type
   static auto NAMESPACE() { return "styles"; }
   static auto CLASS() { return "Transportables"; }
   static auto FIELD() { return "transportables"; }

   // Core Interface multi-query to extract metadata and child nodes
   static auto KEYS()
   {
      return
         // metadata
         std::optional<XMLName>{}
            / Meta<>("label") |
         // children
         styles::Transportable{}
            / ++Child<>("transportable")
      ;
   }

public:
   using Component::construct;

   // metadata
   Field<std::optional<XMLName>> label{this};

   // children
   Field<std::vector<styles::Transportable>> transportable{this};

   // ------------------------
   // Constructors
   // ------------------------

   #define GNDSTK_COMPONENT(blockdata) Component(blockdata, \
      this->label, \
      this->transportable)

   // default, and from fields
   explicit Transportables(
      const wrapper<std::optional<XMLName>> &label = {},
      const wrapper<std::vector<styles::Transportable>> &transportable = {}
   ) :
      GNDSTK_COMPONENT(BlockData{}),
      label(this,label),
      transportable(this,transportable)
   {
      Component::finish();
   }

   // from node
   explicit Transportables(const Node &node) :
      GNDSTK_COMPONENT(BlockData{})
   {
      Component::finish(node);
   }

   // copy
   Transportables(const Transportables &other) :
      GNDSTK_COMPONENT(other.baseBlockData())
   {
      *this = other;
      Component::finish(other);
   }

   // move
   Transportables(Transportables &&other) :
      GNDSTK_COMPONENT(other.baseBlockData())
   {
      *this = std::move(other);
      Component::finish(other);
   }

   // ------------------------
   // Assignment operators
   // ------------------------

   Transportables &operator=(const Transportables &) = default;
   Transportables &operator=(Transportables &&) = default;

   // ------------------------
   // Custom functionality
   // ------------------------

   #include "test/v2.0/styles/Transportables/src/custom.hpp"
   #undef GNDSTK_COMPONENT
}; // class Transportables

} // namespace styles
} // namespace v2_0
} // namespace test

#endif
