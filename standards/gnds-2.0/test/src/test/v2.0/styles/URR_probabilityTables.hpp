
// THIS FILE WAS AUTOGENERATED!
// DO NOT MODIFY!

#ifndef TEST_V2_0_STYLES_URR_PROBABILITYTABLES
#define TEST_V2_0_STYLES_URR_PROBABILITYTABLES

#include "test/v2.0/documentation/Documentation.hpp"

namespace test {
namespace v2_0 {
namespace styles {

// -----------------------------------------------------------------------------
// styles::
// class URR_probabilityTables
// -----------------------------------------------------------------------------

class URR_probabilityTables : public Component<styles::URR_probabilityTables> {
   friend class Component;

   // ------------------------
   // For Component
   // ------------------------

   // Names: this namespace, this class, a field/node of this type
   static auto NAMESPACE() { return "styles"; }
   static auto CLASS() { return "URR_probabilityTables"; }
   static auto FIELD() { return "URR_probabilityTables"; }

   // Core Interface multi-query to extract metadata and child nodes
   static auto KEYS()
   {
      return
         // metadata
         std::string{}
            / Meta<>("date") |
         XMLName{}
            / Meta<>("derivedFrom") |
         XMLName{}
            / Meta<>("label") |
         // children
         std::optional<documentation::Documentation>{}
            / --Child<>("documentation")
      ;
   }

public:
   using Component::construct;

   // metadata
   Field<std::string> date{this};
   Field<XMLName> derivedFrom{this};
   Field<XMLName> label{this};

   // children
   Field<std::optional<documentation::Documentation>> documentation{this};

   // ------------------------
   // Constructors
   // ------------------------

   #define GNDSTK_COMPONENT(blockdata) Component(blockdata, \
      this->date, \
      this->derivedFrom, \
      this->label, \
      this->documentation)

   // default, and from fields
   explicit URR_probabilityTables(
      const wrapper<std::string> &date = {},
      const wrapper<XMLName> &derivedFrom = {},
      const wrapper<XMLName> &label = {},
      const wrapper<std::optional<documentation::Documentation>> &documentation = {}
   ) :
      GNDSTK_COMPONENT(BlockData{}),
      date(this,date),
      derivedFrom(this,derivedFrom),
      label(this,label),
      documentation(this,documentation)
   {
      Component::finish();
   }

   // from node
   explicit URR_probabilityTables(const Node &node) :
      GNDSTK_COMPONENT(BlockData{})
   {
      Component::finish(node);
   }

   // copy
   URR_probabilityTables(const URR_probabilityTables &other) :
      GNDSTK_COMPONENT(other.baseBlockData())
   {
      *this = other;
      Component::finish(other);
   }

   // move
   URR_probabilityTables(URR_probabilityTables &&other) :
      GNDSTK_COMPONENT(other.baseBlockData())
   {
      *this = std::move(other);
      Component::finish(other);
   }

   // ------------------------
   // Assignment operators
   // ------------------------

   URR_probabilityTables &operator=(const URR_probabilityTables &) = default;
   URR_probabilityTables &operator=(URR_probabilityTables &&) = default;

   // ------------------------
   // Custom functionality
   // ------------------------

   #include "test/v2.0/styles/URR_probabilityTables/src/custom.hpp"
   #undef GNDSTK_COMPONENT
}; // class URR_probabilityTables

} // namespace styles
} // namespace v2_0
} // namespace test

#endif
