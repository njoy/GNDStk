
// THIS FILE WAS AUTOGENERATED!
// DO NOT MODIFY!

#ifndef TEST_V2_0_TSL_BRAGGEDGE
#define TEST_V2_0_TSL_BRAGGEDGE

#include "test/v2.0/tsl/BraggEnergy.hpp"
#include "test/v2.0/tsl/StructureFactor.hpp"

namespace test {
namespace v2_0 {
namespace tsl {

// -----------------------------------------------------------------------------
// tsl::
// class BraggEdge
// -----------------------------------------------------------------------------

class BraggEdge :
   public Component<tsl::BraggEdge>
{
   friend class Component;

   // ------------------------
   // For Component
   // ------------------------

   // Names: this namespace, this class, and a field/node of this type
   static auto NAMESPACE() { return "tsl"; }
   static auto CLASS() { return "BraggEdge"; }
   static auto FIELD() { return "BraggEdge"; }

   // Core Interface multi-query to transfer information to/from Nodes
   static auto KEYS()
   {
      return
         // comment
         ++Child<std::string>(special::comment) / CommentConverter{} |

         // metadata
         XMLName{}
            / Meta<>("label") |

         // children
         --Child<tsl::BraggEnergy>("BraggEnergy") |
         --Child<tsl::StructureFactor>("structureFactor")
      ;
   }

public:
   using Component::construct;

   // comment
   Field<std::vector<std::string>> comment{this};

   // metadata
   Field<XMLName> label{this};

   // children
   Field<tsl::BraggEnergy> BraggEnergy{this};
   Field<tsl::StructureFactor> structureFactor{this};

   // ------------------------
   // Constructors
   // ------------------------

   #define GNDSTK_COMPONENT(blockdata) Component(blockdata, \
      this->comment, \
      this->label, \
      this->BraggEnergy, \
      this->structureFactor)

   // default
   BraggEdge() :
      GNDSTK_COMPONENT(BlockData{})
   {
      Component::finish();
   }

   // from fields, comment excluded
   explicit BraggEdge(
      const wrapper<XMLName> &label,
      const wrapper<tsl::BraggEnergy> &BraggEnergy = {},
      const wrapper<tsl::StructureFactor> &structureFactor = {}
   ) :
      GNDSTK_COMPONENT(BlockData{}),
      label(this,label),
      BraggEnergy(this,BraggEnergy),
      structureFactor(this,structureFactor)
   {
      Component::finish();
   }

   // from node
   explicit BraggEdge(const Node &node) :
      GNDSTK_COMPONENT(BlockData{})
   {
      Component::finish(node);
   }

   // copy
   BraggEdge(const BraggEdge &other) :
      GNDSTK_COMPONENT(other.baseBlockData()),
      comment(this,other.comment),
      label(this,other.label),
      BraggEnergy(this,other.BraggEnergy),
      structureFactor(this,other.structureFactor)
   {
      Component::finish(other);
   }

   // move
   BraggEdge(BraggEdge &&other) :
      GNDSTK_COMPONENT(other.baseBlockData()),
      comment(this,std::move(other.comment)),
      label(this,std::move(other.label)),
      BraggEnergy(this,std::move(other.BraggEnergy)),
      structureFactor(this,std::move(other.structureFactor))
   {
      Component::finish(other);
   }

   // ------------------------
   // Assignment operators
   // ------------------------

   BraggEdge &operator=(const BraggEdge &) = default;
   BraggEdge &operator=(BraggEdge &&) = default;

   // ------------------------
   // Custom functionality
   // ------------------------

   #include "test/v2.0/tsl/BraggEdge/src/custom.hpp"
   #undef GNDSTK_COMPONENT
}; // class BraggEdge

} // namespace tsl
} // namespace v2_0
} // namespace test

#endif
