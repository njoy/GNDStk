
// THIS FILE WAS AUTOGENERATED!
// DO NOT MODIFY!

#ifndef TEST_V2_0_CONTAINERS_COLUMN
#define TEST_V2_0_CONTAINERS_COLUMN

#include "test/v2.0/key.hpp"

namespace test {
namespace v2_0 {
namespace containers {

// -----------------------------------------------------------------------------
// containers::
// class Column
// -----------------------------------------------------------------------------

class Column : public Component<containers::Column> {
   friend class Component;

   // ------------------------
   // For Component
   // ------------------------

   // Names: this namespace, this class, a field/node of this type
   static auto NAMESPACE() { return "containers"; }
   static auto CLASS() { return "Column"; }
   static auto FIELD() { return "column"; }

   // Core Interface multi-query to extract metadata and child nodes
   static auto KEYS()
   {
      return
         // metadata
         Integer32{}
            / Meta<>("index") |
         XMLName{}
            / Meta<>("name") |
         std::optional<XMLName>{}
            / Meta<>("unit") |
         std::optional<XMLName>{}
            / Meta<>("types")
      ;
   }

public:
   using Component::construct;

   // metadata
   Field<Integer32> index{this};
   Field<XMLName> name{this};
   Field<std::optional<XMLName>> unit{this};
   Field<std::optional<XMLName>> types{this};

   // ------------------------
   // Constructors
   // ------------------------

   #define GNDSTK_COMPONENT(blockdata) Component(blockdata, \
      this->index, \
      this->name, \
      this->unit, \
      this->types)

   // default, and from fields
   explicit Column(
      const wrapper<Integer32> &index = {},
      const wrapper<XMLName> &name = {},
      const wrapper<std::optional<XMLName>> &unit = {},
      const wrapper<std::optional<XMLName>> &types = {}
   ) :
      GNDSTK_COMPONENT(BlockData{}),
      index(this,index),
      name(this,name),
      unit(this,unit),
      types(this,types)
   {
      Component::finish();
   }

   // from node
   explicit Column(const Node &node) :
      GNDSTK_COMPONENT(BlockData{})
   {
      Component::finish(node);
   }

   // copy
   Column(const Column &other) :
      GNDSTK_COMPONENT(other.baseBlockData())
   {
      *this = other;
      Component::finish(other);
   }

   // move
   Column(Column &&other) :
      GNDSTK_COMPONENT(other.baseBlockData())
   {
      *this = std::move(other);
      Component::finish(other);
   }

   // ------------------------
   // Assignment operators
   // ------------------------

   Column &operator=(const Column &) = default;
   Column &operator=(Column &&) = default;

   // ------------------------
   // Custom functionality
   // ------------------------

   #include "test/v2.0/containers/Column/src/custom.hpp"
   #undef GNDSTK_COMPONENT
}; // class Column

} // namespace containers
} // namespace v2_0
} // namespace test

#endif
