
// THIS FILE WAS AUTOGENERATED!
// DO NOT MODIFY!

#ifndef TEST_V2_0_COVARIANCE_SUM
#define TEST_V2_0_COVARIANCE_SUM

#include "test/v2.0/covariance/Summand.hpp"

namespace test {
namespace v2_0 {
namespace covariance {

// -----------------------------------------------------------------------------
// covariance::
// class Sum
// -----------------------------------------------------------------------------

class Sum : public Component<covariance::Sum> {
   friend class Component;

   // ------------------------
   // For Component
   // ------------------------

   // Names: this namespace, this class, a field/node of this type
   static auto NAMESPACE() { return "covariance"; }
   static auto CLASS() { return "Sum"; }
   static auto FIELD() { return "sum"; }

   // Core Interface multi-query to extract metadata and child nodes
   static auto KEYS()
   {
      return
         // metadata
         Float64{}
            / Meta<>("domainMin") |
         Float64{}
            / Meta<>("domainMax") |
         XMLName{}
            / Meta<>("domainUnit") |
         std::optional<XMLName>{}
            / Meta<>("label") |
         // children
         ++Child<std::optional<covariance::Summand>>("summand")
      ;
   }

public:
   using Component::construct;

   // metadata
   Field<Float64> domainMin{this};
   Field<Float64> domainMax{this};
   Field<XMLName> domainUnit{this};
   Field<std::optional<XMLName>> label{this};

   // children
   Field<std::optional<std::vector<covariance::Summand>>> summand{this};

   // ------------------------
   // Constructors
   // ------------------------

   #define GNDSTK_COMPONENT(blockdata) Component(blockdata, \
      this->domainMin, \
      this->domainMax, \
      this->domainUnit, \
      this->label, \
      this->summand)

   // default
   Sum() :
      GNDSTK_COMPONENT(BlockData{})
   {
      Component::finish();
   }

   // from fields
   explicit Sum(
      const wrapper<Float64> &domainMin,
      const wrapper<Float64> &domainMax = {},
      const wrapper<XMLName> &domainUnit = {},
      const wrapper<std::optional<XMLName>> &label = {},
      const wrapper<std::optional<std::vector<covariance::Summand>>> &summand = {}
   ) :
      GNDSTK_COMPONENT(BlockData{}),
      domainMin(this,domainMin),
      domainMax(this,domainMax),
      domainUnit(this,domainUnit),
      label(this,label),
      summand(this,summand)
   {
      Component::finish();
   }

   // from node
   explicit Sum(const Node &node) :
      GNDSTK_COMPONENT(BlockData{})
   {
      Component::finish(node);
   }

   // copy
   Sum(const Sum &other) :
      GNDSTK_COMPONENT(other.baseBlockData()),
      domainMin(this,other.domainMin),
      domainMax(this,other.domainMax),
      domainUnit(this,other.domainUnit),
      label(this,other.label),
      summand(this,other.summand)
   {
      Component::finish(other);
   }

   // move
   Sum(Sum &&other) :
      GNDSTK_COMPONENT(other.baseBlockData()),
      domainMin(this,std::move(other.domainMin)),
      domainMax(this,std::move(other.domainMax)),
      domainUnit(this,std::move(other.domainUnit)),
      label(this,std::move(other.label)),
      summand(this,std::move(other.summand))
   {
      Component::finish(other);
   }

   // ------------------------
   // Assignment operators
   // ------------------------

   Sum &operator=(const Sum &) = default;
   Sum &operator=(Sum &&) = default;

   // ------------------------
   // Custom functionality
   // ------------------------

   #include "test/v2.0/covariance/Sum/src/custom.hpp"
   #undef GNDSTK_COMPONENT
}; // class Sum

} // namespace covariance
} // namespace v2_0
} // namespace test

#endif
