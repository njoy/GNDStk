
// THIS FILE WAS AUTOGENERATED!
// DO NOT MODIFY!

#ifndef TEST_V2_0_COVARIANCE_COLUMNDATA
#define TEST_V2_0_COVARIANCE_COLUMNDATA

#include "test/v2.0/covariance/Slices.hpp"

namespace test {
namespace v2_0 {
namespace covariance {

// -----------------------------------------------------------------------------
// covariance::
// class ColumnData
// -----------------------------------------------------------------------------

class ColumnData :
   public Component<covariance::ColumnData>
{
   friend class Component;

   // ------------------------
   // For Component
   // ------------------------

   // Names: this namespace, this class, and a field/node of this type
   static auto NAMESPACE() { return "covariance"; }
   static auto CLASS() { return "ColumnData"; }
   static auto FIELD() { return "columnData"; }

   // Core Interface multi-query to transfer information to/from Nodes
   static auto KEYS()
   {
      return
         // comment
         ++Child<std::string>(special::comment) / CommentConverter{} |

         // metadata
         std::optional<XMLName>{}
            / Meta<>("ENDF_MFMT") |
         std::optional<XMLName>{}
            / Meta<>("href") |
         std::optional<Integer32>{}
            / Meta<>("dimension") |

         // children
         --Child<std::optional<covariance::Slices>>("slices")
      ;
   }

public:
   using Component::construct;

   // comment
   Field<std::vector<std::string>> comment{this};

   // metadata
   Field<std::optional<XMLName>> ENDF_MFMT{this};
   Field<std::optional<XMLName>> href{this};
   Field<std::optional<Integer32>> dimension{this};

   // children
   Field<std::optional<covariance::Slices>> slices{this};

   // ------------------------
   // Constructors
   // ------------------------

   #define GNDSTK_COMPONENT(blockdata) Component(blockdata, \
      this->comment, \
      this->ENDF_MFMT, \
      this->href, \
      this->dimension, \
      this->slices)

   // default
   ColumnData() :
      GNDSTK_COMPONENT(BlockData{})
   {
      Component::finish();
   }

   // from fields, comment excluded
   explicit ColumnData(
      const wrapper<std::optional<XMLName>> &ENDF_MFMT,
      const wrapper<std::optional<XMLName>> &href = {},
      const wrapper<std::optional<Integer32>> &dimension = {},
      const wrapper<std::optional<covariance::Slices>> &slices = {}
   ) :
      GNDSTK_COMPONENT(BlockData{}),
      ENDF_MFMT(this,ENDF_MFMT),
      href(this,href),
      dimension(this,dimension),
      slices(this,slices)
   {
      Component::finish();
   }

   // from node
   explicit ColumnData(const Node &node) :
      GNDSTK_COMPONENT(BlockData{})
   {
      Component::finish(node);
   }

   // copy
   ColumnData(const ColumnData &other) :
      GNDSTK_COMPONENT(other.baseBlockData()),
      comment(this,other.comment),
      ENDF_MFMT(this,other.ENDF_MFMT),
      href(this,other.href),
      dimension(this,other.dimension),
      slices(this,other.slices)
   {
      Component::finish(other);
   }

   // move
   ColumnData(ColumnData &&other) :
      GNDSTK_COMPONENT(other.baseBlockData()),
      comment(this,std::move(other.comment)),
      ENDF_MFMT(this,std::move(other.ENDF_MFMT)),
      href(this,std::move(other.href)),
      dimension(this,std::move(other.dimension)),
      slices(this,std::move(other.slices))
   {
      Component::finish(other);
   }

   // ------------------------
   // Assignment operators
   // ------------------------

   ColumnData &operator=(const ColumnData &) = default;
   ColumnData &operator=(ColumnData &&) = default;

   // ------------------------
   // Custom functionality
   // ------------------------

   #include "test/v2.0/covariance/ColumnData/src/custom.hpp"
   #undef GNDSTK_COMPONENT
}; // class ColumnData

} // namespace covariance
} // namespace v2_0
} // namespace test

#endif
