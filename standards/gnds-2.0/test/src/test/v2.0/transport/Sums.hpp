
// THIS FILE WAS AUTOGENERATED!
// DO NOT MODIFY!

#ifndef TEST_V2_0_TRANSPORT_SUMS
#define TEST_V2_0_TRANSPORT_SUMS

#include "test/v2.0/transport/CrossSectionSums.hpp"
#include "test/v2.0/transport/MultiplicitySums.hpp"

namespace test {
namespace v2_0 {
namespace transport {

// -----------------------------------------------------------------------------
// transport::
// class Sums
// -----------------------------------------------------------------------------

class Sums : public Component<transport::Sums> {
   friend class Component;

   // ------------------------
   // For Component
   // ------------------------

   // Names: this namespace, this class, a field/node of this type
   static auto NAMESPACE() { return "transport"; }
   static auto CLASS() { return "Sums"; }
   static auto FIELD() { return "sums"; }

   // Core Interface multi-query to extract metadata and child nodes
   static auto KEYS()
   {
      return
         // children
         --Child<transport::CrossSectionSums>("crossSectionSums") |
         --Child<std::optional<transport::MultiplicitySums>>("multiplicitySums")
      ;
   }

public:
   using Component::construct;

   // children
   Field<transport::CrossSectionSums> crossSectionSums{this};
   Field<std::optional<transport::MultiplicitySums>> multiplicitySums{this};

   // ------------------------
   // Constructors
   // ------------------------

   #define GNDSTK_COMPONENT(blockdata) Component(blockdata, \
      this->crossSectionSums, \
      this->multiplicitySums)

   // default
   Sums() :
      GNDSTK_COMPONENT(BlockData{})
   {
      Component::finish();
   }

   // from fields
   explicit Sums(
      const wrapper<transport::CrossSectionSums> &crossSectionSums,
      const wrapper<std::optional<transport::MultiplicitySums>> &multiplicitySums = {}
   ) :
      GNDSTK_COMPONENT(BlockData{}),
      crossSectionSums(this,crossSectionSums),
      multiplicitySums(this,multiplicitySums)
   {
      Component::finish();
   }

   // from node
   explicit Sums(const Node &node) :
      GNDSTK_COMPONENT(BlockData{})
   {
      Component::finish(node);
   }

   // copy
   Sums(const Sums &other) :
      GNDSTK_COMPONENT(other.baseBlockData()),
      crossSectionSums(this,other.crossSectionSums),
      multiplicitySums(this,other.multiplicitySums)
   {
      Component::finish(other);
   }

   // move
   Sums(Sums &&other) :
      GNDSTK_COMPONENT(other.baseBlockData()),
      crossSectionSums(this,std::move(other.crossSectionSums)),
      multiplicitySums(this,std::move(other.multiplicitySums))
   {
      Component::finish(other);
   }

   // ------------------------
   // Assignment operators
   // ------------------------

   Sums &operator=(const Sums &) = default;
   Sums &operator=(Sums &&) = default;

   // ------------------------
   // Custom functionality
   // ------------------------

   #include "test/v2.0/transport/Sums/src/custom.hpp"
   #undef GNDSTK_COMPONENT
}; // class Sums

} // namespace transport
} // namespace v2_0
} // namespace test

#endif
