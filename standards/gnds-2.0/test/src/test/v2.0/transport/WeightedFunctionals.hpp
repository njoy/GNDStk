
// THIS FILE WAS AUTOGENERATED!
// DO NOT MODIFY!

#ifndef TEST_V2_0_TRANSPORT_WEIGHTEDFUNCTIONALS
#define TEST_V2_0_TRANSPORT_WEIGHTEDFUNCTIONALS

#include "test/v2.0/transport/Weighted.hpp"

namespace test {
namespace v2_0 {
namespace transport {

// -----------------------------------------------------------------------------
// transport::
// class WeightedFunctionals
// -----------------------------------------------------------------------------

class WeightedFunctionals : public Component<transport::WeightedFunctionals> {
   friend class Component;

   // ------------------------
   // For Component
   // ------------------------

   // Names: this namespace, this class, a field/node of this type
   static auto NAMESPACE() { return "transport"; }
   static auto CLASS() { return "WeightedFunctionals"; }
   static auto FIELD() { return "weightedFunctionals"; }

   // Core Interface multi-query to extract metadata and child nodes
   static auto KEYS()
   {
      return
         // children
         --Child<transport::Weighted>("weighted")
      ;
   }

public:
   using Component::construct;

   // children
   Field<transport::Weighted> weighted{this};

   // ------------------------
   // Constructors
   // ------------------------

   #define GNDSTK_COMPONENT(blockdata) Component(blockdata, \
      this->weighted)

   // default
   WeightedFunctionals() :
      GNDSTK_COMPONENT(BlockData{})
   {
      Component::finish();
   }

   // from fields
   explicit WeightedFunctionals(
      const wrapper<transport::Weighted> &weighted
   ) :
      GNDSTK_COMPONENT(BlockData{}),
      weighted(this,weighted)
   {
      Component::finish();
   }

   // from node
   explicit WeightedFunctionals(const Node &node) :
      GNDSTK_COMPONENT(BlockData{})
   {
      Component::finish(node);
   }

   // copy
   WeightedFunctionals(const WeightedFunctionals &other) :
      GNDSTK_COMPONENT(other.baseBlockData()),
      weighted(this,other.weighted)
   {
      Component::finish(other);
   }

   // move
   WeightedFunctionals(WeightedFunctionals &&other) :
      GNDSTK_COMPONENT(other.baseBlockData()),
      weighted(this,std::move(other.weighted))
   {
      Component::finish(other);
   }

   // ------------------------
   // Assignment operators
   // ------------------------

   WeightedFunctionals &operator=(const WeightedFunctionals &) = default;
   WeightedFunctionals &operator=(WeightedFunctionals &&) = default;

   // ------------------------
   // Custom functionality
   // ------------------------

   #include "test/v2.0/transport/WeightedFunctionals/src/custom.hpp"
   #undef GNDSTK_COMPONENT
}; // class WeightedFunctionals

} // namespace transport
} // namespace v2_0
} // namespace test

#endif
