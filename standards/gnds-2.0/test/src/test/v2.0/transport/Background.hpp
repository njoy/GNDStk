
// THIS FILE WAS AUTOGENERATED!
// DO NOT MODIFY!

#ifndef TEST_V2_0_TRANSPORT_BACKGROUND
#define TEST_V2_0_TRANSPORT_BACKGROUND

#include "test/v2.0/transport/ResolvedRegion.hpp"
#include "test/v2.0/transport/UnresolvedRegion.hpp"
#include "test/v2.0/transport/FastRegion.hpp"

namespace test {
namespace v2_0 {
namespace transport {

// -----------------------------------------------------------------------------
// transport::
// class Background
// -----------------------------------------------------------------------------

class Background : public Component<transport::Background> {
   friend class Component;

   // ------------------------
   // For Component
   // ------------------------

   // Names: this namespace, this class, a field/node of this type
   static auto NAMESPACE() { return "transport"; }
   static auto CLASS() { return "Background"; }
   static auto FIELD() { return "background"; }

   // Core Interface multi-query to extract metadata and child nodes
   static auto KEYS()
   {
      return
         // children
         --Child<std::optional<transport::ResolvedRegion>>("resolvedRegion") |
         --Child<std::optional<transport::UnresolvedRegion>>("unresolvedRegion") |
         --Child<std::optional<transport::FastRegion>>("fastRegion")
      ;
   }

public:
   using Component::construct;

   // children
   Field<std::optional<transport::ResolvedRegion>> resolvedRegion{this};
   Field<std::optional<transport::UnresolvedRegion>> unresolvedRegion{this};
   Field<std::optional<transport::FastRegion>> fastRegion{this};

   // ------------------------
   // Constructors
   // ------------------------

   #define GNDSTK_COMPONENT(blockdata) Component(blockdata, \
      this->resolvedRegion, \
      this->unresolvedRegion, \
      this->fastRegion)

   // default
   Background() :
      GNDSTK_COMPONENT(BlockData{})
   {
      Component::finish();
   }

   // from fields
   explicit Background(
      const wrapper<std::optional<transport::ResolvedRegion>> &resolvedRegion,
      const wrapper<std::optional<transport::UnresolvedRegion>> &unresolvedRegion = {},
      const wrapper<std::optional<transport::FastRegion>> &fastRegion = {}
   ) :
      GNDSTK_COMPONENT(BlockData{}),
      resolvedRegion(this,resolvedRegion),
      unresolvedRegion(this,unresolvedRegion),
      fastRegion(this,fastRegion)
   {
      Component::finish();
   }

   // from node
   explicit Background(const Node &node) :
      GNDSTK_COMPONENT(BlockData{})
   {
      Component::finish(node);
   }

   // copy
   Background(const Background &other) :
      GNDSTK_COMPONENT(other.baseBlockData()),
      resolvedRegion(this,other.resolvedRegion),
      unresolvedRegion(this,other.unresolvedRegion),
      fastRegion(this,other.fastRegion)
   {
      Component::finish(other);
   }

   // move
   Background(Background &&other) :
      GNDSTK_COMPONENT(other.baseBlockData()),
      resolvedRegion(this,std::move(other.resolvedRegion)),
      unresolvedRegion(this,std::move(other.unresolvedRegion)),
      fastRegion(this,std::move(other.fastRegion))
   {
      Component::finish(other);
   }

   // ------------------------
   // Assignment operators
   // ------------------------

   Background &operator=(const Background &) = default;
   Background &operator=(Background &&) = default;

   // ------------------------
   // Custom functionality
   // ------------------------

   #include "test/v2.0/transport/Background/src/custom.hpp"
   #undef GNDSTK_COMPONENT
}; // class Background

} // namespace transport
} // namespace v2_0
} // namespace test

#endif
