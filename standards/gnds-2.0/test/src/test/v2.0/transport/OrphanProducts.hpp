
// THIS FILE WAS AUTOGENERATED!
// DO NOT MODIFY!

#ifndef TEST_V2_0_TRANSPORT_ORPHANPRODUCTS
#define TEST_V2_0_TRANSPORT_ORPHANPRODUCTS

#include "test/v2.0/transport/OrphanProduct.hpp"

namespace test {
namespace v2_0 {
namespace transport {

// -----------------------------------------------------------------------------
// transport::
// class OrphanProducts
// -----------------------------------------------------------------------------

class OrphanProducts : public Component<transport::OrphanProducts> {
   friend class Component;

   // ------------------------
   // For Component
   // ------------------------

   // Names: this namespace, this class, a field/node of this type
   static auto NAMESPACE() { return "transport"; }
   static auto CLASS() { return "OrphanProducts"; }
   static auto FIELD() { return "orphanProducts"; }

   // Core Interface multi-query to extract metadata and child nodes
   static auto KEYS()
   {
      return
         // children
         ++Child<transport::OrphanProduct>("orphanProduct")
      ;
   }

public:
   using Component::construct;

   // children
   Field<std::vector<transport::OrphanProduct>> orphanProduct{this};

   // ------------------------
   // Constructors
   // ------------------------

   #define GNDSTK_COMPONENT(blockdata) Component(blockdata, \
      this->orphanProduct)

   // default
   OrphanProducts() :
      GNDSTK_COMPONENT(BlockData{})
   {
      Component::finish();
   }

   // from fields
   explicit OrphanProducts(
      const wrapper<std::vector<transport::OrphanProduct>> &orphanProduct
   ) :
      GNDSTK_COMPONENT(BlockData{}),
      orphanProduct(this,orphanProduct)
   {
      Component::finish();
   }

   // from node
   explicit OrphanProducts(const Node &node) :
      GNDSTK_COMPONENT(BlockData{})
   {
      Component::finish(node);
   }

   // copy
   OrphanProducts(const OrphanProducts &other) :
      GNDSTK_COMPONENT(other.baseBlockData()),
      orphanProduct(this,other.orphanProduct)
   {
      Component::finish(other);
   }

   // move
   OrphanProducts(OrphanProducts &&other) :
      GNDSTK_COMPONENT(other.baseBlockData()),
      orphanProduct(this,std::move(other.orphanProduct))
   {
      Component::finish(other);
   }

   // ------------------------
   // Assignment operators
   // ------------------------

   OrphanProducts &operator=(const OrphanProducts &) = default;
   OrphanProducts &operator=(OrphanProducts &&) = default;

   // ------------------------
   // Custom functionality
   // ------------------------

   #include "test/v2.0/transport/OrphanProducts/src/custom.hpp"
   #undef GNDSTK_COMPONENT
}; // class OrphanProducts

} // namespace transport
} // namespace v2_0
} // namespace test

#endif
