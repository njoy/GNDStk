
// THIS FILE WAS AUTOGENERATED!
// DO NOT MODIFY!

#ifndef TEST_V2_0_FISSIONFRAGMENTDATA_DELAYEDNEUTRONS
#define TEST_V2_0_FISSIONFRAGMENTDATA_DELAYEDNEUTRONS

#include "test/v2.0/fissionFragmentData/DelayedNeutron.hpp"

namespace test {
namespace v2_0 {
namespace fissionFragmentData {

// -----------------------------------------------------------------------------
// fissionFragmentData::
// class DelayedNeutrons
// -----------------------------------------------------------------------------

class DelayedNeutrons :
   public Component<fissionFragmentData::DelayedNeutrons>
{
   friend class Component;

   // ------------------------
   // For Component
   // ------------------------

   // Names: this namespace, this class, and a field/node of this type
   static auto NAMESPACE() { return "fissionFragmentData"; }
   static auto CLASS() { return "DelayedNeutrons"; }
   static auto FIELD() { return "delayedNeutrons"; }

   // Core Interface multi-query to transfer information to/from Nodes
   static auto KEYS()
   {
      return
         // comment
         ++Child<std::string>(special::comment) / CommentConverter{} |

         // children
         ++Child<fissionFragmentData::DelayedNeutron>("delayedNeutron")
      ;
   }

public:
   using Component::construct;

   // comment
   Field<std::vector<std::string>> comment{this};

   // children
   Field<std::vector<fissionFragmentData::DelayedNeutron>> delayedNeutron{this};

   // ------------------------
   // Constructors
   // ------------------------

   #define GNDSTK_COMPONENT(blockdata) Component(blockdata, \
      this->comment, \
      this->delayedNeutron)

   // default
   DelayedNeutrons() :
      GNDSTK_COMPONENT(BlockData{})
   {
      Component::finish();
   }

   // from fields, comment excluded
   explicit DelayedNeutrons(
      const wrapper<std::vector<fissionFragmentData::DelayedNeutron>> &delayedNeutron
   ) :
      GNDSTK_COMPONENT(BlockData{}),
      delayedNeutron(this,delayedNeutron)
   {
      Component::finish();
   }

   // from node
   explicit DelayedNeutrons(const Node &node) :
      GNDSTK_COMPONENT(BlockData{})
   {
      Component::finish(node);
   }

   // copy
   DelayedNeutrons(const DelayedNeutrons &other) :
      GNDSTK_COMPONENT(other.baseBlockData()),
      comment(this,other.comment),
      delayedNeutron(this,other.delayedNeutron)
   {
      Component::finish(other);
   }

   // move
   DelayedNeutrons(DelayedNeutrons &&other) :
      GNDSTK_COMPONENT(other.baseBlockData()),
      comment(this,std::move(other.comment)),
      delayedNeutron(this,std::move(other.delayedNeutron))
   {
      Component::finish(other);
   }

   // ------------------------
   // Assignment operators
   // ------------------------

   DelayedNeutrons &operator=(const DelayedNeutrons &) = default;
   DelayedNeutrons &operator=(DelayedNeutrons &&) = default;

   // ------------------------
   // Custom functionality
   // ------------------------

   #include "test/v2.0/fissionFragmentData/DelayedNeutrons/src/custom.hpp"
   #undef GNDSTK_COMPONENT
}; // class DelayedNeutrons

} // namespace fissionFragmentData
} // namespace v2_0
} // namespace test

#endif
