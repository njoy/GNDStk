
// THIS FILE WAS AUTOGENERATED!
// DO NOT MODIFY!

#ifndef TEST_V2_0_RESONANCES_UNRESOLVED
#define TEST_V2_0_RESONANCES_UNRESOLVED

#include "test/v2.0/resonances/TabulatedWidths.hpp"

namespace test {
namespace v2_0 {
namespace resonances {

// -----------------------------------------------------------------------------
// resonances::
// class Unresolved
// -----------------------------------------------------------------------------

class Unresolved : public Component<resonances::Unresolved> {
   friend class Component;

   using _t = std::variant<
      resonances::TabulatedWidths
   >;

   // ------------------------
   // For Component
   // ------------------------

   // Names: this namespace, this class, a field/node of this type
   static auto NAMESPACE() { return "resonances"; }
   static auto CLASS() { return "Unresolved"; }
   static auto FIELD() { return "unresolved"; }

   // Core Interface multi-query to extract metadata and child nodes
   static auto KEYS()
   {
      return
         // metadata
         Float64{}
            / Meta<>("domainMin") |
         Float64{}
            / Meta<>("domainMax") |
         XMLName{}
            / Meta<>("domainUnit") |
         // children
         _t{}
            / --(Child<>("tabulatedWidths"))
      ;
   }

public:
   using Component::construct;

   // metadata
   Field<Float64> domainMin{this};
   Field<Float64> domainMax{this};
   Field<XMLName> domainUnit{this};

   // children - variant
   Field<_t> _tabulatedWidths{this};
   FieldPart<decltype(_tabulatedWidths),resonances::TabulatedWidths> tabulatedWidths{_tabulatedWidths};

   // ------------------------
   // Constructors
   // ------------------------

   #define GNDSTK_COMPONENT(blockdata) Component(blockdata, \
      this->domainMin, \
      this->domainMax, \
      this->domainUnit, \
      this->_tabulatedWidths)

   // default, and from fields
   explicit Unresolved(
      const wrapper<Float64> &domainMin = {},
      const wrapper<Float64> &domainMax = {},
      const wrapper<XMLName> &domainUnit = {},
      const wrapper<_t> &_tabulatedWidths = {}
   ) :
      GNDSTK_COMPONENT(BlockData{}),
      domainMin(this,domainMin),
      domainMax(this,domainMax),
      domainUnit(this,domainUnit),
      _tabulatedWidths(this,_tabulatedWidths)
   {
      Component::finish();
   }

   // from node
   explicit Unresolved(const Node &node) :
      GNDSTK_COMPONENT(BlockData{})
   {
      Component::finish(node);
   }

   // copy
   Unresolved(const Unresolved &other) :
      GNDSTK_COMPONENT(other.baseBlockData())
   {
      *this = other;
      Component::finish(other);
   }

   // move
   Unresolved(Unresolved &&other) :
      GNDSTK_COMPONENT(other.baseBlockData())
   {
      *this = std::move(other);
      Component::finish(other);
   }

   // ------------------------
   // Assignment operators
   // ------------------------

   Unresolved &operator=(const Unresolved &) = default;
   Unresolved &operator=(Unresolved &&) = default;

   // ------------------------
   // Custom functionality
   // ------------------------

   #include "test/v2.0/resonances/Unresolved/src/custom.hpp"
   #undef GNDSTK_COMPONENT
}; // class Unresolved

} // namespace resonances
} // namespace v2_0
} // namespace test

#endif
