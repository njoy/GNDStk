
// THIS FILE WAS AUTOGENERATED!
// DO NOT MODIFY!

// system includes
#include <pybind11/pybind11.h>
#include <pybind11/stl.h>

// local includes
#include "test/v2.0/map/Map.hpp"
#include "definitions.hpp"

// namespace aliases
namespace python = pybind11;

namespace python_v2_0 {
namespace python_map {

// Map wrapper
void wrapMap(python::module &module)
{
   using namespace test;
   using namespace test::v2_0;

   // type aliases
   using Component = map::Map;

   // create the component
   python::class_<Component> component(
      module,
      "Map",
      Component::documentation().data()
   );

   // wrap the component
   component
      .def(
         python::init<
            const XMLName &,
            const XMLName &,
            const checksum &,
            const algorithm &,
            const std::optional<std::vector<map::Import>> &,
            const std::optional<std::vector<map::Protare>> &,
            const std::optional<std::vector<map::TNSL>> &
         >(),
         python::arg("library"),
         python::arg("format"),
         python::arg("checksum"),
         python::arg("algorithm"),
         python::arg("import") = std::nullopt,
         python::arg("protare") = std::nullopt,
         python::arg("tnsl") = std::nullopt,
         Component::documentation("constructor").data()
      )
      .def_property_readonly(
         "library",
         [](const Component &self) { return self.library(); },
         Component::documentation("library").data()
      )
      .def_property_readonly(
         "format",
         [](const Component &self) { return self.format(); },
         Component::documentation("format").data()
      )
      .def_property_readonly(
         "checksum",
         [](const Component &self) { return self.checksum(); },
         Component::documentation("checksum").data()
      )
      .def_property_readonly(
         "algorithm",
         [](const Component &self) { return self.algorithm(); },
         Component::documentation("algorithm").data()
      )
      .def_property_readonly(
         "import",
         [](const Component &self) { return self.import(); },
         Component::documentation("import").data()
      )
      .def_property_readonly(
         "protare",
         [](const Component &self) { return self.protare(); },
         Component::documentation("protare").data()
      )
      .def_property_readonly(
         "tnsl",
         [](const Component &self) { return self.TNSL(); },
         Component::documentation("tnsl").data()
      )
   ;

   // add standard component definitions
   addStandardComponentDefinitions< Component >( component );
}

} // namespace python_map
} // namespace python_v2_0
