
// THIS FILE WAS AUTOGENERATED!
// DO NOT MODIFY!

#include <pybind11/pybind11.h>
#include <pybind11/stl.h>

namespace py = pybind11;

// v2.0 interface
namespace python_v2_0 {

// transport declarations
namespace python_transport {
   void wrapBranching1d(py::module &);
   void wrapReference(py::module &);
   void wrapMultiplicity(py::module &);
   void wrapIsotropic2d(py::module &);
   void wrapRecoil(py::module &);
   void wrapAngularTwoBody(py::module &);
   void wrapForward(py::module &);
   void wrapAngular_uncorrelated(py::module &);
   void wrapU(py::module &);
   void wrapG(py::module &);
   void wrapTheta(py::module &);
   void wrapGeneralEvaporation(py::module &);
   void wrapDiscreteGamma(py::module &);
   void wrapPrimaryGamma(py::module &);
   void wrapNBodyPhaseSpace(py::module &);
   void wrapEvaporation(py::module &);
   void wrapWeighted(py::module &);
   void wrapWeightedFunctionals(py::module &);
   void wrapEnergy_uncorrelated(py::module &);
   void wrapUncorrelated(py::module &);
   void wrapAngularEnergy(py::module &);
   void wrapEnergyAngular(py::module &);
   void wrapF(py::module &);
   void wrapR(py::module &);
   void wrapA(py::module &);
   void wrapKalbachMann(py::module &);
   void wrapBranching3d(py::module &);
   void wrapUnspecified(py::module &);
   void wrapMultiGroup3d(py::module &);
   void wrapDistribution(py::module &);
   void wrapResonancesLink(py::module &);
   void wrapResolvedRegion(py::module &);
   void wrapUnresolvedRegion(py::module &);
   void wrapFastRegion(py::module &);
   void wrapBackground(py::module &);
   void wrapResonancesWithBackground(py::module &);
   void wrapURR_probabilityTables1d(py::module &);
   void wrapCrossSection(py::module &);
   void wrapOutputChannel(py::module &);
   void wrapDoubleDifferentialCrossSection(py::module &);
   void wrapReaction(py::module &);
   void wrapReactions(py::module &);
   void wrapOrphanProduct(py::module &);
   void wrapOrphanProducts(py::module &);
   void wrapAdd(py::module &);
   void wrapSummands(py::module &);
   void wrapCrossSectionSum(py::module &);
   void wrapCrossSectionSums(py::module &);
   void wrapMultiplicitySum(py::module &);
   void wrapMultiplicitySums(py::module &);
   void wrapSums(py::module &);
   void wrapProduction(py::module &);
   void wrapProductions(py::module &);
   void wrapIncompleteReactions(py::module &);
   void wrapReactionSuite(py::module &);
   void wrapCoherentPhoton(py::module &);
   void wrapIncoherentPhoton(py::module &);
   void wrapPhotonEmissionProbabilities(py::module &);
} // namespace python_transport

// wrapper for transport
void wrapTransport(py::module &module)
{
   // create the transport submodule
   py::module submodule = module.def_submodule(
      "transport",
      "test v2.0 transport"
   );

   // wrap transport components
   python_transport::wrapBranching1d(submodule);
   python_transport::wrapReference(submodule);
   python_transport::wrapMultiplicity(submodule);
   python_transport::wrapIsotropic2d(submodule);
   python_transport::wrapRecoil(submodule);
   python_transport::wrapAngularTwoBody(submodule);
   python_transport::wrapForward(submodule);
   python_transport::wrapAngular_uncorrelated(submodule);
   python_transport::wrapU(submodule);
   python_transport::wrapG(submodule);
   python_transport::wrapTheta(submodule);
   python_transport::wrapGeneralEvaporation(submodule);
   python_transport::wrapDiscreteGamma(submodule);
   python_transport::wrapPrimaryGamma(submodule);
   python_transport::wrapNBodyPhaseSpace(submodule);
   python_transport::wrapEvaporation(submodule);
   python_transport::wrapWeighted(submodule);
   python_transport::wrapWeightedFunctionals(submodule);
   python_transport::wrapEnergy_uncorrelated(submodule);
   python_transport::wrapUncorrelated(submodule);
   python_transport::wrapAngularEnergy(submodule);
   python_transport::wrapEnergyAngular(submodule);
   python_transport::wrapF(submodule);
   python_transport::wrapR(submodule);
   python_transport::wrapA(submodule);
   python_transport::wrapKalbachMann(submodule);
   python_transport::wrapBranching3d(submodule);
   python_transport::wrapUnspecified(submodule);
   python_transport::wrapMultiGroup3d(submodule);
   python_transport::wrapDistribution(submodule);
   python_transport::wrapResonancesLink(submodule);
   python_transport::wrapResolvedRegion(submodule);
   python_transport::wrapUnresolvedRegion(submodule);
   python_transport::wrapFastRegion(submodule);
   python_transport::wrapBackground(submodule);
   python_transport::wrapResonancesWithBackground(submodule);
   python_transport::wrapURR_probabilityTables1d(submodule);
   python_transport::wrapCrossSection(submodule);
   python_transport::wrapOutputChannel(submodule);
   python_transport::wrapDoubleDifferentialCrossSection(submodule);
   python_transport::wrapReaction(submodule);
   python_transport::wrapReactions(submodule);
   python_transport::wrapOrphanProduct(submodule);
   python_transport::wrapOrphanProducts(submodule);
   python_transport::wrapAdd(submodule);
   python_transport::wrapSummands(submodule);
   python_transport::wrapCrossSectionSum(submodule);
   python_transport::wrapCrossSectionSums(submodule);
   python_transport::wrapMultiplicitySum(submodule);
   python_transport::wrapMultiplicitySums(submodule);
   python_transport::wrapSums(submodule);
   python_transport::wrapProduction(submodule);
   python_transport::wrapProductions(submodule);
   python_transport::wrapIncompleteReactions(submodule);
   python_transport::wrapReactionSuite(submodule);
   python_transport::wrapCoherentPhoton(submodule);
   python_transport::wrapIncoherentPhoton(submodule);
   python_transport::wrapPhotonEmissionProbabilities(submodule);
};

} // namespace python_v2_0
