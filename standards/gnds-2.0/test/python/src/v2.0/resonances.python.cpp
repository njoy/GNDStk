
// THIS FILE WAS AUTOGENERATED!
// DO NOT MODIFY!

#include <pybind11/pybind11.h>
#include <pybind11/stl.h>

namespace python = pybind11;

// v2.0 interface
namespace python_v2_0 {

// resonances declarations
namespace python_resonances {
   void wrapScatteringRadius(python::module &);
   void wrapHardSphereRadius(python::module &);
   void wrapResonanceReaction(python::module &);
   void wrapResonanceReactions(python::module &);
   void wrapExternalRMatrix(python::module &);
   void wrapChannel(python::module &);
   void wrapChannels(python::module &);
   void wrapResonanceParameters(python::module &);
   void wrapSpinGroup(python::module &);
   void wrapSpinGroups(python::module &);
   void wrapRMatrix(python::module &);
   void wrapBreitWigner(python::module &);
   void wrapEnergyInterval(python::module &);
   void wrapEnergyIntervals(python::module &);
   void wrapResolved(python::module &);
   void wrapLevelSpacing(python::module &);
   void wrapWidth(python::module &);
   void wrapWidths(python::module &);
   void wrapJ(python::module &);
   void wrapJs(python::module &);
   void wrapL(python::module &);
   void wrapLs(python::module &);
   void wrapTabulatedWidths(python::module &);
   void wrapUnresolved(python::module &);
   void wrapResonances(python::module &);
} // namespace python_resonances

// resonances wrapper
void wrapResonances(python::module &module)
{
   // create the resonances submodule
   python::module submodule = module.def_submodule(
      "resonances",
      "test v2.0 resonances"
   );

   // wrap resonances components
   python_resonances::wrapScatteringRadius(submodule);
   python_resonances::wrapHardSphereRadius(submodule);
   python_resonances::wrapResonanceReaction(submodule);
   python_resonances::wrapResonanceReactions(submodule);
   python_resonances::wrapExternalRMatrix(submodule);
   python_resonances::wrapChannel(submodule);
   python_resonances::wrapChannels(submodule);
   python_resonances::wrapResonanceParameters(submodule);
   python_resonances::wrapSpinGroup(submodule);
   python_resonances::wrapSpinGroups(submodule);
   python_resonances::wrapRMatrix(submodule);
   python_resonances::wrapBreitWigner(submodule);
   python_resonances::wrapEnergyInterval(submodule);
   python_resonances::wrapEnergyIntervals(submodule);
   python_resonances::wrapResolved(submodule);
   python_resonances::wrapLevelSpacing(submodule);
   python_resonances::wrapWidth(submodule);
   python_resonances::wrapWidths(submodule);
   python_resonances::wrapJ(submodule);
   python_resonances::wrapJs(submodule);
   python_resonances::wrapL(submodule);
   python_resonances::wrapLs(submodule);
   python_resonances::wrapTabulatedWidths(submodule);
   python_resonances::wrapUnresolved(submodule);
   python_resonances::wrapResonances(submodule);
};

} // namespace python_v2_0
