
// THIS FILE WAS AUTOGENERATED!
// DO NOT MODIFY!

#include <pybind11/pybind11.h>
#include <pybind11/stl.h>

namespace py = pybind11;

// v2.0 interface
namespace python_v2_0 {

// tsl declarations
namespace python_tsl {
   void wrapMass(py::module &);
   void wrapThermalNeutronScatteringLaw(py::module &);
   void wrapThermalNeutronScatteringLaw1d(py::module &);
   void wrapS_table(py::module &);
   void wrapBraggEnergy(py::module &);
   void wrapStructureFactor(py::module &);
   void wrapBraggEdge(py::module &);
   void wrapBraggEdges(py::module &);
   void wrapThermalNeutronScatteringLaw_coherentElastic(py::module &);
   void wrapBoundAtomCrossSection(py::module &);
   void wrapDebyeWallerIntegral(py::module &);
   void wrapThermalNeutronScatteringLaw_incoherentElastic(py::module &);
   void wrapE_critical(py::module &);
   void wrapE_max(py::module &);
   void wrapCoherentAtomCrossSection(py::module &);
   void wrapDistinctScatteringKernel(py::module &);
   void wrapPhononSpectrum(py::module &);
   void wrapGaussianApproximation(py::module &);
   void wrapSCTApproximation(py::module &);
   void wrapFreeGasApproximation(py::module &);
   void wrapSelfScatteringKernel(py::module &);
   void wrapT_effective(py::module &);
   void wrapScatteringAtom(py::module &);
   void wrapScatteringAtoms(py::module &);
   void wrapThermalNeutronScatteringLaw_incoherentInelastic(py::module &);
} // namespace python_tsl

// wrapper for tsl
void wrapTsl(py::module &module)
{
   // create the tsl submodule
   py::module submodule = module.def_submodule(
      "tsl",
      "test v2.0 tsl"
   );

   // wrap tsl components
   python_tsl::wrapMass(submodule);
   python_tsl::wrapThermalNeutronScatteringLaw(submodule);
   python_tsl::wrapThermalNeutronScatteringLaw1d(submodule);
   python_tsl::wrapS_table(submodule);
   python_tsl::wrapBraggEnergy(submodule);
   python_tsl::wrapStructureFactor(submodule);
   python_tsl::wrapBraggEdge(submodule);
   python_tsl::wrapBraggEdges(submodule);
   python_tsl::wrapThermalNeutronScatteringLaw_coherentElastic(submodule);
   python_tsl::wrapBoundAtomCrossSection(submodule);
   python_tsl::wrapDebyeWallerIntegral(submodule);
   python_tsl::wrapThermalNeutronScatteringLaw_incoherentElastic(submodule);
   python_tsl::wrapE_critical(submodule);
   python_tsl::wrapE_max(submodule);
   python_tsl::wrapCoherentAtomCrossSection(submodule);
   python_tsl::wrapDistinctScatteringKernel(submodule);
   python_tsl::wrapPhononSpectrum(submodule);
   python_tsl::wrapGaussianApproximation(submodule);
   python_tsl::wrapSCTApproximation(submodule);
   python_tsl::wrapFreeGasApproximation(submodule);
   python_tsl::wrapSelfScatteringKernel(submodule);
   python_tsl::wrapT_effective(submodule);
   python_tsl::wrapScatteringAtom(submodule);
   python_tsl::wrapScatteringAtoms(submodule);
   python_tsl::wrapThermalNeutronScatteringLaw_incoherentInelastic(submodule);
};

} // namespace python_v2_0
