
// THIS FILE WAS AUTOGENERATED!
// DO NOT MODIFY!

// Interface for C
// This header file is designed to work with both C and C++
// Function definitions are in this file's .cpp source

// -----------------------------------------------------------------------------
// -----------------------------------------------------------------------------
// Instructions for Users
//
// Constructs you're MORE likely to care about are preceded with:
//    // +++ remark
// Constructs you're LESS likely to care about are preceded with:
//    // --- remark
// Anything not marked as above can be ignored by most users.
//
// FissionEnergyReleased is the basic handle type in this file. Example:
//    // Create a default FissionEnergyReleased object:
//    FissionEnergyReleased handle = FissionEnergyReleasedDefault();
// Functions involving FissionEnergyReleased are declared throughout this file.
// -----------------------------------------------------------------------------
// -----------------------------------------------------------------------------


// -----------------------------------------------------------------------------
// Preliminaries
// -----------------------------------------------------------------------------

#ifndef C_INTERFACE_TEST_V2_0_FISSIONTRANSPORT_FISSIONENERGYRELEASED
#define C_INTERFACE_TEST_V2_0_FISSIONTRANSPORT_FISSIONENERGYRELEASED

#include "GNDStk.h"
#include "v2.0/fissionTransport/DelayedBetaEnergy.h"
#include "v2.0/fissionTransport/DelayedGammaEnergy.h"
#include "v2.0/fissionTransport/DelayedNeutronKE.h"
#include "v2.0/fissionTransport/NeutrinoEnergy.h"
#include "v2.0/fissionTransport/NonNeutrinoEnergy.h"
#include "v2.0/fissionTransport/PromptGammaEnergy.h"
#include "v2.0/fissionTransport/PromptNeutronKE.h"
#include "v2.0/fissionTransport/PromptProductKE.h"
#include "v2.0/fissionTransport/TotalEnergy.h"

#ifdef __cplusplus
   #define extern_c extern "C"
#else
   #define extern_c
#endif

// Proxy C struct for the handled C++ class
struct FissionEnergyReleasedClass { };


// -----------------------------------------------------------------------------
// Handle types
// -----------------------------------------------------------------------------

// +++ FissionEnergyReleased
// +++ General handle, suitable for most users. If you're not concerned about
// +++ strict "const correctness" in your C code, you can probably use this in
// +++ place of any function parameter of a const-aware handle type.
typedef struct FissionEnergyReleasedClass *FissionEnergyReleased;

// --- Const-aware handles.
typedef const struct FissionEnergyReleasedClass *const ConstHandle2ConstFissionEnergyReleased;
typedef       struct FissionEnergyReleasedClass *const ConstHandle2FissionEnergyReleased;
typedef const struct FissionEnergyReleasedClass *      Handle2ConstFissionEnergyReleased;
typedef       struct FissionEnergyReleasedClass *      Handle2FissionEnergyReleased;


// -----------------------------------------------------------------------------
// Basics
// Create, Assign, Delete
// -----------------------------------------------------------------------------

// --- Create, default, const
extern_c Handle2ConstFissionEnergyReleased
FissionEnergyReleasedDefaultConst();

// +++ Create, default
extern_c Handle2FissionEnergyReleased
FissionEnergyReleasedDefault();

// --- Create, general, const
extern_c Handle2ConstFissionEnergyReleased
FissionEnergyReleasedCreateConst(
   const XMLName label,
   ConstHandle2ConstDelayedBetaEnergy delayedBetaEnergy,
   ConstHandle2ConstDelayedGammaEnergy delayedGammaEnergy,
   ConstHandle2ConstDelayedNeutronKE delayedNeutronKE,
   ConstHandle2ConstNeutrinoEnergy neutrinoEnergy,
   ConstHandle2ConstNonNeutrinoEnergy nonNeutrinoEnergy,
   ConstHandle2ConstPromptGammaEnergy promptGammaEnergy,
   ConstHandle2ConstPromptNeutronKE promptNeutronKE,
   ConstHandle2ConstPromptProductKE promptProductKE,
   ConstHandle2ConstTotalEnergy totalEnergy
);

// +++ Create, general
extern_c Handle2FissionEnergyReleased
FissionEnergyReleasedCreate(
   const XMLName label,
   ConstHandle2ConstDelayedBetaEnergy delayedBetaEnergy,
   ConstHandle2ConstDelayedGammaEnergy delayedGammaEnergy,
   ConstHandle2ConstDelayedNeutronKE delayedNeutronKE,
   ConstHandle2ConstNeutrinoEnergy neutrinoEnergy,
   ConstHandle2ConstNonNeutrinoEnergy nonNeutrinoEnergy,
   ConstHandle2ConstPromptGammaEnergy promptGammaEnergy,
   ConstHandle2ConstPromptNeutronKE promptNeutronKE,
   ConstHandle2ConstPromptProductKE promptProductKE,
   ConstHandle2ConstTotalEnergy totalEnergy
);

// +++ Assign
// +++ Use this to assign one handled object to another. Don't assign handles,
// +++ as with to = from. That has a meaning that you probably don't intend.
extern_c void
FissionEnergyReleasedAssign(ConstHandle2FissionEnergyReleased This, ConstHandle2ConstFissionEnergyReleased from);

// +++ Delete
// +++ We'll attempt to remove no-longer-used objects automatically, but you
// +++ may improve performance if you delete them when you're done with them.
extern_c void
FissionEnergyReleasedDelete(ConstHandle2ConstFissionEnergyReleased This);


// -----------------------------------------------------------------------------
// I/O
// Read, Write, Print
// Each returns 0 if failure, 1 if success.
// -----------------------------------------------------------------------------

// +++ Read from file
// +++ File can be XML, JSON, or HDF5.
// +++ We'll examine the file's contents to determine its type automatically.
extern_c int
FissionEnergyReleasedRead(ConstHandle2FissionEnergyReleased This, const char *const filename);

// +++ Write to file
// +++ File can be XML, JSON, or HDF5.
// +++ We'll use filename's extension to determine the type you want written.
extern_c int
FissionEnergyReleasedWrite(ConstHandle2ConstFissionEnergyReleased This, const char *const filename);

// +++ Print to standard output, in our prettyprinting format
extern_c int
FissionEnergyReleasedPrint(ConstHandle2ConstFissionEnergyReleased This);

// +++ Print to standard output, as XML
extern_c int
FissionEnergyReleasedPrintXML(ConstHandle2ConstFissionEnergyReleased This);

// +++ Print to standard output, as JSON
extern_c int
FissionEnergyReleasedPrintJSON(ConstHandle2ConstFissionEnergyReleased This);


// -----------------------------------------------------------------------------
// Metadatum: label
// -----------------------------------------------------------------------------

// +++ Has
extern_c int
FissionEnergyReleasedLabelHas(ConstHandle2ConstFissionEnergyReleased This);

// +++ Get
// +++ Returns by value
extern_c XMLName
FissionEnergyReleasedLabelGet(ConstHandle2ConstFissionEnergyReleased This);

// +++ Set
extern_c void
FissionEnergyReleasedLabelSet(ConstHandle2FissionEnergyReleased This, const XMLName label);


// -----------------------------------------------------------------------------
// Child: delayedBetaEnergy
// -----------------------------------------------------------------------------

// +++ Has
extern_c int
FissionEnergyReleasedDelayedBetaEnergyHas(ConstHandle2ConstFissionEnergyReleased This);

// --- Get, const
extern_c Handle2ConstDelayedBetaEnergy
FissionEnergyReleasedDelayedBetaEnergyGetConst(ConstHandle2ConstFissionEnergyReleased This);

// +++ Get, non-const
extern_c Handle2DelayedBetaEnergy
FissionEnergyReleasedDelayedBetaEnergyGet(ConstHandle2FissionEnergyReleased This);

// +++ Set
extern_c void
FissionEnergyReleasedDelayedBetaEnergySet(ConstHandle2FissionEnergyReleased This, ConstHandle2ConstDelayedBetaEnergy delayedBetaEnergy);


// -----------------------------------------------------------------------------
// Child: delayedGammaEnergy
// -----------------------------------------------------------------------------

// +++ Has
extern_c int
FissionEnergyReleasedDelayedGammaEnergyHas(ConstHandle2ConstFissionEnergyReleased This);

// --- Get, const
extern_c Handle2ConstDelayedGammaEnergy
FissionEnergyReleasedDelayedGammaEnergyGetConst(ConstHandle2ConstFissionEnergyReleased This);

// +++ Get, non-const
extern_c Handle2DelayedGammaEnergy
FissionEnergyReleasedDelayedGammaEnergyGet(ConstHandle2FissionEnergyReleased This);

// +++ Set
extern_c void
FissionEnergyReleasedDelayedGammaEnergySet(ConstHandle2FissionEnergyReleased This, ConstHandle2ConstDelayedGammaEnergy delayedGammaEnergy);


// -----------------------------------------------------------------------------
// Child: delayedNeutronKE
// -----------------------------------------------------------------------------

// +++ Has
extern_c int
FissionEnergyReleasedDelayedNeutronKEHas(ConstHandle2ConstFissionEnergyReleased This);

// --- Get, const
extern_c Handle2ConstDelayedNeutronKE
FissionEnergyReleasedDelayedNeutronKEGetConst(ConstHandle2ConstFissionEnergyReleased This);

// +++ Get, non-const
extern_c Handle2DelayedNeutronKE
FissionEnergyReleasedDelayedNeutronKEGet(ConstHandle2FissionEnergyReleased This);

// +++ Set
extern_c void
FissionEnergyReleasedDelayedNeutronKESet(ConstHandle2FissionEnergyReleased This, ConstHandle2ConstDelayedNeutronKE delayedNeutronKE);


// -----------------------------------------------------------------------------
// Child: neutrinoEnergy
// -----------------------------------------------------------------------------

// +++ Has
extern_c int
FissionEnergyReleasedNeutrinoEnergyHas(ConstHandle2ConstFissionEnergyReleased This);

// --- Get, const
extern_c Handle2ConstNeutrinoEnergy
FissionEnergyReleasedNeutrinoEnergyGetConst(ConstHandle2ConstFissionEnergyReleased This);

// +++ Get, non-const
extern_c Handle2NeutrinoEnergy
FissionEnergyReleasedNeutrinoEnergyGet(ConstHandle2FissionEnergyReleased This);

// +++ Set
extern_c void
FissionEnergyReleasedNeutrinoEnergySet(ConstHandle2FissionEnergyReleased This, ConstHandle2ConstNeutrinoEnergy neutrinoEnergy);


// -----------------------------------------------------------------------------
// Child: nonNeutrinoEnergy
// -----------------------------------------------------------------------------

// +++ Has
extern_c int
FissionEnergyReleasedNonNeutrinoEnergyHas(ConstHandle2ConstFissionEnergyReleased This);

// --- Get, const
extern_c Handle2ConstNonNeutrinoEnergy
FissionEnergyReleasedNonNeutrinoEnergyGetConst(ConstHandle2ConstFissionEnergyReleased This);

// +++ Get, non-const
extern_c Handle2NonNeutrinoEnergy
FissionEnergyReleasedNonNeutrinoEnergyGet(ConstHandle2FissionEnergyReleased This);

// +++ Set
extern_c void
FissionEnergyReleasedNonNeutrinoEnergySet(ConstHandle2FissionEnergyReleased This, ConstHandle2ConstNonNeutrinoEnergy nonNeutrinoEnergy);


// -----------------------------------------------------------------------------
// Child: promptGammaEnergy
// -----------------------------------------------------------------------------

// +++ Has
extern_c int
FissionEnergyReleasedPromptGammaEnergyHas(ConstHandle2ConstFissionEnergyReleased This);

// --- Get, const
extern_c Handle2ConstPromptGammaEnergy
FissionEnergyReleasedPromptGammaEnergyGetConst(ConstHandle2ConstFissionEnergyReleased This);

// +++ Get, non-const
extern_c Handle2PromptGammaEnergy
FissionEnergyReleasedPromptGammaEnergyGet(ConstHandle2FissionEnergyReleased This);

// +++ Set
extern_c void
FissionEnergyReleasedPromptGammaEnergySet(ConstHandle2FissionEnergyReleased This, ConstHandle2ConstPromptGammaEnergy promptGammaEnergy);


// -----------------------------------------------------------------------------
// Child: promptNeutronKE
// -----------------------------------------------------------------------------

// +++ Has
extern_c int
FissionEnergyReleasedPromptNeutronKEHas(ConstHandle2ConstFissionEnergyReleased This);

// --- Get, const
extern_c Handle2ConstPromptNeutronKE
FissionEnergyReleasedPromptNeutronKEGetConst(ConstHandle2ConstFissionEnergyReleased This);

// +++ Get, non-const
extern_c Handle2PromptNeutronKE
FissionEnergyReleasedPromptNeutronKEGet(ConstHandle2FissionEnergyReleased This);

// +++ Set
extern_c void
FissionEnergyReleasedPromptNeutronKESet(ConstHandle2FissionEnergyReleased This, ConstHandle2ConstPromptNeutronKE promptNeutronKE);


// -----------------------------------------------------------------------------
// Child: promptProductKE
// -----------------------------------------------------------------------------

// +++ Has
extern_c int
FissionEnergyReleasedPromptProductKEHas(ConstHandle2ConstFissionEnergyReleased This);

// --- Get, const
extern_c Handle2ConstPromptProductKE
FissionEnergyReleasedPromptProductKEGetConst(ConstHandle2ConstFissionEnergyReleased This);

// +++ Get, non-const
extern_c Handle2PromptProductKE
FissionEnergyReleasedPromptProductKEGet(ConstHandle2FissionEnergyReleased This);

// +++ Set
extern_c void
FissionEnergyReleasedPromptProductKESet(ConstHandle2FissionEnergyReleased This, ConstHandle2ConstPromptProductKE promptProductKE);


// -----------------------------------------------------------------------------
// Child: totalEnergy
// -----------------------------------------------------------------------------

// +++ Has
extern_c int
FissionEnergyReleasedTotalEnergyHas(ConstHandle2ConstFissionEnergyReleased This);

// --- Get, const
extern_c Handle2ConstTotalEnergy
FissionEnergyReleasedTotalEnergyGetConst(ConstHandle2ConstFissionEnergyReleased This);

// +++ Get, non-const
extern_c Handle2TotalEnergy
FissionEnergyReleasedTotalEnergyGet(ConstHandle2FissionEnergyReleased This);

// +++ Set
extern_c void
FissionEnergyReleasedTotalEnergySet(ConstHandle2FissionEnergyReleased This, ConstHandle2ConstTotalEnergy totalEnergy);


// -----------------------------------------------------------------------------
// Done
// -----------------------------------------------------------------------------

#undef extern_c
#endif
