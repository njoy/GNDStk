
// THIS FILE WAS AUTOGENERATED!
// DO NOT MODIFY!

// Interface for C
// This header file is designed to work with both C and C++
// Function definitions are in this file's .cpp source

// -----------------------------------------------------------------------------
// -----------------------------------------------------------------------------
// Instructions for Users
//
// Constructs you're MORE likely to care about are preceded with:
//    // +++ remark
// Constructs you're LESS likely to care about are preceded with:
//    // --- remark
// Anything not marked as above can be ignored by most users.
//
// Sum is the basic handle type in this file. Example:
//    // Create a default Sum object:
//    Sum handle = SumDefault();
// Functions involving Sum are declared throughout this file.
// -----------------------------------------------------------------------------
// -----------------------------------------------------------------------------


// -----------------------------------------------------------------------------
// Preliminaries
// -----------------------------------------------------------------------------

#ifndef C_INTERFACE_TEST_V2_0_COVARIANCE_SUM
#define C_INTERFACE_TEST_V2_0_COVARIANCE_SUM

#include "GNDStk.h"
#include "v2.0/covariance/Summand.h"

#ifdef __cplusplus
   #define extern_c extern "C"
#else
   #define extern_c
#endif

// Proxy C struct for the handled C++ class
struct SumClass { };


// -----------------------------------------------------------------------------
// Handle types
// -----------------------------------------------------------------------------

// +++ Sum
// +++ General handle, suitable for most users. If you're not concerned about
// +++ strict "const correctness" in your C code, you can probably use this in
// +++ place of any function parameter of a const-aware handle type.
typedef struct SumClass *Sum;

// --- Const-aware handles.
typedef const struct SumClass *const ConstHandle2ConstSum;
typedef       struct SumClass *const ConstHandle2Sum;
typedef const struct SumClass *      Handle2ConstSum;
typedef       struct SumClass *      Handle2Sum;


// -----------------------------------------------------------------------------
// Basics
// Create, Assign, Delete
// -----------------------------------------------------------------------------

// --- Create, default, const
extern_c Handle2ConstSum
SumDefaultConst();

// +++ Create, default
extern_c Handle2Sum
SumDefault();

// --- Create, general, const
extern_c Handle2ConstSum
SumCreateConst(
   const Float64 domainMin,
   const Float64 domainMax,
   const XMLName domainUnit,
   const XMLName label,
   ConstHandle2Summand *const summand, const size_t summandSize
);

// +++ Create, general
extern_c Handle2Sum
SumCreate(
   const Float64 domainMin,
   const Float64 domainMax,
   const XMLName domainUnit,
   const XMLName label,
   ConstHandle2Summand *const summand, const size_t summandSize
);

// +++ Assign
// +++ Use this to assign one handled object to another. Don't assign handles,
// +++ as with to = from. That has a meaning that you probably don't intend.
extern_c void
SumAssign(ConstHandle2Sum This, ConstHandle2ConstSum from);

// +++ Delete
// +++ We'll attempt to remove no-longer-used objects automatically, but you
// +++ may improve performance if you delete them when you're done with them.
extern_c void
SumDelete(ConstHandle2ConstSum This);


// -----------------------------------------------------------------------------
// I/O
// Read, Write, Print
// Each returns 0 if failure, 1 if success.
// -----------------------------------------------------------------------------

// +++ Read from file
// +++ File can be XML, JSON, or HDF5.
// +++ We'll examine the file's contents to determine its type automatically.
extern_c int
SumRead(ConstHandle2Sum This, const char *const filename);

// +++ Write to file
// +++ File can be XML, JSON, or HDF5.
// +++ We'll use filename's extension to determine the type you want written.
extern_c int
SumWrite(ConstHandle2ConstSum This, const char *const filename);

// +++ Print to standard output, in our prettyprinting format
extern_c int
SumPrint(ConstHandle2ConstSum This);

// +++ Print to standard output, as XML
extern_c int
SumPrintXML(ConstHandle2ConstSum This);

// +++ Print to standard output, as JSON
extern_c int
SumPrintJSON(ConstHandle2ConstSum This);


// -----------------------------------------------------------------------------
// Metadatum: domainMin
// -----------------------------------------------------------------------------

// +++ Has
extern_c int
SumDomainMinHas(ConstHandle2ConstSum This);

// +++ Get
// +++ Returns by value
extern_c Float64
SumDomainMinGet(ConstHandle2ConstSum This);

// +++ Set
extern_c void
SumDomainMinSet(ConstHandle2Sum This, const Float64 domainMin);


// -----------------------------------------------------------------------------
// Metadatum: domainMax
// -----------------------------------------------------------------------------

// +++ Has
extern_c int
SumDomainMaxHas(ConstHandle2ConstSum This);

// +++ Get
// +++ Returns by value
extern_c Float64
SumDomainMaxGet(ConstHandle2ConstSum This);

// +++ Set
extern_c void
SumDomainMaxSet(ConstHandle2Sum This, const Float64 domainMax);


// -----------------------------------------------------------------------------
// Metadatum: domainUnit
// -----------------------------------------------------------------------------

// +++ Has
extern_c int
SumDomainUnitHas(ConstHandle2ConstSum This);

// +++ Get
// +++ Returns by value
extern_c XMLName
SumDomainUnitGet(ConstHandle2ConstSum This);

// +++ Set
extern_c void
SumDomainUnitSet(ConstHandle2Sum This, const XMLName domainUnit);


// -----------------------------------------------------------------------------
// Metadatum: label
// -----------------------------------------------------------------------------

// +++ Has
extern_c int
SumLabelHas(ConstHandle2ConstSum This);

// +++ Get
// +++ Returns by value
extern_c XMLName
SumLabelGet(ConstHandle2ConstSum This);

// +++ Set
extern_c void
SumLabelSet(ConstHandle2Sum This, const XMLName label);


// -----------------------------------------------------------------------------
// Child: summand
// -----------------------------------------------------------------------------

// +++ Has
extern_c int
SumSummandHas(ConstHandle2ConstSum This);

// +++ Clear
extern_c void
SumSummandClear(ConstHandle2Sum This);

// +++ Size
extern_c size_t
SumSummandSize(ConstHandle2ConstSum This);

// +++ Add
extern_c void
SumSummandAdd(ConstHandle2Sum This, ConstHandle2ConstSummand summand);

// --- Get, by index \in [0,size), const
extern_c Handle2ConstSummand
SumSummandGetConst(ConstHandle2ConstSum This, const size_t index_);

// +++ Get, by index \in [0,size), non-const
extern_c Handle2Summand
SumSummandGet(ConstHandle2Sum This, const size_t index_);

// +++ Set, by index \in [0,size)
extern_c void
SumSummandSet(
   ConstHandle2Sum This,
   const size_t index_,
   ConstHandle2ConstSummand summand
);

// +++ Has, by ENDF_MFMT
extern_c int
SumSummandHasByENDFMFMT(
   ConstHandle2ConstSum This,
   const XMLName ENDF_MFMT
);

// --- Get, by ENDF_MFMT, const
extern_c Handle2ConstSummand
SumSummandGetByENDFMFMTConst(
   ConstHandle2ConstSum This,
   const XMLName ENDF_MFMT
);

// +++ Get, by ENDF_MFMT, non-const
extern_c Handle2Summand
SumSummandGetByENDFMFMT(
   ConstHandle2Sum This,
   const XMLName ENDF_MFMT
);

// +++ Set, by ENDF_MFMT
extern_c void
SumSummandSetByENDFMFMT(
   ConstHandle2Sum This,
   const XMLName ENDF_MFMT,
   ConstHandle2ConstSummand summand
);

// +++ Has, by coefficient
extern_c int
SumSummandHasByCoefficient(
   ConstHandle2ConstSum This,
   const Float64 coefficient
);

// --- Get, by coefficient, const
extern_c Handle2ConstSummand
SumSummandGetByCoefficientConst(
   ConstHandle2ConstSum This,
   const Float64 coefficient
);

// +++ Get, by coefficient, non-const
extern_c Handle2Summand
SumSummandGetByCoefficient(
   ConstHandle2Sum This,
   const Float64 coefficient
);

// +++ Set, by coefficient
extern_c void
SumSummandSetByCoefficient(
   ConstHandle2Sum This,
   const Float64 coefficient,
   ConstHandle2ConstSummand summand
);

// +++ Has, by href
extern_c int
SumSummandHasByHref(
   ConstHandle2ConstSum This,
   const char *const href
);

// --- Get, by href, const
extern_c Handle2ConstSummand
SumSummandGetByHrefConst(
   ConstHandle2ConstSum This,
   const char *const href
);

// +++ Get, by href, non-const
extern_c Handle2Summand
SumSummandGetByHref(
   ConstHandle2Sum This,
   const char *const href
);

// +++ Set, by href
extern_c void
SumSummandSetByHref(
   ConstHandle2Sum This,
   const char *const href,
   ConstHandle2ConstSummand summand
);


// -----------------------------------------------------------------------------
// Done
// -----------------------------------------------------------------------------

#undef extern_c
#endif
