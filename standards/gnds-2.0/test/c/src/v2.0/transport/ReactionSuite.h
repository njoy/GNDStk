
// THIS FILE WAS AUTOGENERATED!
// DO NOT MODIFY!

// Interface for C
// This header file is designed to work with both C and C++
// Function definitions are in this file's .cpp source

// -----------------------------------------------------------------------------
// -----------------------------------------------------------------------------
// Instructions for Users
//
// Constructs you're MORE likely to care about are preceded with:
//    // +++ comment
// Constructs you're LESS likely to care about are preceded with:
//    // --- comment
// Anything not marked as above can be ignored by most users.
//
// ReactionSuite is the basic handle type in this file. Example:
//    // Create a default ReactionSuite object:
//    ReactionSuite handle = ReactionSuiteDefault();
// Functions involving ReactionSuite are declared throughout this file.
// -----------------------------------------------------------------------------
// -----------------------------------------------------------------------------


// -----------------------------------------------------------------------------
// Preliminaries
// -----------------------------------------------------------------------------

#ifndef C_INTERFACE_TEST_V2_0_TRANSPORT_REACTIONSUITE
#define C_INTERFACE_TEST_V2_0_TRANSPORT_REACTIONSUITE

#include "GNDStk.h"
#include "v2.0/common/ExternalFiles.h"
#include "v2.0/styles/Styles.h"
#include "v2.0/pops/PoPs_database.h"
#include "v2.0/resonances/Resonances.h"
#include "v2.0/transport/Reactions.h"
#include "v2.0/transport/OrphanProducts.h"
#include "v2.0/transport/Sums.h"
#include "v2.0/fissionTransport/FissionComponents.h"
#include "v2.0/transport/Productions.h"
#include "v2.0/transport/IncompleteReactions.h"
#include "v2.0/appData/ApplicationData.h"

#ifdef __cplusplus
   #define extern_c extern "C"
#else
   #define extern_c
#endif

// Proxy C struct for the handled C++ class
struct ReactionSuiteClass { };


// -----------------------------------------------------------------------------
// Handle types
// -----------------------------------------------------------------------------

// +++ ReactionSuite
// +++ General handle, suitable for most users. If you're not concerned about
// +++ strict "const correctness" in your C code, you can probably use this in
// +++ place of any function parameter of a const-aware handle type.
typedef struct ReactionSuiteClass *ReactionSuite;

// --- Const-aware handles.
typedef const struct ReactionSuiteClass *const ConstHandle2ConstReactionSuite;
typedef       struct ReactionSuiteClass *const ConstHandle2ReactionSuite;
typedef const struct ReactionSuiteClass *      Handle2ConstReactionSuite;
typedef       struct ReactionSuiteClass *      Handle2ReactionSuite;


// -----------------------------------------------------------------------------
// Basics
// Create, Assign, Delete
// -----------------------------------------------------------------------------

// --- Create, default, const
extern_c Handle2ConstReactionSuite
ReactionSuiteDefaultConst();

// +++ Create, default
extern_c Handle2ReactionSuite
ReactionSuiteDefault();

// --- Create, general, const
extern_c Handle2ConstReactionSuite
ReactionSuiteCreateConst(
   const XMLName evaluation,
   const XMLName format,
   const XMLName projectile,
   const enums::Frame projectileFrame,
   const XMLName target,
   const enums::Interaction interaction,
   ConstHandle2ConstExternalFiles externalFiles,
   ConstHandle2ConstStyles styles,
   ConstHandle2ConstPoPs_database PoPs,
   ConstHandle2ConstResonances resonances,
   ConstHandle2ConstReactions reactions,
   ConstHandle2ConstOrphanProducts orphanProducts,
   ConstHandle2ConstSums sums,
   ConstHandle2ConstFissionComponents fissionComponents,
   ConstHandle2ConstProductions productions,
   ConstHandle2ConstIncompleteReactions incompleteReactions,
   ConstHandle2ConstApplicationData applicationData
);

// +++ Create, general
extern_c Handle2ReactionSuite
ReactionSuiteCreate(
   const XMLName evaluation,
   const XMLName format,
   const XMLName projectile,
   const enums::Frame projectileFrame,
   const XMLName target,
   const enums::Interaction interaction,
   ConstHandle2ConstExternalFiles externalFiles,
   ConstHandle2ConstStyles styles,
   ConstHandle2ConstPoPs_database PoPs,
   ConstHandle2ConstResonances resonances,
   ConstHandle2ConstReactions reactions,
   ConstHandle2ConstOrphanProducts orphanProducts,
   ConstHandle2ConstSums sums,
   ConstHandle2ConstFissionComponents fissionComponents,
   ConstHandle2ConstProductions productions,
   ConstHandle2ConstIncompleteReactions incompleteReactions,
   ConstHandle2ConstApplicationData applicationData
);

// +++ Assign
// +++ Use this to assign one handled object to another. Don't assign handles,
// +++ as with to = from. That has a meaning that you probably don't intend.
extern_c void
ReactionSuiteAssign(ConstHandle2ReactionSuite This, ConstHandle2ConstReactionSuite from);

// +++ Delete
// +++ We'll attempt to remove no-longer-used objects automatically, but you
// +++ may improve performance if you delete them when you're done with them.
extern_c void
ReactionSuiteDelete(ConstHandle2ConstReactionSuite This);


// -----------------------------------------------------------------------------
// I/O
// Read, Write, Print
// Each returns 0 if failure, 1 if success.
// -----------------------------------------------------------------------------

// +++ Read from file
// +++ File can be XML, JSON, or HDF5.
// +++ We'll examine the file's contents to determine its type automatically.
extern_c int
ReactionSuiteRead(ConstHandle2ReactionSuite This, const char *const filename);

// +++ Write to file
// +++ File can be XML, JSON, or HDF5.
// +++ We'll use filename's extension to determine the type you want written.
extern_c int
ReactionSuiteWrite(ConstHandle2ConstReactionSuite This, const char *const filename);

// +++ Print to standard output, in our prettyprinting format
extern_c int
ReactionSuitePrint(ConstHandle2ConstReactionSuite This);

// +++ Print to standard output, as XML
extern_c int
ReactionSuitePrintXML(ConstHandle2ConstReactionSuite This);

// +++ Print to standard output, as JSON
extern_c int
ReactionSuitePrintJSON(ConstHandle2ConstReactionSuite This);


// -----------------------------------------------------------------------------
// Metadatum: evaluation
// -----------------------------------------------------------------------------

// +++ Has
extern_c int
ReactionSuiteEvaluationHas(ConstHandle2ConstReactionSuite This);

// +++ Get
// +++ Returns by value
extern_c XMLName
ReactionSuiteEvaluationGet(ConstHandle2ConstReactionSuite This);

// +++ Set
extern_c void
ReactionSuiteEvaluationSet(ConstHandle2ReactionSuite This, const XMLName evaluation);


// -----------------------------------------------------------------------------
// Metadatum: format
// -----------------------------------------------------------------------------

// +++ Has
extern_c int
ReactionSuiteFormatHas(ConstHandle2ConstReactionSuite This);

// +++ Get
// +++ Returns by value
extern_c XMLName
ReactionSuiteFormatGet(ConstHandle2ConstReactionSuite This);

// +++ Set
extern_c void
ReactionSuiteFormatSet(ConstHandle2ReactionSuite This, const XMLName format);


// -----------------------------------------------------------------------------
// Metadatum: projectile
// -----------------------------------------------------------------------------

// +++ Has
extern_c int
ReactionSuiteProjectileHas(ConstHandle2ConstReactionSuite This);

// +++ Get
// +++ Returns by value
extern_c XMLName
ReactionSuiteProjectileGet(ConstHandle2ConstReactionSuite This);

// +++ Set
extern_c void
ReactionSuiteProjectileSet(ConstHandle2ReactionSuite This, const XMLName projectile);


// -----------------------------------------------------------------------------
// Metadatum: projectileFrame
// -----------------------------------------------------------------------------

// +++ Has
extern_c int
ReactionSuiteProjectileFrameHas(ConstHandle2ConstReactionSuite This);

// +++ Get
// +++ Returns by value
extern_c enums::Frame
ReactionSuiteProjectileFrameGet(ConstHandle2ConstReactionSuite This);

// +++ Set
extern_c void
ReactionSuiteProjectileFrameSet(ConstHandle2ReactionSuite This, const enums::Frame projectileFrame);


// -----------------------------------------------------------------------------
// Metadatum: target
// -----------------------------------------------------------------------------

// +++ Has
extern_c int
ReactionSuiteTargetHas(ConstHandle2ConstReactionSuite This);

// +++ Get
// +++ Returns by value
extern_c XMLName
ReactionSuiteTargetGet(ConstHandle2ConstReactionSuite This);

// +++ Set
extern_c void
ReactionSuiteTargetSet(ConstHandle2ReactionSuite This, const XMLName target);


// -----------------------------------------------------------------------------
// Metadatum: interaction
// -----------------------------------------------------------------------------

// +++ Has
extern_c int
ReactionSuiteInteractionHas(ConstHandle2ConstReactionSuite This);

// +++ Get
// +++ Returns by value
extern_c enums::Interaction
ReactionSuiteInteractionGet(ConstHandle2ConstReactionSuite This);

// +++ Set
extern_c void
ReactionSuiteInteractionSet(ConstHandle2ReactionSuite This, const enums::Interaction interaction);


// -----------------------------------------------------------------------------
// Child: externalFiles
// -----------------------------------------------------------------------------

// +++ Has
extern_c int
ReactionSuiteExternalFilesHas(ConstHandle2ConstReactionSuite This);

// --- Get, const
extern_c Handle2ConstExternalFiles
ReactionSuiteExternalFilesGetConst(ConstHandle2ConstReactionSuite This);

// +++ Get, non-const
extern_c Handle2ExternalFiles
ReactionSuiteExternalFilesGet(ConstHandle2ReactionSuite This);

// +++ Set
extern_c void
ReactionSuiteExternalFilesSet(ConstHandle2ReactionSuite This, ConstHandle2ConstExternalFiles externalFiles);


// -----------------------------------------------------------------------------
// Child: styles
// -----------------------------------------------------------------------------

// +++ Has
extern_c int
ReactionSuiteStylesHas(ConstHandle2ConstReactionSuite This);

// --- Get, const
extern_c Handle2ConstStyles
ReactionSuiteStylesGetConst(ConstHandle2ConstReactionSuite This);

// +++ Get, non-const
extern_c Handle2Styles
ReactionSuiteStylesGet(ConstHandle2ReactionSuite This);

// +++ Set
extern_c void
ReactionSuiteStylesSet(ConstHandle2ReactionSuite This, ConstHandle2ConstStyles styles);


// -----------------------------------------------------------------------------
// Child: PoPs
// -----------------------------------------------------------------------------

// +++ Has
extern_c int
ReactionSuitePoPs_databaseHas(ConstHandle2ConstReactionSuite This);

// --- Get, const
extern_c Handle2ConstPoPs_database
ReactionSuitePoPs_databaseGetConst(ConstHandle2ConstReactionSuite This);

// +++ Get, non-const
extern_c Handle2PoPs_database
ReactionSuitePoPs_databaseGet(ConstHandle2ReactionSuite This);

// +++ Set
extern_c void
ReactionSuitePoPs_databaseSet(ConstHandle2ReactionSuite This, ConstHandle2ConstPoPs_database PoPs);


// -----------------------------------------------------------------------------
// Child: resonances
// -----------------------------------------------------------------------------

// +++ Has
extern_c int
ReactionSuiteResonancesHas(ConstHandle2ConstReactionSuite This);

// --- Get, const
extern_c Handle2ConstResonances
ReactionSuiteResonancesGetConst(ConstHandle2ConstReactionSuite This);

// +++ Get, non-const
extern_c Handle2Resonances
ReactionSuiteResonancesGet(ConstHandle2ReactionSuite This);

// +++ Set
extern_c void
ReactionSuiteResonancesSet(ConstHandle2ReactionSuite This, ConstHandle2ConstResonances resonances);


// -----------------------------------------------------------------------------
// Child: reactions
// -----------------------------------------------------------------------------

// +++ Has
extern_c int
ReactionSuiteReactionsHas(ConstHandle2ConstReactionSuite This);

// --- Get, const
extern_c Handle2ConstReactions
ReactionSuiteReactionsGetConst(ConstHandle2ConstReactionSuite This);

// +++ Get, non-const
extern_c Handle2Reactions
ReactionSuiteReactionsGet(ConstHandle2ReactionSuite This);

// +++ Set
extern_c void
ReactionSuiteReactionsSet(ConstHandle2ReactionSuite This, ConstHandle2ConstReactions reactions);


// -----------------------------------------------------------------------------
// Child: orphanProducts
// -----------------------------------------------------------------------------

// +++ Has
extern_c int
ReactionSuiteOrphanProductsHas(ConstHandle2ConstReactionSuite This);

// --- Get, const
extern_c Handle2ConstOrphanProducts
ReactionSuiteOrphanProductsGetConst(ConstHandle2ConstReactionSuite This);

// +++ Get, non-const
extern_c Handle2OrphanProducts
ReactionSuiteOrphanProductsGet(ConstHandle2ReactionSuite This);

// +++ Set
extern_c void
ReactionSuiteOrphanProductsSet(ConstHandle2ReactionSuite This, ConstHandle2ConstOrphanProducts orphanProducts);


// -----------------------------------------------------------------------------
// Child: sums
// -----------------------------------------------------------------------------

// +++ Has
extern_c int
ReactionSuiteSumsHas(ConstHandle2ConstReactionSuite This);

// --- Get, const
extern_c Handle2ConstSums
ReactionSuiteSumsGetConst(ConstHandle2ConstReactionSuite This);

// +++ Get, non-const
extern_c Handle2Sums
ReactionSuiteSumsGet(ConstHandle2ReactionSuite This);

// +++ Set
extern_c void
ReactionSuiteSumsSet(ConstHandle2ReactionSuite This, ConstHandle2ConstSums sums);


// -----------------------------------------------------------------------------
// Child: fissionComponents
// -----------------------------------------------------------------------------

// +++ Has
extern_c int
ReactionSuiteFissionComponentsHas(ConstHandle2ConstReactionSuite This);

// --- Get, const
extern_c Handle2ConstFissionComponents
ReactionSuiteFissionComponentsGetConst(ConstHandle2ConstReactionSuite This);

// +++ Get, non-const
extern_c Handle2FissionComponents
ReactionSuiteFissionComponentsGet(ConstHandle2ReactionSuite This);

// +++ Set
extern_c void
ReactionSuiteFissionComponentsSet(ConstHandle2ReactionSuite This, ConstHandle2ConstFissionComponents fissionComponents);


// -----------------------------------------------------------------------------
// Child: productions
// -----------------------------------------------------------------------------

// +++ Has
extern_c int
ReactionSuiteProductionsHas(ConstHandle2ConstReactionSuite This);

// --- Get, const
extern_c Handle2ConstProductions
ReactionSuiteProductionsGetConst(ConstHandle2ConstReactionSuite This);

// +++ Get, non-const
extern_c Handle2Productions
ReactionSuiteProductionsGet(ConstHandle2ReactionSuite This);

// +++ Set
extern_c void
ReactionSuiteProductionsSet(ConstHandle2ReactionSuite This, ConstHandle2ConstProductions productions);


// -----------------------------------------------------------------------------
// Child: incompleteReactions
// -----------------------------------------------------------------------------

// +++ Has
extern_c int
ReactionSuiteIncompleteReactionsHas(ConstHandle2ConstReactionSuite This);

// --- Get, const
extern_c Handle2ConstIncompleteReactions
ReactionSuiteIncompleteReactionsGetConst(ConstHandle2ConstReactionSuite This);

// +++ Get, non-const
extern_c Handle2IncompleteReactions
ReactionSuiteIncompleteReactionsGet(ConstHandle2ReactionSuite This);

// +++ Set
extern_c void
ReactionSuiteIncompleteReactionsSet(ConstHandle2ReactionSuite This, ConstHandle2ConstIncompleteReactions incompleteReactions);


// -----------------------------------------------------------------------------
// Child: applicationData
// -----------------------------------------------------------------------------

// +++ Has
extern_c int
ReactionSuiteApplicationDataHas(ConstHandle2ConstReactionSuite This);

// --- Get, const
extern_c Handle2ConstApplicationData
ReactionSuiteApplicationDataGetConst(ConstHandle2ConstReactionSuite This);

// +++ Get, non-const
extern_c Handle2ApplicationData
ReactionSuiteApplicationDataGet(ConstHandle2ReactionSuite This);

// +++ Set
extern_c void
ReactionSuiteApplicationDataSet(ConstHandle2ReactionSuite This, ConstHandle2ConstApplicationData applicationData);


// -----------------------------------------------------------------------------
// Done
// -----------------------------------------------------------------------------

#undef extern_c
#endif
