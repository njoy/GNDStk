
// THIS FILE WAS AUTOGENERATED!
// DO NOT MODIFY!

// Interface for C
// This header file is designed to work with both C and C++
// Function definitions are in this file's .cpp source

// -----------------------------------------------------------------------------
// -----------------------------------------------------------------------------
// Instructions for Users
//
// Constructs you're MORE likely to care about are preceded with:
//    // +++ remark
// Constructs you're LESS likely to care about are preceded with:
//    // --- remark
// Anything not marked as above can be ignored by most users.
//
// AvailableEnergy is the basic handle type in this file. Example:
//    // Create a default AvailableEnergy object:
//    AvailableEnergy handle = AvailableEnergyDefault();
// Functions involving AvailableEnergy are declared throughout this file.
// -----------------------------------------------------------------------------
// -----------------------------------------------------------------------------


// -----------------------------------------------------------------------------
// Preliminaries
// -----------------------------------------------------------------------------

#ifndef C_INTERFACE_TEST_V2_0_PROCESSED_AVAILABLEENERGY
#define C_INTERFACE_TEST_V2_0_PROCESSED_AVAILABLEENERGY

#include "GNDStk.h"
#include "v2.0/containers/XYs1d.h"
#include "v2.0/containers/Gridded1d.h"

#ifdef __cplusplus
   #define extern_c extern "C"
#else
   #define extern_c
#endif

// Proxy C struct for the handled C++ class
struct AvailableEnergyClass { };


// -----------------------------------------------------------------------------
// Handle types
// -----------------------------------------------------------------------------

// +++ AvailableEnergy
// +++ General handle, suitable for most users. If you're not concerned about
// +++ strict "const correctness" in your C code, you can probably use this in
// +++ place of any function parameter of a const-aware handle type.
typedef struct AvailableEnergyClass *AvailableEnergy;

// --- Const-aware handles.
typedef const struct AvailableEnergyClass *const ConstHandle2ConstAvailableEnergy;
typedef       struct AvailableEnergyClass *const ConstHandle2AvailableEnergy;
typedef const struct AvailableEnergyClass *      Handle2ConstAvailableEnergy;
typedef       struct AvailableEnergyClass *      Handle2AvailableEnergy;


// -----------------------------------------------------------------------------
// Basics
// Create, Assign, Delete
// -----------------------------------------------------------------------------

// --- Create, default, const
extern_c Handle2ConstAvailableEnergy
AvailableEnergyDefaultConst();

// +++ Create, default
extern_c Handle2AvailableEnergy
AvailableEnergyDefault();

// --- Create, general, const
extern_c Handle2ConstAvailableEnergy
AvailableEnergyCreateConst(
   ConstHandle2ConstXYs1d XYs1d,
   ConstHandle2ConstGridded1d gridded1d
);

// +++ Create, general
extern_c Handle2AvailableEnergy
AvailableEnergyCreate(
   ConstHandle2ConstXYs1d XYs1d,
   ConstHandle2ConstGridded1d gridded1d
);

// +++ Assign
// +++ Use this to assign one handled object to another. Don't assign handles,
// +++ as with to = from. That has a meaning that you probably don't intend.
extern_c void
AvailableEnergyAssign(ConstHandle2AvailableEnergy self, ConstHandle2ConstAvailableEnergy from);

// +++ Delete
// +++ We'll attempt to remove no-longer-used objects automatically, but you
// +++ may improve performance if you delete them when you're done with them.
extern_c void
AvailableEnergyDelete(ConstHandle2ConstAvailableEnergy self);


// -----------------------------------------------------------------------------
// I/O
// Read, Write, Print
// Each returns 0 if failure, 1 if success.
// -----------------------------------------------------------------------------

// +++ Read from file
// +++ File can be XML, JSON, or HDF5.
// +++ We'll examine the file's contents to determine its type automatically.
extern_c int
AvailableEnergyRead(ConstHandle2AvailableEnergy self, const char *const filename);

// +++ Write to file
// +++ File can be XML, JSON, or HDF5.
// +++ We'll use filename's extension to determine the type you want written.
extern_c int
AvailableEnergyWrite(ConstHandle2ConstAvailableEnergy self, const char *const filename);

// +++ Print to standard output, in our prettyprinting format
extern_c int
AvailableEnergyPrint(ConstHandle2ConstAvailableEnergy self);

// +++ Print to standard output, as XML
extern_c int
AvailableEnergyPrintXML(ConstHandle2ConstAvailableEnergy self);

// +++ Print to standard output, as JSON
extern_c int
AvailableEnergyPrintJSON(ConstHandle2ConstAvailableEnergy self);


// -----------------------------------------------------------------------------
// Child: XYs1d
// -----------------------------------------------------------------------------

// +++ Has
extern_c int
AvailableEnergyXYs1dHas(ConstHandle2ConstAvailableEnergy self);

// --- Get, const
extern_c Handle2ConstXYs1d
AvailableEnergyXYs1dGetConst(ConstHandle2ConstAvailableEnergy self);

// +++ Get, non-const
extern_c Handle2XYs1d
AvailableEnergyXYs1dGet(ConstHandle2AvailableEnergy self);

// +++ Set
extern_c void
AvailableEnergyXYs1dSet(ConstHandle2AvailableEnergy self, ConstHandle2ConstXYs1d XYs1d);


// -----------------------------------------------------------------------------
// Child: gridded1d
// -----------------------------------------------------------------------------

// +++ Has
extern_c int
AvailableEnergyGridded1dHas(ConstHandle2ConstAvailableEnergy self);

// --- Get, const
extern_c Handle2ConstGridded1d
AvailableEnergyGridded1dGetConst(ConstHandle2ConstAvailableEnergy self);

// +++ Get, non-const
extern_c Handle2Gridded1d
AvailableEnergyGridded1dGet(ConstHandle2AvailableEnergy self);

// +++ Set
extern_c void
AvailableEnergyGridded1dSet(ConstHandle2AvailableEnergy self, ConstHandle2ConstGridded1d gridded1d);


// -----------------------------------------------------------------------------
// Custom functionality
// -----------------------------------------------------------------------------

#include "v2.0/processed/AvailableEnergy/src/custom.h"

#undef extern_c
#endif
