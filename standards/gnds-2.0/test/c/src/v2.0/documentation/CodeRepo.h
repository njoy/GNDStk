
// THIS FILE WAS AUTOGENERATED!
// DO NOT MODIFY!

// Interface for C
// This header file is designed to work with both C and C++
// Function definitions are in this file's .cpp source

// -----------------------------------------------------------------------------
// -----------------------------------------------------------------------------
// Instructions for Users
//
// Constructs you're MORE likely to care about are preceded with:
//    // +++ remark
// Constructs you're LESS likely to care about are preceded with:
//    // --- remark
// Anything not marked as above can be ignored by most users.
//
// CodeRepo is the basic handle type in this file. Example:
//    // Create a default CodeRepo object:
//    CodeRepo handle = CodeRepoDefault();
// Functions involving CodeRepo are declared throughout this file.
// -----------------------------------------------------------------------------
// -----------------------------------------------------------------------------


// -----------------------------------------------------------------------------
// Preliminaries
// -----------------------------------------------------------------------------

#ifndef C_INTERFACE_TEST_V2_0_DOCUMENTATION_CODEREPO
#define C_INTERFACE_TEST_V2_0_DOCUMENTATION_CODEREPO

#include "GNDStk.h"

#ifdef __cplusplus
   #define extern_c extern "C"
#else
   #define extern_c
#endif

// Proxy C struct for the handled C++ class
struct CodeRepoClass { };


// -----------------------------------------------------------------------------
// Handle types
// -----------------------------------------------------------------------------

// +++ CodeRepo
// +++ General handle, suitable for most users. If you're not concerned about
// +++ strict "const correctness" in your C code, you can probably use this in
// +++ place of any function parameter of a const-aware handle type.
typedef struct CodeRepoClass *CodeRepo;

// --- Const-aware handles.
typedef const struct CodeRepoClass *const ConstHandle2ConstCodeRepo;
typedef       struct CodeRepoClass *const ConstHandle2CodeRepo;
typedef const struct CodeRepoClass *      Handle2ConstCodeRepo;
typedef       struct CodeRepoClass *      Handle2CodeRepo;


// -----------------------------------------------------------------------------
// Basics
// Create, Assign, Delete
// -----------------------------------------------------------------------------

// --- Create, default, const
extern_c Handle2ConstCodeRepo
CodeRepoDefaultConst();

// +++ Create, default
extern_c Handle2CodeRepo
CodeRepoDefault();

// --- Create, general, const
extern_c Handle2ConstCodeRepo
CodeRepoCreateConst(
   const XMLName label,
   const XMLName revisionSystem,
   const XMLName href,
   const XMLName revisionID
);

// +++ Create, general
extern_c Handle2CodeRepo
CodeRepoCreate(
   const XMLName label,
   const XMLName revisionSystem,
   const XMLName href,
   const XMLName revisionID
);

// +++ Assign
// +++ Use this to assign one handled object to another. Don't assign handles,
// +++ as with to = from. That has a meaning that you probably don't intend.
extern_c void
CodeRepoAssign(ConstHandle2CodeRepo This, ConstHandle2ConstCodeRepo from);

// +++ Delete
// +++ We'll attempt to remove no-longer-used objects automatically, but you
// +++ may improve performance if you delete them when you're done with them.
extern_c void
CodeRepoDelete(ConstHandle2ConstCodeRepo This);


// -----------------------------------------------------------------------------
// I/O
// Read, Write, Print
// Each returns 0 if failure, 1 if success.
// -----------------------------------------------------------------------------

// +++ Read from file
// +++ File can be XML, JSON, or HDF5.
// +++ We'll examine the file's contents to determine its type automatically.
extern_c int
CodeRepoRead(ConstHandle2CodeRepo This, const char *const filename);

// +++ Write to file
// +++ File can be XML, JSON, or HDF5.
// +++ We'll use filename's extension to determine the type you want written.
extern_c int
CodeRepoWrite(ConstHandle2ConstCodeRepo This, const char *const filename);

// +++ Print to standard output, in our prettyprinting format
extern_c int
CodeRepoPrint(ConstHandle2ConstCodeRepo This);

// +++ Print to standard output, as XML
extern_c int
CodeRepoPrintXML(ConstHandle2ConstCodeRepo This);

// +++ Print to standard output, as JSON
extern_c int
CodeRepoPrintJSON(ConstHandle2ConstCodeRepo This);


// -----------------------------------------------------------------------------
// Metadatum: label
// -----------------------------------------------------------------------------

// +++ Has
extern_c int
CodeRepoLabelHas(ConstHandle2ConstCodeRepo This);

// +++ Get
// +++ Returns by value
extern_c XMLName
CodeRepoLabelGet(ConstHandle2ConstCodeRepo This);

// +++ Set
extern_c void
CodeRepoLabelSet(ConstHandle2CodeRepo This, const XMLName label);


// -----------------------------------------------------------------------------
// Metadatum: revisionSystem
// -----------------------------------------------------------------------------

// +++ Has
extern_c int
CodeRepoRevisionSystemHas(ConstHandle2ConstCodeRepo This);

// +++ Get
// +++ Returns by value
extern_c XMLName
CodeRepoRevisionSystemGet(ConstHandle2ConstCodeRepo This);

// +++ Set
extern_c void
CodeRepoRevisionSystemSet(ConstHandle2CodeRepo This, const XMLName revisionSystem);


// -----------------------------------------------------------------------------
// Metadatum: href
// -----------------------------------------------------------------------------

// +++ Has
extern_c int
CodeRepoHrefHas(ConstHandle2ConstCodeRepo This);

// +++ Get
// +++ Returns by value
extern_c XMLName
CodeRepoHrefGet(ConstHandle2ConstCodeRepo This);

// +++ Set
extern_c void
CodeRepoHrefSet(ConstHandle2CodeRepo This, const XMLName href);


// -----------------------------------------------------------------------------
// Metadatum: revisionID
// -----------------------------------------------------------------------------

// +++ Has
extern_c int
CodeRepoRevisionIDHas(ConstHandle2ConstCodeRepo This);

// +++ Get
// +++ Returns by value
extern_c XMLName
CodeRepoRevisionIDGet(ConstHandle2ConstCodeRepo This);

// +++ Set
extern_c void
CodeRepoRevisionIDSet(ConstHandle2CodeRepo This, const XMLName revisionID);


// -----------------------------------------------------------------------------
// Custom functionality
// -----------------------------------------------------------------------------

#include "v2.0/documentation/CodeRepo/src/custom.h"

#undef extern_c
#endif
