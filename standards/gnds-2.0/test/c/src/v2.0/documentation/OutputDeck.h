
// THIS FILE WAS AUTOGENERATED!
// DO NOT MODIFY!

// Interface for C
// This header file is designed to work with both C and C++
// Function definitions are in this file's .cpp source

// -----------------------------------------------------------------------------
// -----------------------------------------------------------------------------
// Instructions for Users
//
// Constructs you're MORE likely to care about are preceded with:
//    // +++ remark
// Constructs you're LESS likely to care about are preceded with:
//    // --- remark
// Anything not marked as above can be ignored by most users.
//
// OutputDeck is the basic handle type in this file. Example:
//    // Create a default OutputDeck object:
//    OutputDeck handle = OutputDeckDefault();
// Functions involving OutputDeck are declared throughout this file.
// -----------------------------------------------------------------------------
// -----------------------------------------------------------------------------


// -----------------------------------------------------------------------------
// Preliminaries
// -----------------------------------------------------------------------------

#ifndef C_INTERFACE_TEST_V2_0_DOCUMENTATION_OUTPUTDECK
#define C_INTERFACE_TEST_V2_0_DOCUMENTATION_OUTPUTDECK

#include "GNDStk.h"

#ifdef __cplusplus
   #define extern_c extern "C"
#else
   #define extern_c
#endif

// Proxy C struct for the handled C++ class
struct OutputDeckClass { };


// -----------------------------------------------------------------------------
// Handle types
// -----------------------------------------------------------------------------

// +++ OutputDeck
// +++ General handle, suitable for most users. If you're not concerned about
// +++ strict "const correctness" in your C code, you can probably use this in
// +++ place of any function parameter of a const-aware handle type.
typedef struct OutputDeckClass *OutputDeck;

// --- Const-aware handles.
typedef const struct OutputDeckClass *const ConstHandle2ConstOutputDeck;
typedef       struct OutputDeckClass *const ConstHandle2OutputDeck;
typedef const struct OutputDeckClass *      Handle2ConstOutputDeck;
typedef       struct OutputDeckClass *      Handle2OutputDeck;


// -----------------------------------------------------------------------------
// Basics
// Create, Assign, Delete
// -----------------------------------------------------------------------------

// --- Create, default, const
extern_c Handle2ConstOutputDeck
OutputDeckDefaultConst();

// +++ Create, default
extern_c Handle2OutputDeck
OutputDeckDefault();

// --- Create, general, const
extern_c Handle2ConstOutputDeck
OutputDeckCreateConst(
   const XMLName encoding,
   const char *const markup,
   const XMLName label,
   const XMLName filename
);

// +++ Create, general
extern_c Handle2OutputDeck
OutputDeckCreate(
   const XMLName encoding,
   const char *const markup,
   const XMLName label,
   const XMLName filename
);

// +++ Assign
// +++ Use this to assign one handled object to another. Don't assign handles,
// +++ as with to = from. That has a meaning that you probably don't intend.
extern_c void
OutputDeckAssign(ConstHandle2OutputDeck self, ConstHandle2ConstOutputDeck from);

// +++ Delete
// +++ We'll attempt to remove no-longer-used objects automatically, but you
// +++ may improve performance if you delete them when you're done with them.
extern_c void
OutputDeckDelete(ConstHandle2ConstOutputDeck self);


// -----------------------------------------------------------------------------
// I/O
// Read, Write, Print
// Each returns 0 if failure, 1 if success.
// -----------------------------------------------------------------------------

// +++ Read from file
// +++ File can be XML, JSON, or HDF5.
// +++ We'll examine the file's contents to determine its type automatically.
extern_c int
OutputDeckRead(ConstHandle2OutputDeck self, const char *const filename);

// +++ Write to file
// +++ File can be XML, JSON, or HDF5.
// +++ We'll use filename's extension to determine the type you want written.
extern_c int
OutputDeckWrite(ConstHandle2ConstOutputDeck self, const char *const filename);

// +++ Print to standard output, in our prettyprinting format
extern_c int
OutputDeckPrint(ConstHandle2ConstOutputDeck self);

// +++ Print to standard output, as XML
extern_c int
OutputDeckPrintXML(ConstHandle2ConstOutputDeck self);

// +++ Print to standard output, as JSON
extern_c int
OutputDeckPrintJSON(ConstHandle2ConstOutputDeck self);


// -----------------------------------------------------------------------------
// Data vector
// -----------------------------------------------------------------------------

// ------------------------
// int
// ------------------------

// +++ Clear
extern_c void
OutputDeckIntsClear(ConstHandle2OutputDeck self);

// +++ Get size
extern_c size_t
OutputDeckIntsSize(ConstHandle2ConstOutputDeck self);

// +++ Get value
// +++ By index \in [0,size)
extern_c int
OutputDeckIntsGet(ConstHandle2ConstOutputDeck self, const size_t index);

// +++ Set value
// +++ By index \in [0,size)
extern_c void
OutputDeckIntsSet(ConstHandle2OutputDeck self, const size_t index, const int value);

// --- Get pointer to existing values, const
extern_c const int *
OutputDeckIntsGetArrayConst(ConstHandle2ConstOutputDeck self);

// +++ Get pointer to existing values, non-const
extern_c int *
OutputDeckIntsGetArray(ConstHandle2OutputDeck self);

// +++ Set completely new values and size
extern_c void
OutputDeckIntsSetArray(ConstHandle2OutputDeck self, const int *const values, const size_t size);

// ------------------------
// unsigned
// ------------------------

// +++ Clear
extern_c void
OutputDeckUnsignedsClear(ConstHandle2OutputDeck self);

// +++ Get size
extern_c size_t
OutputDeckUnsignedsSize(ConstHandle2ConstOutputDeck self);

// +++ Get value
// +++ By index \in [0,size)
extern_c unsigned
OutputDeckUnsignedsGet(ConstHandle2ConstOutputDeck self, const size_t index);

// +++ Set value
// +++ By index \in [0,size)
extern_c void
OutputDeckUnsignedsSet(ConstHandle2OutputDeck self, const size_t index, const unsigned value);

// --- Get pointer to existing values, const
extern_c const unsigned *
OutputDeckUnsignedsGetArrayConst(ConstHandle2ConstOutputDeck self);

// +++ Get pointer to existing values, non-const
extern_c unsigned *
OutputDeckUnsignedsGetArray(ConstHandle2OutputDeck self);

// +++ Set completely new values and size
extern_c void
OutputDeckUnsignedsSetArray(ConstHandle2OutputDeck self, const unsigned *const values, const size_t size);

// ------------------------
// float
// ------------------------

// +++ Clear
extern_c void
OutputDeckFloatsClear(ConstHandle2OutputDeck self);

// +++ Get size
extern_c size_t
OutputDeckFloatsSize(ConstHandle2ConstOutputDeck self);

// +++ Get value
// +++ By index \in [0,size)
extern_c float
OutputDeckFloatsGet(ConstHandle2ConstOutputDeck self, const size_t index);

// +++ Set value
// +++ By index \in [0,size)
extern_c void
OutputDeckFloatsSet(ConstHandle2OutputDeck self, const size_t index, const float value);

// --- Get pointer to existing values, const
extern_c const float *
OutputDeckFloatsGetArrayConst(ConstHandle2ConstOutputDeck self);

// +++ Get pointer to existing values, non-const
extern_c float *
OutputDeckFloatsGetArray(ConstHandle2OutputDeck self);

// +++ Set completely new values and size
extern_c void
OutputDeckFloatsSetArray(ConstHandle2OutputDeck self, const float *const values, const size_t size);

// ------------------------
// double
// ------------------------

// +++ Clear
extern_c void
OutputDeckDoublesClear(ConstHandle2OutputDeck self);

// +++ Get size
extern_c size_t
OutputDeckDoublesSize(ConstHandle2ConstOutputDeck self);

// +++ Get value
// +++ By index \in [0,size)
extern_c double
OutputDeckDoublesGet(ConstHandle2ConstOutputDeck self, const size_t index);

// +++ Set value
// +++ By index \in [0,size)
extern_c void
OutputDeckDoublesSet(ConstHandle2OutputDeck self, const size_t index, const double value);

// --- Get pointer to existing values, const
extern_c const double *
OutputDeckDoublesGetArrayConst(ConstHandle2ConstOutputDeck self);

// +++ Get pointer to existing values, non-const
extern_c double *
OutputDeckDoublesGetArray(ConstHandle2OutputDeck self);

// +++ Set completely new values and size
extern_c void
OutputDeckDoublesSetArray(ConstHandle2OutputDeck self, const double *const values, const size_t size);


// -----------------------------------------------------------------------------
// Metadatum: encoding
// -----------------------------------------------------------------------------

// +++ Has
extern_c int
OutputDeckEncodingHas(ConstHandle2ConstOutputDeck self);

// +++ Get
// +++ Returns by value
extern_c XMLName
OutputDeckEncodingGet(ConstHandle2ConstOutputDeck self);

// +++ Set
extern_c void
OutputDeckEncodingSet(ConstHandle2OutputDeck self, const XMLName encoding);


// -----------------------------------------------------------------------------
// Metadatum: markup
// -----------------------------------------------------------------------------

// +++ Has
extern_c int
OutputDeckMarkupHas(ConstHandle2ConstOutputDeck self);

// +++ Get
// +++ Returns by value
extern_c const char *
OutputDeckMarkupGet(ConstHandle2ConstOutputDeck self);

// +++ Set
extern_c void
OutputDeckMarkupSet(ConstHandle2OutputDeck self, const char *const markup);


// -----------------------------------------------------------------------------
// Metadatum: label
// -----------------------------------------------------------------------------

// +++ Has
extern_c int
OutputDeckLabelHas(ConstHandle2ConstOutputDeck self);

// +++ Get
// +++ Returns by value
extern_c XMLName
OutputDeckLabelGet(ConstHandle2ConstOutputDeck self);

// +++ Set
extern_c void
OutputDeckLabelSet(ConstHandle2OutputDeck self, const XMLName label);


// -----------------------------------------------------------------------------
// Metadatum: filename
// -----------------------------------------------------------------------------

// +++ Has
extern_c int
OutputDeckFilenameHas(ConstHandle2ConstOutputDeck self);

// +++ Get
// +++ Returns by value
extern_c XMLName
OutputDeckFilenameGet(ConstHandle2ConstOutputDeck self);

// +++ Set
extern_c void
OutputDeckFilenameSet(ConstHandle2OutputDeck self, const XMLName filename);


// -----------------------------------------------------------------------------
// Custom functionality
// -----------------------------------------------------------------------------

#include "v2.0/documentation/OutputDeck/src/custom.h"

#undef extern_c
#endif
