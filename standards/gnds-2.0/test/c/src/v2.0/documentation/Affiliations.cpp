
// THIS FILE WAS AUTOGENERATED!
// DO NOT MODIFY!

#include "test/v2_0/documentation/Affiliations.hpp"
#include "Affiliations.h"

using namespace njoy::GNDStk;
using namespace test::v2_0;

using C = AffiliationsClass;
using CPP = multigroup::Affiliations;

static const std::string CLASSNAME = "Affiliations";

namespace extract {
   static auto affiliation = [](auto &obj) { return &obj.affiliation; };
}

using CPPAffiliation = documentation::Affiliation;


// -----------------------------------------------------------------------------
// Basics
// Create, Assign, Delete
// -----------------------------------------------------------------------------

// Create, default, const
Handle2ConstAffiliations
AffiliationsDefaultConst()
{
   return detail::createHandle<CPP,C>
      (CLASSNAME, CLASSNAME+"DefaultConst");
}

// Create, default
Handle2Affiliations
AffiliationsDefault()
{
   return detail::createHandle<CPP,C>
      (CLASSNAME, CLASSNAME+"Default");
}

// Create, general, const
Handle2ConstAffiliations
AffiliationsCreateConst(
   ConstHandle2Affiliation *const affiliation, const size_t affiliationSize
) {
   ConstHandle2Affiliations handle = detail::createHandle<CPP,C>(
      CLASSNAME, CLASSNAME+"CreateConst",
      std::vector<CPPAffiliation>{}
   );
   for (size_t AffiliationN = 0; AffiliationN < affiliationSize; ++AffiliationN)
      AffiliationsAffiliationAdd(handle, affiliation[AffiliationN]);
   return handle;
}

// Create, general
Handle2Affiliations
AffiliationsCreate(
   ConstHandle2Affiliation *const affiliation, const size_t affiliationSize
) {
   ConstHandle2Affiliations handle = detail::createHandle<CPP,C>(
      CLASSNAME, CLASSNAME+"Create",
      std::vector<CPPAffiliation>{}
   );
   for (size_t AffiliationN = 0; AffiliationN < affiliationSize; ++AffiliationN)
      AffiliationsAffiliationAdd(handle, affiliation[AffiliationN]);
   return handle;
}

// Assign
// Use this to assign one handled object to another. Don't assign handles,
// as with to = from. That has a meaning that you probably don't intend.
void
AffiliationsAssign(ConstHandle2Affiliations This, ConstHandle2ConstAffiliations from)
{
   detail::assignHandle<CPP,C>
      (CLASSNAME, CLASSNAME+"Assign", This, from);
}

// Delete
// We'll attempt to remove no-longer-used objects automatically, but you
// may improve performance if you delete them when you're done with them.
void
AffiliationsDelete(ConstHandle2ConstAffiliations This)
{
   detail::deleteHandle<CPP,C>
      (CLASSNAME, CLASSNAME+"Delete", This);
}


// -----------------------------------------------------------------------------
// I/O
// Read, Write, Print
// Each returns 0 if failure, 1 if success.
// -----------------------------------------------------------------------------

// Read from file
// File can be XML, JSON, or HDF5.
// We'll examine the file's contents to determine its type automatically.
int
AffiliationsRead(ConstHandle2Affiliations This, const char *const filename)
{
   return detail::readHandle<CPP,C>
      (CLASSNAME, CLASSNAME+"Read", This, filename);
}

// Write to file
// File can be XML, JSON, or HDF5.
// We'll use filename's extension to determine the type you want written.
int
AffiliationsWrite(ConstHandle2ConstAffiliations This, const char *const filename)
{
   return detail::writeHandle<CPP,C>
      (CLASSNAME, CLASSNAME+"Write", This, filename);
}

// Print to standard output, in our prettyprinting format
int
AffiliationsPrint(ConstHandle2ConstAffiliations This)
{
   return detail::printHandle<CPP,C>
      (CLASSNAME, CLASSNAME+"Print", This);
}

// Print to standard output, as XML
int
AffiliationsPrintXML(ConstHandle2ConstAffiliations This)
{
   return detail::printHandle<CPP,C>
      (CLASSNAME, CLASSNAME+"PrintXML", This, "XML");
}

// Print to standard output, as JSON
int
AffiliationsPrintJSON(ConstHandle2ConstAffiliations This)
{
   return detail::printHandle<CPP,C>
      (CLASSNAME, CLASSNAME+"PrintJSON", This, "JSON");
}


// -----------------------------------------------------------------------------
// Child: affiliation
// -----------------------------------------------------------------------------

// Has
int
AffiliationsAffiliationHas(ConstHandle2ConstAffiliations This)
{
   return detail::hasField<CPP>
      (CLASSNAME, CLASSNAME+"AffiliationHas", This, extract::affiliation);
}

// Clear
void
AffiliationsAffiliationClear(ConstHandle2Affiliations This)
{
   detail::clearContainer<CPP>
      (CLASSNAME, CLASSNAME+"AffiliationClear", This, extract::affiliation);
}

// Size
size_t
AffiliationsAffiliationSize(ConstHandle2ConstAffiliations This)
{
   return detail::sizeOfContainer<CPP>
      (CLASSNAME, CLASSNAME+"AffiliationSize", This, extract::affiliation);
}

// Add
void
AffiliationsAffiliationAdd(ConstHandle2Affiliations This, ConstHandle2ConstAffiliation affiliation)
{
   detail::addToContainer<CPP,CPPAffiliation>
      (CLASSNAME, CLASSNAME+"AffiliationAdd", This, extract::affiliation, affiliation);
}

// Get, by index \in [0,size), const
Handle2ConstAffiliation
AffiliationsAffiliationGetConst(ConstHandle2ConstAffiliations This, const size_t index_)
{
   return detail::getByIndex<CPP,Handle2ConstAffiliation>
      (CLASSNAME, CLASSNAME+"AffiliationGetConst", This, extract::affiliation, index_);
}

// Get, by index \in [0,size), non-const
Handle2Affiliation
AffiliationsAffiliationGet(ConstHandle2Affiliations This, const size_t index_)
{
   return detail::getByIndex<CPP,Handle2Affiliation>
      (CLASSNAME, CLASSNAME+"AffiliationGet", This, extract::affiliation, index_);
}

// Set, by index \in [0,size)
void
AffiliationsAffiliationSet(
   ConstHandle2Affiliations This,
   const size_t index_,
   ConstHandle2ConstAffiliation affiliation
) {
   detail::setByIndex<CPP,CPPAffiliation>
      (CLASSNAME, CLASSNAME+"AffiliationSet", This, extract::affiliation, index_, affiliation);
}

// Has, by name
int
AffiliationsAffiliationHasByName(
   ConstHandle2ConstAffiliations This,
   const UTF8Text name
) {
   return detail::hasByMetadatum<CPP>
      (CLASSNAME, CLASSNAME+"AffiliationHasByName",
       This, extract::affiliation, meta::name, name);
}

// Get, by name, const
Handle2ConstAffiliation
AffiliationsAffiliationGetByNameConst(
   ConstHandle2ConstAffiliations This,
   const UTF8Text name
) {
   return detail::getByMetadatum<CPP,Handle2ConstAffiliation>
      (CLASSNAME, CLASSNAME+"AffiliationGetByNameConst",
       This, extract::affiliation, meta::name, name);
}

// Get, by name, non-const
Handle2Affiliation
AffiliationsAffiliationGetByName(
   ConstHandle2Affiliations This,
   const UTF8Text name
) {
   return detail::getByMetadatum<CPP,Handle2Affiliation>
      (CLASSNAME, CLASSNAME+"AffiliationGetByName",
       This, extract::affiliation, meta::name, name);
}

// Set, by name
void
AffiliationsAffiliationSetByName(
   ConstHandle2Affiliations This,
   const UTF8Text name,
   ConstHandle2ConstAffiliation affiliation
) {
   detail::setByMetadatum<CPP,CPPAffiliation>
      (CLASSNAME, CLASSNAME+"AffiliationSetByName",
       This, extract::affiliation, meta::name, name, affiliation);
}

// Has, by href
int
AffiliationsAffiliationHasByHref(
   ConstHandle2ConstAffiliations This,
   const UTF8Text href
) {
   return detail::hasByMetadatum<CPP>
      (CLASSNAME, CLASSNAME+"AffiliationHasByHref",
       This, extract::affiliation, meta::href, href);
}

// Get, by href, const
Handle2ConstAffiliation
AffiliationsAffiliationGetByHrefConst(
   ConstHandle2ConstAffiliations This,
   const UTF8Text href
) {
   return detail::getByMetadatum<CPP,Handle2ConstAffiliation>
      (CLASSNAME, CLASSNAME+"AffiliationGetByHrefConst",
       This, extract::affiliation, meta::href, href);
}

// Get, by href, non-const
Handle2Affiliation
AffiliationsAffiliationGetByHref(
   ConstHandle2Affiliations This,
   const UTF8Text href
) {
   return detail::getByMetadatum<CPP,Handle2Affiliation>
      (CLASSNAME, CLASSNAME+"AffiliationGetByHref",
       This, extract::affiliation, meta::href, href);
}

// Set, by href
void
AffiliationsAffiliationSetByHref(
   ConstHandle2Affiliations This,
   const UTF8Text href,
   ConstHandle2ConstAffiliation affiliation
) {
   detail::setByMetadatum<CPP,CPPAffiliation>
      (CLASSNAME, CLASSNAME+"AffiliationSetByHref",
       This, extract::affiliation, meta::href, href, affiliation);
}
