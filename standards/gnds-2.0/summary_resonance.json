{
    "__namespace__":"resonances",
    "resonances":{
        "__class__": "nodes.Node",
        "abstractNode": null,
        "attributes": {
            "href": {
                "__class__": "nodes.Attribute",
                "default": null,
                "description": null,
                "name": "href",
                "required": false,
                "type": "XMLName"
            }
        },
        "bodyText": null,
        "childNodes": {
            "scatteringRadius": {
                "__class__": "nodes.ChildNode",
                "description": "The scattering radius to be used by default.",
                "name": "scatteringRadius",
                "occurrence": "1",
                "required": true
            },
            "hardSphereRadius": {
                "__class__": "nodes.ChildNode",
                "description": "The channel radius to be used for calculating the phase shift.",
                "name": "hardSphereRadius",
                "occurrence": "1",
                "required": false
            },
            "resolved": {
                "__class__": "nodes.ChildNode",
                "description": [ "The resolved resonance parameters. The use of more than one ",
                                 "\\texttt{resolved} node is deprecated. It is allowed for ",
                                 "historic reasons but should not be used for new evaluations." ],
                "name": "resolved",
                "occurrence": "0+",
                "required": false
            },
            "unresolved": {
                "__class__": "nodes.ChildNode",
                "description": "The unresolved resonance parameters.",
                "name": "unresolved",
                "occurrence": "0+",
                "required": false
            }
        },
        "description": [ "The \\texttt{resonances} node contains the scattering radius for the ",
                         "potential scattering, along with resolved and/or unresolved resonance ",
                         "parameter data (if they are given)." ],
        "name": "resonances",
        "required": false,
        "rootNode": false
    },
    "scatteringRadius":{
        "__class__": "nodes.Node",
        "abstractNode": null,
        "attributes": {},
        "bodyText": null,
        "childUnique": "yesLabelOmitted",
        "childNodes": {
            "constant1d": {
                "__class__": "nodes.ChildNode",
                "description": "The scattering radius is a constant value.",
                "name": "constant1d",
                "occurrence": "choice",
                "required": false
            },
            "XYs1d": {
                "__class__": "nodes.ChildNode",
                "description": [ "The scattering radius is an energy dependent function with ",
                                 "a single interpolation range." ],
                "name": "XYs1d",
                "occurrence": "choice",
                "required": false
            },
            "regions1d": {
                "__class__": "nodes.ChildNode",
                "description": [ "The scattering radius is an energy dependent function with ",
                                 "multiple interpolation range." ],
                "name": "regions1d",
                "occurrence": "choice",
                "required": false
            }
        },
        "description": [ "The \\texttt{scatteringRadius} node provides the scattering radius ",
                         "for potential scattering. This scattering radius is also to be used ",
                         "as the default channel radius for all channels in the resolved and ",
                         "unresolved resonance range when calculating the penetrability $P$, ",
                         "the shift function $S$ and the phase shift $\\phi$.",
                         " ",
                         "The scattering radius should be given in length units (the ",
                         "recommended unit is fm) and can be given as either a constant value ",
                         "or an energy dependent function of the same style. The use of an ",
                         "energy dependent function for the scattering radius is deprecated.",
                         " ",
    		     "For a given evaluation label there can only be one  \\element{XYs1d}, \\element{regions1d} or \\element{constant1d}"],
        "name": "scatteringRadius",
        "required": true,
        "rootNode": false
    },
    "hardSphereRadius":{
        "__class__": "nodes.Node",
        "abstractNode": null,
        "attributes": {},
        "bodyText": null,
        "childNodes": {
            "constant1d": {
                "__class__": "nodes.ChildNode",
                "description": "The hard-sphere radius.",
                "name": "constant1d",
                "occurrence": "1",
                "required": true
            }
        },
        "description": [ "The \\texttt{hardSphereRadius} node provides the channel radius ",
                         "to be used in the calculation of the phase shift instead of the ",
                         "radius given in a \\texttt{scatteringRadius} node.",
                         " ",
                         "The \\texttt{hardSphereRadius} is deprecated and should not be used in new",
                         "evaluations. Evaluators wishing to modify the phase shift should consider using",
                         "a background R-Matrix term instead."],
        "name": "hardSphereRadius",
        "required": false,
        "rootNode": false
    },
    "externalRMatrix":{
        "__class__":"nodes.Node",
        "abstractNode": null,
        "attributes": {
            "type": {
                "__class__": "nodes.Attribute",
                "default": "Froehner",
                "description": [ "The statistical approximation for the resonances external to ",
                                 "the observed R-matrix resonances using one of the following ",
                                 "formalisms: \\texttt{Froehner}, \\texttt{SAMMY}. " ],
                "name": "type",
                "required": false,
                "type": "XMLName"
            }
        },
        "bodyText": null,
        "childUnique": "yesLabel",
        "childNodes": {
            "double": {
                "__class__": "nodes.ChildNode",
                "description": "Each of the terms in the Froehner or SAMMY formalisms",
                "name": "double",
                "occurrence": "1+",
                "required": true
            }
        },
        "description": [ "The statistical approximation for the resonances external to ",
                         "the observed R-matrix resonances using one of the following ",
                         "formalisms: \\texttt{Froehner}, \\texttt{SAMMY}. ",
                         "For the Froehner formalism, a \\element{double} should be provided for",
                         "each of the following terms, with the \\attr{label} attribute specified below:",
                         "\\begin{description}[font=\\ttfamily,labelindent=1cm] ",
                         "  \\item[averageRadiationWidth:] Average Radiation Width. Recommended ",
                                "unit: `eV', `MeV', etc.",
                         "  \\item[constantExternalR:] Constant term for the external ",
                                "contribution to the R-matrix. Recommended unit: unitless",
                         "  \\item[poleStrength:] Pole strength as defined by Fr\\\"ohner. Recommended ",
                                " unit: unitless",
                         "  \\item[singularityEnergyBelow:] Energy below the energy range of observed ",
                                "resonances at which the Froehner and SAMMY R-external equations ",
                                " produce infinite terms. Recommended unit: `eV', `MeV', etc.",
                         "  \\item[singularityEnergyAbove:] Energy above the energy range of observed ",
                                "resonances at which the Froehner and SAMMY R-external equations ",
                                " produce infinite terms. Recommended unit: `eV', `MeV', etc.",
                         "\\end{description}", 
                         "For the SAMMY formalism, a \\element{double} should be provided for",
                         "each of the following terms, with the \\attr{label} attribute specified below:",
                         "\\begin{description}[font=\\ttfamily,labelindent=1cm] ",
                         "  \\item[constantExternalR:] Constant term for the external ",
                                "contribution to the R-matrix. Recommended unit: unitless",
                         "  \\item[linearExternalR:] Linear term for the external ",
                                "contribution to the R-matrix. Recommended unit: `eV$^{-1}$'",
                         "  \\item[quadraticExternalR:] Quadratic term for the external ",
                                "contribution to the R-matrix. Recommended unit: `eV$^{-2}$'",
                         "  \\item[constantLogarithmicCoefficient:] Constant multiplicative coefficient ",
                                "on the logarithmic term in the SAMMY equation. Recommended ",
                                " unit: unitless",
                         "  \\item[linearLogarithmicCoefficient:] Constant multiplicative coefficient ",
                                "on the logarithmic term in the SAMMY equation. Recommended ",
                                " unit: `eV$^{-1}$'",
                         "  \\item[singularityEnergyBelow:] Energy below the energy range of observed ",
                                "resonances at which the Froehner and SAMMY R-external equations ",
                                " produce infinite terms. Recommended unit: `eV', `MeV', etc.",
                         "  \\item[singularityEnergyAbove:] Energy above the energy range of observed ",
                                "resonances at which the Froehner and SAMMY R-external equations ",
                                " produce infinite terms. Recommended unit: `eV', `MeV', etc.",
                         "\\end{description}" ],
        "name": "externalRMatrix",
        "required": false,
        "rootNode": false
    },
    "resolved":{
        "__class__": "nodes.Node",
        "abstractNode": null,
        "childUnique" : "yesLabel",
        "attributes": {
            "domainMin": {
                "__class__": "nodes.Attribute",
                "default": null,
                "description": "The lower energy limit of the resolved resonance range.",
                "name": "domainMin",
                "required": true,
                "type": "Float64"
            },
            "domainMax": {
                "__class__": "nodes.Attribute",
                "default": null,
                "description": "The upper energy limit of the resolved resonance range.",
                "name": "domainMax",
                "required": true,
                "type": "Float64"
            },
            "domainUnit": {
                "__class__": "nodes.Attribute",
                "default": null,
                "description": "The energy unit used for the lower and upper energy limits.",
                "name": "domainUnit",
                "required": true,
                "type": "XMLName"
            }
        },
        "bodyText": null,
        "childNodes": {
            "RMatrix": {
                "__class__": "nodes.ChildNode",
                "description": ["The resonance parameters are given using the R-matrix formalism.",
    			   "More than one is only allowed if they are different in the style label"],
                "name": "RMatrix",
                "occurrence": "choice",
                "required": false
            },
            "BreitWigner": {
                "__class__": "nodes.ChildNode",
                "description": [ "The resonance parameters are given using the deprecated ",
                                 "ENDF Breit-Wigner formalism.",
    			     "More than one is only allowed if they are different in the style label"],
                "name": "BreitWigner",
                "occurrence": "choice",
                "required": false
            },
            "energyIntervals": {
                "__class__": "nodes.ChildNode",
                "description": [ "Resonance parameters are broken up into several sections, with interference",
                                 "between sections ignored. This option is deprecated but appears in older evaluations."
                ],
                "name": "energyIntervals",
                "occurrence": "choice",
                "required": false
            }
        },
        "description": [ "The \\texttt{resolved} node provides a resolved resonance region ",
                         "over a given energy range. The energy domain of this resolved ",
                         "resonance region should not overlap with any of the other resonance ",
                         "regions defined in the \\texttt{resonances} node. ",
                         " ",
                         "The \\texttt{resolved} node defines the following formalisms for ",
                         "the resonance reconstruction: ",
                         "\\begin{description}[font=\\ttfamily,labelindent=1cm] ",
                         "  \\item[RMatrix:] the R-matrix formalism using the single-level ",
                         "                   Breit-Wigner (SLBW), the multi-level Breit-Wigner ",
                         "                   (MLBW), the Reich-Moore approximation or the full ",
                         "                   R-matrix formalism. ",
                         "  \\item[BreitWigner:] the deprecated ENDF Breit-Wigner formalisms ",
                         "                       (LRF=1 and 2). ",
                         "\\end{description}" ],
        "name": "resolved",
        "required": false,
        "rootNode": false
    },

    "energyIntervals":{
        "__class__": "nodes.Node",
        "abstractNode": null,
        "childUnique" : "yesLabel",
        "attributes": {
            "label": {
                "__class__": "nodes.Attribute",
                "default": null,
                "description": "Identifier label. Must be unique within the parent \\element{resolved} node.",
                "name": "label",
                "required": true,
                "type": "XMLName"
            }
        },
        "bodyText": null,
        "childNodes": {
            "energyInterval": {
                "__class__": "nodes.ChildNode",
                "description": "A single energy interval including domain limits and resonance parameterisation.",
                "name": "energyInterval",
                "occurrence": "2+",
                "required": true
            }
        },
        "description": [
            "Used to break the resolved resonance region into multiple independant sub-regions.",
            "This was done in some older evaluations (notably the ENDF-VII.1 n + $^{239}$Pu evaluation)",
            "to reduce the computational load of summing over all resonances when reconstructing the cross section.",
            "This option is deprecated and should not be used for new evaluations."
        ],
        "name": "energyIntervals",
        "required": false,
        "rootNode": false
    },
    "energyInterval":{
        "__class__": "nodes.Node",
        "abstractNode": null,
        "attributes": {
            "index": {
                "__class__": "nodes.Attribute",
                "default": null,
                "description": "Index of this \\element{energyInterval} within the parent \\element{energyIntervals}.",
                "name": "index",
                "required": true,
                "type": "Integer32"
            },
            "domainMin": {
                "__class__": "nodes.Attribute",
                "default": null,
                "description": "The lower energy limit of the resolved resonance range.",
                "name": "domainMin",
                "required": true,
                "type": "Float64"
            },
            "domainMax": {
                "__class__": "nodes.Attribute",
                "default": null,
                "description": "The upper energy limit of the resolved resonance range.",
                "name": "domainMax",
                "required": true,
                "type": "Float64"
            },
            "domainUnit": {
                "__class__": "nodes.Attribute",
                "default": null,
                "description": "The energy unit used for the lower and upper energy limits.",
                "name": "domainUnit",
                "required": true,
                "type": "XMLName"
            }
        },
        "bodyText": null,
        "childNodes": {
            "RMatrix": {
                "__class__": "nodes.ChildNode",
                "description": "The resonance parameters in this interval are given using the R-matrix formalism.",
                "name": "RMatrix",
                "occurrence": "choice",
                "required": false
            },
            "BreitWigner": {
                "__class__": "nodes.ChildNode",
                "description": [ "The resonance parameters in this interval are given using the deprecated ",
                                 "ENDF Breit-Wigner formalism."],
                "name": "BreitWigner",
                "occurrence": "choice",
                "required": false
            }
        },
        "description": "A single energy interval, including domain limits and a resonance parameterisation.",
        "name": "energyInterval",
        "required": false,
        "rootNode": false
    },

    "boundaryCondition":{
        "__class__": "nodes.EnumeratedTypeNode",
        "description": [ "Allowed values for the \\attr{boundaryCondition} attribute.",
                         "The R-matrix formalism requires a choice in the boundary condition ",
                         "used in the calculation of the scattering matrix. This boundary condition ",
                         "is used in the term $S - B + iP$ for each channel in each spin group (in ",
                         "which $S$ is the shift function, $B$ is the boundary condition and $P$ is ",
                         "the penetrability). The following options for the boundary condition are ",
                         "currently defined: ",
                         "\\begin{description}[font=\\ttfamily,labelindent=1cm] ",
                         "  \\item[EliminateShiftFunction]: the boundary condition cancels out ",
                         "             the shift factor ($S - B = 0$) so that the shift factor ",
                         "             never has to be calculated. ",
                         "  \\item[NegativeOrbitalMomentum]: the boundary condition is set to be ",
                         "             equal to the minus the orbital momentum $L$.",
                         "  \\item[Brune]: the boundary condition follows the Brune parametrisation.",
                         "  \\item[Given]: the boundary condition is given for each channel.",
                         "\\end{description}",
                         " ",
                         "When the boundary condition option is \\texttt{Brune}, the resonance energies ",
                         "and widths given will be the Brune parameters, i.e. not the regular energies and widths ",
                         "for the traditional R-matrix defined by Lane and Thomas but the transformed ones defined by ",
                         "the Barker transform. Physical observables such as cross sections can be calculated from ",
                         "the Brune parameters using the level matrix, or by converting the parameters back to the ",
                         "the traditional R-matrix.",
                         " ",
                         "When the \\texttt{Given} option is selected, boundary condition values ",
                         "must be given for all channels, either by providing a global default value on ",
                         "the \\element{RMatrix} node or by providing a value for each individual ",
                         "resonance reaction or channel. The \\texttt{boundaryConditionValue} can also be used ",
                         "to override a \\texttt{NegativeOrbitalMomentum} boundary condition for specific resonance reactions, ",
                         "but cannot be used when the \\texttt{Brune} or \\texttt{EliminateShiftFunction} option is chosen." ],
        "name": "boundaryCondition",
        "allowedValues":["EliminateShiftFunction", "NegativeOrbitalMomentum", "Brune", "Given"]
    },
    "RMatrix":{
        "__class__": "nodes.Node",
        "abstractNode": null,
        "attributes": {
            "label": {
                "__class__": "nodes.Attribute",
                "default": null,
                "description": null,
                "name": "label",
                "required": true,
                "type": "XMLName"
            },
            "approximation": {
                "__class__": "nodes.Attribute",
                "default": null,
                "description": [ "The approximation to the R-matrix resonance formalism to be ",
                                 "used for the resonance reconstruction (one of ",
                                 "\\texttt{SingleLevelBreitWigner}, ",
                                 "\\texttt{MultiLevelBreitWigner}, \\texttt{ReichMoore} or ",
                                 "\\texttt{FullRMatrix})." ],
                "name": "approximation",
                "required": true,
                "type": "XMLName"
            },
            "boundaryCondition": {
                "__class__": "nodes.Attribute",
                "default": "EliminateShiftFunction",
                "description": [ "The boundary condition option to be used." ],
                "name": "boundaryCondition",
                "required": false,
                "type": "boundaryCondition"
            },
            "boundaryConditionValue": {
                "__class__": "nodes.Attribute",
                "default": null,
                "description": [ "A global default value of the boundary condition $B$ in $L = S - B + iP$ ",
                                 "when the boundary condition option selected on the RMatrix node is \\attrval{Given}. ",
                                 "This value can be overridden in the \\element{resonanceReaction} or \\element{channel} ",
                                 "nodes." ],
                "name": "boundaryConditionValue",
                "required": false,
                "type": "Float64"
            },
            "calculateChannelRadius": {
                "__class__": "nodes.Attribute",
                "default": "false",
                "description": [ "An optional flag to indicate whether or not the channel ",
                                 "radius should be calculated for the calculation of the ",
                                 "penetrability $P$ and shift function $S$." ],
                "name": "calculateChannelRadius",
                "required": false,
                "type": "Boolean"
            },
            "calculatePenetrability": {
                "__class__": "nodes.Attribute",
                "default": true,
                "description": [ "A flag to indicate whether or not the penetrability should be ",
                                 "calculated. If false, the penetrability is assumed to be 1." ],
                "name": "calculatePenetrability",
                "required": false,
                "type": "Boolean"
            },
            "useForSelfShieldingOnly": {
                "__class__": "nodes.Attribute",
                "default": false,
                "description": [ "Flag indicating that resonance parameters are only meant for use in",
                                 "computing self-shielding, not for calculating the cross section." ],
                "name": "useForSelfShieldingOnly",
                "required": false,
                "type": "Boolean"
            },
            "supportsAngularReconstruction": {
                "__class__": "nodes.Attribute",
                "default": "false",
                "description": [ "A flag to indicate whether or not the resonance parameters ",
                                 "may be used to compute angular distributions for the reactions." ],
                "name": "supportsAngularReconstruction",
                "required": false,
                "type": "Boolean"
            }
        },
        "bodyText": null,
        "childNodes": {
            "PoPs": {
                "__class__": "nodes.ChildNode",
                "description": [ "Particle database to be used for the resonance reconstruction. ",
                                 "This element only needs to be given if mass or spin values ",
                                 "different from the particle database used in the parent ",
                                 "\\texttt{reactionSuite} are to be used in the calculations. ",
                                 "The use of this element is deprecated." ],
                "name": "PoPs",
                "occurrence": "1",
                "required": false
            },
            "resonanceReactions": {
                "__class__": "nodes.ChildNode",
                "description": "The reactions for which resonance parameters will be provided.",
                "name": "resonanceReactions",
                "occurrence": "1",
                "required": true
            },
            "spinGroups": {
                "__class__": "nodes.ChildNode",
                "description": "The spin groups with resonance parameters.",
                "name": "spinGroups",
                "occurrence": "1",
                "required": true
            }
        },
        "description": [ "The \\texttt{RMatrix} node is used to specify resonance parameters using ",
                         "the R-matrix formalism, which can be given in multiple approximations. ",
                         "The following approximations for the resonance reconstruction using the ",
                         "R-matrix formalism are currently defined: ",
                         "\\begin{description}[font=\\ttfamily,labelindent=1cm] ",
                         "  \\item[SingleLevelBreitWigner]: the Single-level Breit-Wigner approximation",
                         "  \\item[MultiLevelBreitWigner]: the Multi-level Breit-Wigner approximation",
                         "  \\item[ReichMoore]: the Reich-Moore approximation",
                         "  \\item[FullRMatrix]: full R-matrix formalism",
                         "\\end{description} " ],
        "name": "RMatrix",
        "required": false,
        "rootNode": false
    },
    "resonanceReactions":{
        "__class__": "nodes.Node",
        "abstractNode": null,
        "attributes": {},
        "bodyText": null,
        "childNodes": {
            "resonanceReaction": {
                "__class__": "nodes.ChildNode",
                "description": "A single reaction for which resonances are specified.",
                "name": "resonanceReaction",
                "occurrence": "1+",
                "required": true
            }
        },
        "description": [ "The \\texttt{resonanceReactions} node provides data on all reactions ",
                         "for which resonance data is provided. Each reaction that is used in ",
                         "the description of the resonance parameters must be described here." ],
        "name": "resonanceReactions",
        "required": true,
        "rootNode": false
    },
    "resonanceReaction":{
        "__class__": "nodes.Node",
        "abstractNode": null,
        "attributes": {
            "label": {
                "__class__": "nodes.Attribute",
                "default": null,
                "description": null,
                "name": "label",
                "required": true,
                "type": "XMLName"
            },
            "ejectile": {
                "__class__": "nodes.Attribute",
                "default": null,
                "description": [ "A string identifying the ejectile of the reaction (e.g. n). ",
                                 "This attribute is required because the sign on the channel spin ",
                                 "depends on which outgoing particle is the ejectile, and which ",
                                 "the residual." ],
                "name": "ejectile",
                "required": true,
                "type": "XMLName"
            },
            "boundaryConditionValue": {
                "__class__": "nodes.Attribute",
                "default": null,
                "description": [ "A value of the boundary condition $B$ in $L = S - B + iP$ to be used for every channel ",
                                 "that points to this resonance reaction. This value overrides the ",
                                 "boundary condition option and/or value given in the \\element{RMatrix} node. This attribute ",
                                 "cannot be used if the boundary condition option is set to \\texttt{Brune} or",
                                 "\\texttt{EliminateShiftFunction} on the \\element{RMatrix} node.",
                                 "The boundary condition value given here can be overriden in a \\texttt{channel} node ",
                                 "that points to this resonance reaction." ],
                "name": "boundaryConditionValue",
                "required": false,
                "type": "Float64"
            },
            "eliminated": {
                "__class__": "nodes.Attribute",
                "default": false,
                "description": [ "A flag to indicate whether or not a reaction is eliminated. ",
                                 "This is used for the Reich-Moore approximation for the neutron ",
                                 "radiative capture reaction. At most one reaction can be treated ",
                                 "as eliminated." ],
                "name": "eliminated",
                "required": false,
                "type": "Boolean"
            }
        },
        "bodyText": null,
        "childNodes": {
            "Q": {
                "__class__": "nodes.ChildNode",
                "description": [ "An optional override for the Q value of the reaction given ",
                                 "in the \\texttt{reaction} node." ],
                "namespace": "common",
                "name": "Q",
                "occurrence": "1",
                "required": false
            },
            "scatteringRadius": {
                "__class__": "nodes.ChildNode",
                "description": [ "An optional override for the scattering radius for this ",
                                 "reaction." ],
                "name": "scatteringRadius",
                "occurrence": "1",
                "required": false
            },
            "hardSphereRadius": {
                "__class__": "nodes.ChildNode",
                "description": [ "An optional override for the channel radius used in the ",
                                 "calculation of the phase shift $\\phi$ for this reaction." ],
                "name": "hardSphereRadius",
                "occurrence": "1",
                "required": false
            },
            "link": {
                "__class__": "nodes.ChildNode",
                "description": "A link to the corresponding \\texttt{reaction} node.",
                "name": "link",
                "occurrence": "1",
                "required": true
            }
        },
        "description": [ "The \\texttt{resonanceReaction} node gives information on a single ",
                         "reaction for which resonances will be given. It contains a link ",
                         "to the corresponding \\texttt{reaction} node. It also defines some ",
                         "additional information for use when reconstructing cross sections. ",
                         "This includes override values for the channel radii to be used for ",
                         "the calculation of the penetrability $P$, the shift function $S$ ",
                         "and the phase shift $\\phi$ and whether or not the reaction is ",
                         "eliminated (as would be the case for neutron capture in the ",
                         "Reich-Moore approximation)." ],
        "name": "resonanceReaction",
        "required": true,
        "rootNode": false
    },
    "spinGroups":{
        "__class__": "nodes.Node",
        "abstractNode": null,
        "attributes": {},
        "bodyText": null,
        "childNodes": {
            "spinGroup": {
                "__class__": "nodes.ChildNode",
                "description": [ "The resolved resonance data for a given value of the total ",
                                 "angular momentum and associated parity $J^\\pi$ as well as ",
                                 "the contributing channels." ],
                "name": "spinGroup",
                "occurrence": "1+",
                "required": true
            }
        },
        "description": [ "The \\texttt{spinGroups} node provides data on all spin groups for which ",
                         "resonance data is provided." ],
        "name": "spinGroups",
        "required": true,
        "rootNode": false
    },
    "spinGroup":{
        "__class__": "nodes.Node",
        "abstractNode": null,
        "attributes": {
            "label": {
                "__class__": "nodes.Attribute",
                "default": null,
                "description": "A label string identifying the spin group.",
                "name": "label",
                "required": true,
                "type": "XMLName"
            },
            "spin": {
                "__class__": "nodes.Attribute",
                "default": null,
                "description": [ "The value of the total angular momentum $J$ for the spin ",
                                 "group in units of hbar, given as a fraction, e.g. \\texttt{0}, ",
                                 "\\texttt{1/2}, \\texttt{1}, \\texttt{3/2}, etc." ],
                "name": "spin",
                "required": true,
                "type": "Fraction32"
            },
            "parity": {
                "__class__": "nodes.Attribute",
                "default": 1,
                "description": "The parity for the spin group, either \\texttt{1} or \\texttt{-1}.",
                "name": "parity",
                "required": false,
                "type": "Integer32"
            }
        },
        "bodyText": null,
        "childNodes": {
            "channels": {
                "__class__": "nodes.ChildNode",
                "description": "The channels that are available in this spin group.",
                "name": "channels",
                "occurrence": "1",
                "required": true
            },
            "resonanceParameters": {
                "__class__": "nodes.ChildNode",
                "description": "The resonance parameter table for this spin group.",
                "name": "resonanceParameters",
                "occurrence": "1",
                "required": true
            }
        },
        "description": [ "The \\texttt{spinGroup} node contains the resolved resonance data for ",
                         "a given value of the total angular momentum and associated parity ",
                         "$J^\\pi$." ],
        "name": "spinGroup",
        "required": true,
        "rootNode": false
    },
    "channels":{
        "__class__": "nodes.Node",
        "abstractNode": null,
        "attributes": {},
        "bodyText": null,
        "childNodes": {
            "channel": {
                "__class__": "nodes.ChildNode",
                "description": [ "A node used to identify the channel and the resonance reaction ",
                                 "to which the channel contributes as well as the override values ",
                                 "to be used for channel related data." ],
                "name": "channel",
                "occurrence": "1+",
                "required": true
            }
        },
        "description": [ "The \\texttt{channels} section provides data on all reaction channels ",
                         "for which resonance data is provided in the current spin group. If no ",
                         "resonance parameters are given (i.e. the ",
                         "\\texttt{resonanceParameters} node contains an empty table), the ",
                         "contribution of the potential scattering is still present in the elastic ",
                         "channel. In this case, only the elastic channel must be specified in the ",
                         "\\texttt{channels} node." ],
        "name": "channels",
        "required": false,
        "rootNode": false
    },
    "channel":{
        "__class__": "nodes.Node",
        "abstractNode": null,
        "attributes": {
            "label": {
                "__class__": "nodes.Attribute",
                "default": null,
                "description": "A unique string identifying the channel in the spin group.",
                "name": "label",
                "required": true,
                "type": "XMLName"
            },
            "resonanceReaction": {
                "__class__": "nodes.Attribute",
                "default": null,
                "description": [ "The label of the resonance reaction (as defined in the ",
                                 "\\texttt{resonanceReaction} nodes) that the channel contributes to." ],
                "name": "resonanceReaction",
                "required": true,
                "type": "bodyText"
            },
            "L": {
                "__class__": "nodes.Attribute",
                "default": null,
                "description": "The value of the orbital momentum quantum number $\\ell$ in units of hbar.",
                "name": "L",
                "required": true,
                "type": "Integer32"
            },
            "channelSpin": {
                "__class__": "nodes.Attribute",
                "default": null,
                "description": [ "The value of the channel spin $s$ in units of hbar, given as a ",
                                 "fraction, e.g. \\texttt{0}, \\texttt{1/2}, ",
                                 "\\texttt{1}, \\texttt{3/2}, etc.." ],
                "name": "channelSpin",
                "required": true,
                "type": "Fraction32"
            },
            "boundaryConditionValue": {
                "__class__": "nodes.Attribute",
                "default": null,
                "description": [ "A value of the boundary condition $B$ in $L = S - B + iP$ to be used for this channel. ",
                                 "This value overrides the boundary condition option and/or value given in the \\element{RMatrix} node ",
                                 "or the boundary condition value in the \\element{resonanceReaction} node. This attribute ",
                                 "cannot be used if the boundary condition option is set to \\texttt{Brune} or",
                                 "\\texttt{EliminateShiftFunction} on the \\element{RMatrix} node." ],
                "name": "boundaryConditionValue",
                "required": false,
                "type": "Float64"
            },
            "columnIndex": {
                "__class__": "nodes.Attribute",
                "default": null,
                "description": [ "The index of the column of the table in the ",
                                 "\\texttt{resonanceParameters} that contains the resonance widths ",
                                 "for this channel." ],
                "name": "columnIndex",
                "required": true,
                "type": "Integer32"
            }
        },
        "bodyText": null,
        "childNodes": {
            "externalRMatrix": {
                "__class__": "nodes.ChildNode",
                "description": [ "An optional external R-matrix element that needs to be added to ",
                                 "the Reich-Moore R matrix." ],
                "name": "externalRMatrix",
                "occurrence": "1",
                "required": false
            },
            "scatteringRadius": {
                "__class__": "nodes.ChildNode",
                "description": [ "An optional override for the scattering radius for this ",
                                 "channel in the current spin group." ],
                "name": "scatteringRadius",
                "occurrence": "1",
                "required": false
            },
            "hardSphereRadius": {
                "__class__": "nodes.ChildNode",
                "description": [ "An optional override for the channel radius used in the ",
                                 "calculation of the phase shift $\\phi$ for this channel ",
                                 "in the current spin group." ],
                "name": "hardSphereRadius",
                "occurrence": "1",
                "required": false
            }
        },
        "description": [ "The \\element{channel} node identifies the reaction to which the channel ",
                         "contributes and can be used to provide channel dependendent override values ",
                         "for the \\texttt{scatteringRadius} and \\texttt{hardSphereRadius} nodes.",
                         " ",
                         "The \\texttt{channel} node can also be used to set a boundary condition ",
                         "value. This boundary condition value will then override any previously ",
                         "defined value (defined on the \\element{RMatrix} or \\element{resonanceReaction} ",
                         "node) and will even override the \\texttt{boundaryCondition} option.",
                         " ",
                         "For example: the \\texttt{boundaryCondition} option can be set to ",
                         "\\texttt{NegativeOrbitalMomentum} which means that the boundary condition ",
                         "value is set to be equal to minus l for each channel. Setting a ",
                         "\\texttt{boundaryConditionValue} on a given channel overrides that option." ],
        "name": "channel",
        "required": false,
        "rootNode": false
    },
    "resonanceParameters":{
        "__class__": "nodes.Node",
        "abstractNode": null,
        "attributes": {},
        "bodyText": null,
        "childNodes": {
            "table": {
                "__class__": "nodes.ChildNode",
                "description": "A table of resonance widths.",
                "name": "table",
                "occurrence": "1",
                "required": true
            }
        },
        "description": [ "The \\texttt{resonanceParameters} node provides a table of resonance ",
                         "parameters for the current spin group. The number of columns of the ",
                         "table is equal to the number of channels that have at least one non ",
                         "zero width in the current spin group plus one column for the energy ",
                         "values (column index 0). The number of rows in the table is equal to ",
                         "the number of resonances that are defined for this spin group. ",
                         "The column indices used in this table must be given in the ",
                         "corresponding \\texttt{channel} node in the \\texttt{channels} node of ",
                         "the current spin group.",
                         " ",
                         "The table may be empty to indicate that the spin group only contributes ",
                         "to potential scattering.",
                         " ",
                         "The \\texttt{BreitWigner} node also has a \\texttt{resonanceParameters} ",
                         "but the structure of the table is different." ],
        "name": "resonanceParameters",
        "required": true,
        "rootNode": false
    },
    "BreitWigner":{
        "__class__": "nodes.Node",
        "abstractNode": null,
        "attributes": {
            "label": {
                "__class__": "nodes.Attribute",
                "default": null,
                "description": null,
                "name": "label",
                "required": true,
                "type": "XMLName"
            },
            "approximation": {
                "__class__": "nodes.Attribute",
                "default": null,
                "description": [ "The approximation to the R-matrix resonance formalism to be ",
                                 "used for the resonance reconstruction (either ",
                                 "\\texttt{SingleLevel} or \\texttt{MultiLevel})." ],
                "name": "approximation",
                "required": true,
                "type": "XMLName"
            },
            "calculateChannelRadius": {
                "__class__": "nodes.Attribute",
                "default": "false",
                "description": [ "An optional flag to indicate whether or not the channel ",
                                 "radius should be calculated for the calculation of the ",
                                 "penetrability $P$ and shift function $S$." ],
                "name": "calculateChannelRadius",
                "required": false,
                "type": "Boolean"
            },
            "useForSelfShieldingOnly": {
                "__class__": "nodes.Attribute",
                "default": "false",
                "description": [ "An optional flag to indicate that resonance parameters are",
                                 "only intended for self-shielding, not for reconstructing a cross section." ],
                "name": "useForSelfShieldingOnly",
                "required": false,
                "type": "Boolean"
            }
        },
        "bodyText": null,
        "childNodes": {
            "PoPs": {
                "__class__": "nodes.ChildNode",
                "description": [ "Particle database to be used for the resonance reconstruction. ",
                                 "This element only needs to be given if mass or spin values ",
                                 "different from the particle database used in the parent ",
                                 "\\texttt{reactionSuite} are to be used in the calculations. ",
                                 "The use of this element is deprecated." ],
                "name": "PoPs",
                "occurrence": "1",
                "required": false
            },
            "scatteringRadius": {
                "__class__": "nodes.ChildNode",
                "description": [ "An optional override for the scattering radius for the ",
                                 "resolved resonance region." ],
                "name": "scatteringRadius",
                "occurrence": "1",
                "required": false
            },
            "hardSphereRadius": {
                "__class__": "nodes.ChildNode",
                "description": [ "An optional override for the channel radius used in the ",
                                 "calculation of the phase shift $\\phi$ for the resolved ",
                                 "resonance region." ],
                "name": "hardSphereRadius",
                "occurrence": "1",
                "required": false
            },
            "resonanceParameters": {
                "__class__": "nodes.ChildNode",
                "description": "The resonance parameter table.",
                "name": "resonanceParameters",
                "occurrence": "1",
                "required": false
            }
        },
        "description": [ "The \\texttt{BreitWigner} node is used to specify the resonance ",
                         "parameters in the Single-Level or Multi-Level Breit-Wigner approximation. ",
                         "The use of this element is deprecated in favour of using an ",
                         "\\texttt{RMatrix} node with the appropriate approximation selected." ],
        "name": "BreitWigner",
        "required": false,
        "rootNode": false
    },
    "unresolved":{
        "__class__": "nodes.Node",
        "abstractNode": null,
        "childUnique" : "yesLabel",
        "attributes": {
            "domainMin": {
                "__class__": "nodes.Attribute",
                "default": null,
                "description": "The lower energy limit of the resolved resonance range.",
                "name": "domainMin",
                "required": true,
                "type": "Float64"
            },
            "domainMax": {
                "__class__": "nodes.Attribute",
                "default": null,
                "description": "The upper energy limit of the resolved resonance range.",
                "name": "domainMax",
                "required": true,
                "type": "Float64"
            },
            "domainUnit": {
                "__class__": "nodes.Attribute",
                "default": null,
                "description": "The energy unit used for the lower and upper energy limits.",
                "name": "domainUnit",
                "required": true,
                "type": "XMLName"
            }
        },
        "bodyText": null,
        "childNodes": {
            "tabulatedWidths": {
                "__class__": "nodes.ChildNode",
                "description": ["The unresolved resonance parameters.",
    			    " ",
    			   "Only one instance per evaluation label is allowed."],
                "name": "tabulatedWidths",
                "occurrence": "choice",
                "required": false
            }
        },
        "description": [ "The \\texttt{unresolved} node provides an unresolved resonance region ",
                         "over a given energy range. The energy domain of this unresolved ",
                         "resonance region should not overlap with any of the other resonance ",
                         "regions defined in the \\texttt{resonances} node." ],
        "name": "unresolved",
        "required": false,
        "rootNode": false
    },
    "tabulatedWidths":{
        "__class__": "nodes.Node",
        "abstractNode": null,
        "attributes": {
            "label": {
                "__class__": "nodes.Attribute",
                "default": null,
                "description": null,
                "name": "label",
                "required": true,
                "type": "XMLName"
            },
            "approximation": {
                "__class__": "nodes.Attribute",
                "default": null,
                "description": [ "The approximation to the R-matrix resonance formalism ",
                                 "for resonance reconstruction (currently only ",
                                 "\\attrval{SingleLevelBreitWigner} is supported by ENDF-6 and hence GNDS)." ],
                "name": "approximation",
                "required": true,
                "type": "XMLName"
            },
            "useForSelfShieldingOnly": {
                "__class__": "nodes.Attribute",
                "default": "false",
                "description": [ "An optional flag to indicate whether or not the resonance ",
                                 "parameters are provided for self-shielding or scattering ",
                                 "radius purposes only." ],
                "name": "useForSelfShieldingOnly",
                "required": false,
                "type": "Boolean"
            }
        },
        "bodyText": null,
        "childNodes": {
            "PoPs": {
                "__class__": "nodes.ChildNode",
                "description": [ "Particle database to be used for the resonance reconstruction. ",
                                 "This element only needs to be given if mass or spin values ",
                                 "different from the particle database used in the parent ",
                                 "\\texttt{reactionSuite} are to be used in the calculations. ",
                                 "The use of this element is deprecated." ],
                "name": "PoPs",
                "occurrence": "1",
                "required": false
            },
            "scatteringRadius": {
                "__class__": "nodes.ChildNode",
                "description": [ "An optional override for the scattering radius for the ",
                                 "unresolved resonance region." ],
                "name": "scatteringRadius",
                "occurrence": "1",
                "required": false
            },
            "hardSphereRadius": {
                "__class__": "nodes.ChildNode",
                "description": [ "An optional override for the channel radius used in the ",
                                 "calculation of the phase shift $\\phi$ for the unresolved ",
                                 "resonance region." ],
                "name": "hardSphereRadius",
                "occurrence": "1",
                "required": false
            },
            "resonanceReactions": {
                "__class__": "nodes.ChildNode",
                "description": "The reactions for which resonance parameters will be provided.",
                "name": "resonanceReactions",
                "occurrence": "1",
                "required": true
            },
            "Ls": {
                "__class__": "nodes.ChildNode",
                "description": [ "The average unresolved resonance parameters for all values ",
                                 "of the orbital angular momentum $\\ell$." ],
                "name": "Ls",
                "occurrence": "1",
                "required": true
            }
        },
        "description": [ "The \\texttt{tabulatedWidths} node is used to describe average ",
                         "parameters in the unresolved range. Currently parameters can only ",
                         "be given in the single-level Breit-Wigner approximation." ],
        "name": "tabulatedWidths",
        "required": true,
        "rootNode": false
    },
    "Ls":{
        "__class__": "nodes.Node",
        "abstractNode": null,
        "attributes": {},
        "bodyText": null,
        "childNodes": {
            "L": {
                "__class__": "nodes.ChildNode",
                "description": [ "The average unresolved resonance parameters for a given value ",
                                 "of the orbital angular momentum $\\ell$." ],
                "name": "L",
                "occurrence": "1+",
                "required": true
            }
        },
        "description": [ "The \\texttt{Ls} node is gives the average unresolved resonance ",
                         "parameters for the values of the orbital angular momentum $\\ell$." ],
        "name": "Ls",
        "required": true,
        "rootNode": false
    },
    "L":{
        "__class__": "nodes.Node",
        "abstractNode": null,
        "attributes": {
            "label": {
                "__class__": "nodes.Attribute",
                "default": null,
                "description": null,
                "name": "label",
                "required": true,
                "type": "XMLName"
            },
            "value": {
                "__class__": "nodes.Attribute",
                "default": null,
                "description": "The value of the orbital angular momentum $\\ell$ in units of hbar.",
                "name": "value",
                "required": true,
                "type": "Integer32"
            }
        },
        "bodyText": null,
        "childNodes": {
            "Js": {
                "__class__": "nodes.ChildNode",
                "description": [ "The average unresolved resonance parameters for all values of the ",
                                 "total angular momentum $J$ allowed by the current orbital angular ",
                                 "momentum $\\ell$."] ,
                "name": "Js",
                "occurrence": "1",
                "required": true
            }
        },
        "description": [ "The \\texttt{L} node is gives the average unresolved resonance ",
                         "for a given value of the orbital angular momentum $\\ell$. It ",
                         "contains data for all associated values of the total angular ",
                         "momentum $J$" ],
        "name": "L",
        "required": true,
        "rootNode": false
    },
    "Js":{
        "__class__": "nodes.Node",
        "abstractNode": null,
        "attributes": {},
        "bodyText": null,
        "childNodes": {
            "J": {
                "__class__": "nodes.ChildNode",
                "description": [ "The average unresolved resonance parameters for a given value ",
                                 "of the total angular momentum $J$ allowed by the current orbital ",
                                 "angular momentum $\\ell$." ],
                "name": "J",
                "occurrence": "1+",
                "required": true
            }
        },
        "description": [ "The \\texttt{Js} node gives the average unresolved resonance ",
                         "parameters for all values of the total angular momentum $J$ ",
                         "allowed by the current orbital angular momentum $\\ell$." ],
        "name": "Js",
        "required": true,
        "rootNode": false
    },
    "J":{
        "__class__": "nodes.Node",
        "abstractNode": null,
        "attributes": {
            "label": {
                "__class__": "nodes.Attribute",
                "default": null,
                "description": null,
                "name": "label",
                "required": true,
                "type": "XMLName"
            },
            "value": {
                "__class__": "nodes.Attribute",
                "default": null,
                "description": [ "The value of the total angular momentum $J$ for the spin ",
                                 "group in units of hbar, given as a fraction, e.g. \\texttt{0}, ",
                                 "\\texttt{1/2}, \\texttt{1}, \\texttt{3/2}, etc." ],
                "name": "value",
                "required": true,
                "type": "Fraction32"
            }
        },
        "bodyText": null,
        "childNodes": {
            "levelSpacing": {
                "__class__": "nodes.ChildNode",
                "description": [ "The average level spacing for the current orbital angular ",
                                 "momentum $\\ell$ and the current total angular momentum $J$." ],
                "name": "levelSpacing",
                "occurrence": "1",
                "required": true
            },
            "widths": {
                "__class__": "nodes.ChildNode",
                "description": [ "The average resonance parameters for the current orbital angular ",
                                 "momentum $\\ell$ and the current total angular momentum $J$." ],
                "name": "widths",
                "occurrence": "1",
                "required": true
            }
        },
        "description": [ "The \\texttt{J} node gives the unresolved resonance data for the current ",
                         "orbital angular momentum $\\ell$ and the current total angular ",
                         "momentum $J$. It contains level spacing information and resonance widths." ],
        "name": "J",
        "required": true,
        "rootNode": false
    },
    "levelSpacing":{
        "__class__": "nodes.Node",
        "abstractNode": null,
        "attributes": {},
        "bodyText": null,
        "childNodes": {
            "constant1d": {
                "__class__": "nodes.ChildNode",
                "description": "The level spacing is a constant value.",
                "name": "constant1d",
                "occurrence": "1",
                "required": false
            },
            "XYs1d": {
                "__class__": "nodes.ChildNode",
                "description": [ "The level spacing is an energy dependent function with ",
                                 "a single interpolation range." ],
                "name": "XYs1d",
                "occurrence": "1",
                "required": false
            },
            "regions1d": {
                "__class__": "nodes.ChildNode",
                "description": [ "The level spacing is an energy dependent function with ",
                                 "multiple interpolation range." ],
                "name": "regions1d",
                "occurrence": "1",
                "required": false
            }
        },
        "description": [ "The \\texttt{levelSpacing} node gives the average level spacing $D$ ",
                         "for the current orbital angular momentum $\\ell$ and the current total ",
                         "angular momentum $J$." ],
        "name": "levelSpacing",
        "required": true,
        "rootNode": false
    },
    "widths":{
        "__class__": "nodes.Node",
        "abstractNode": null,
        "attributes": {},
        "bodyText": null,
        "childNodes": {
            "width": {
                "__class__": "nodes.ChildNode",
                "description": "The average resonance width for a given channel.",
                "name": "width",
                "occurrence": "1+",
                "required": true
            }
        },
        "description": [ "The \\texttt{widths} node gives the average resonance widths for each ",
                         "channel listed in the \\texttt{resonanceReactions} node for the current ",
                         "orbital angular momentum $\\ell$ and the current total angular ",
                         "momentum $J$.",
                         " ",
                         "If the single Level Breit Wigner aproximation is used, an optional ",
                         "competitive width can also be given. In this case, the associated ",
                         "resonance reaction should have its label set to \\texttt{competitive}." ],
        "name": "widths",
        "required": true,
        "rootNode": false
    },
    "width":{
        "__class__": "nodes.Node",
        "abstractNode": null,
        "attributes": {
            "resonanceReaction": {
                "__class__": "nodes.Attribute",
                "default": null,
                "description": [ "The label of the resonance reaction (as defined in the ",
                                 "\\texttt{resonanceReaction} nodes) that the channel contributes to." ],
                "name": "resonanceReaction",
                "required": true,
                "type": "bodyText"
            },
            "degreesOfFreedom": {
                "__class__": "nodes.Attribute",
                "default": null,
                "description": [ "The number of degrees of freedom to be used to sample the ",
                                 "average width." ],
                "name": "degreesOfFreedom",
                "required": true,
                "type": "Float64"
            }
        },
        "bodyText": null,
        "childNodes": {
            "constant1d": {
                "__class__": "nodes.ChildNode",
                "description": "The average width is a constant value.",
                "name": "constant1d",
                "occurrence": "1",
                "required": false
            },
            "XYs1d": {
                "__class__": "nodes.ChildNode",
                "description": [ "The average width is an energy dependent function with ",
                                 "a single interpolation range." ],
                "name": "XYs1d",
                "occurrence": "1",
                "required": false
            },
            "regions1d": {
                "__class__": "nodes.ChildNode",
                "description": [ "The average width is an energy dependent function with ",
                                 "multiple interpolation range." ],
                "name": "regions1d",
                "occurrence": "1",
                "required": false
            }
        },
        "description": [ "The \\texttt{width} node gives the average resonance width for a ",
                         "given channel." ],
        "name": "width",
        "required": true,
        "rootNode": false
    }
}
