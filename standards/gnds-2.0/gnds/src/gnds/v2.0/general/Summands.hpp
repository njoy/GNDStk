
// THIS FILE WAS AUTOGENERATED!
// DO NOT MODIFY!

#ifndef GNDS_V2_0_GENERAL_SUMMANDS
#define GNDS_V2_0_GENERAL_SUMMANDS

#include "gnds/v2.0/general/Add.hpp"

namespace gnds {
namespace v2_0 {
namespace general {

// -----------------------------------------------------------------------------
// general::
// class Summands
// -----------------------------------------------------------------------------

class Summands :
   public Component<general::Summands>
{
   friend class Component;

   // ------------------------
   // For Component
   // ------------------------

   // Names: this namespace and class, and original nodes (as in XML <...>)
   static auto NAMESPACE() { return "general"; }
   static auto CLASS() { return "Summands"; }
   static auto NODENAME() { return "summands"; }

   // Core Interface multi-query to transfer information to/from core Nodes
   static auto KEYS()
   {
      return
         // comment
         ++Child<std::string>(special::comment) / CommentConverter{} |

         // children
         ++Child<general::Add>
            ("add")
      ;
   }

   // Data member names. Usually - but not necessarily - the same as the node
   // names appearing in KEYS(). These are used by Component's prettyprinter.
   static const auto &FIELDNAMES()
   {
      static const std::vector<std::string> names = {
         "comment",
         "add"
      };
      return names;
   }

   // Data member names, as they'll be presented in the Python bindings.
   static const auto &PYTHONNAMES()
   {
      static const std::vector<std::string> names = {
         "comment",
         "add"
      };
      return names;
   }

   // ------------------------
   // Public interface
   // ------------------------

public:

   using component_t = Component;
   using Component::construct;

   // ------------------------
   // Data members
   // ------------------------

   // comment
   Field<std::vector<std::string>> comment{this};

   // children
   Field<std::vector<general::Add>>
      add{this};

   // ------------------------
   // Constructors
   // ------------------------

   #define GNDSTK_COMPONENT(blockdata) \
   Component( \
      blockdata, \
      this->comment, \
      this->add \
   )

   // default
   Summands() :
      GNDSTK_COMPONENT(BlockData{})
   {
      Component::finish();
   }

   // from fields, comment excluded
   explicit Summands(
      const wrapper<std::vector<general::Add>>
         &add
   ) :
      GNDSTK_COMPONENT(BlockData{}),
      add(this,add)
   {
      Component::finish();
   }

   // from node
   explicit Summands(const Node &node) :
      GNDSTK_COMPONENT(BlockData{})
   {
      Component::finish(node);
   }

   // copy
   Summands(const Summands &other) :
      GNDSTK_COMPONENT(other.baseBlockData()),
      comment(this,other.comment),
      add(this,other.add)
   {
      Component::finish(other);
   }

   // move
   Summands(Summands &&other) :
      GNDSTK_COMPONENT(other.baseBlockData()),
      comment(this,std::move(other.comment)),
      add(this,std::move(other.add))
   {
      Component::finish(other);
   }

   // ------------------------
   // Assignment operators
   // ------------------------

   // copy
   Summands &operator=(const Summands &other)
   {
      if (this != &other) {
         Component::operator=(other);
         comment = other.comment;
         add = other.add;
      }
      return *this;
   }

   // move
   Summands &operator=(Summands &&other)
   {
      if (this != &other) {
         Component::operator=(std::move(other));
         comment = std::move(other.comment);
         add = std::move(other.add);
      }
      return *this;
   }

   // ------------------------
   // Custom functionality
   // ------------------------

   #include "gnds/v2.0/general/Summands/src/custom.hpp"
   #undef GNDSTK_COMPONENT
}; // class Summands

} // namespace general
} // namespace v2_0
} // namespace gnds

#endif
