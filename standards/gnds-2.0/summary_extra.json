{
    "__namespace__":"extra",

    "// ALTERNATIVE double" : [
        "Without uncertainty"
    ],
    "double":{
        "__class__": "nodes.Node",
        "abstractNode": "physicalQuantity",
        "attributes": {
            "label": {
                "__class__": "nodes.Attribute",
                "default": null,
                "description": "Unique label",
                "name": "label",
                "required": false,
                "type": "XMLName"
            },
            "unit": {
                "__class__": "nodes.Attribute",
                "default": "`' (no label)",
                "description": "e.g. `kg' or `m'",
                "name": "unit",
                "required": false,
                "type": "XMLName"
            },
            "value": {
                "__class__": "nodes.Attribute",
                "default": null,
                "description": "numeric value",
                "name": "value",
                "required": true,
                "type": "Float64"
            }
        },
        "bodyText": null,
        "childNodes": {},
        "description": "Stores a \texttt{Float64} quantity along with an optional unit and optional label",
        "name": "double",
        "required": false,
        "rootNode": false
    },

    "// ALTERNATIVE uncertainty" : [
        "Without pdf",
        "Without XYs1d",
        "Without polynomial1d"
    ],
    "uncertainty":{
        "__class__": "nodes.Node",
        "abstractNode": null,
        "attributes": {},
        "bodyText": null,
        "childNodes": {
            "standard": {
                "__class__": "nodes.ChildNode",
                "description": "Stores a normally-distributed uncertainty.",
                "namespace": "containers",
                "name": "standard",
                "occurrence": "1",
                "required": false
            },
            "logNormal": {
                "__class__": "nodes.ChildNode",
                "description": "Stores a log-normal-distributed uncertainty.",
                "namespace": "containers",
                "name": "logNormal",
                "occurrence": "1",
                "required": false
            },
            "confidenceIntervals": {
                "__class__": "nodes.ChildNode",
                "description": "Stores a list of intervals along with the confidence that the `true value' lies within each interval.",
                "namespace": "containers",
                "name": "confidenceIntervals",
                "occurrence": "1",
                "required": false
            },
            "covariance": {
                "__class__": "nodes.ChildNode",
                "description": [
                    "Stores a covariance matrix (or a link to a covariance matrix),",
                    "usually for a 1-dimensional function."
                ],
                "namespace": "containers",
                "name": "covariance",
                "occurrence": "1",
                "required": false
            },
            "listOfCovariances": {
                "__class__": "nodes.ChildNode",
                "description": [
                    "Stores a list of covariance matrices (or a list of links to covariance matrices).",
                    "This option is generally used for higher-dimensional functions. For example,",
                    "if an angular distribution $P(\\mu|E)$ is stored as an energy-dependent list of",
                    "\\element{Legendre} expansions, the full covariance may be decomposed into energy-dependent",
                    "covariance matrices for each combination of $L_i$ and $L_j$. The \\element{listOfCovariances}",
                    "lists all of these covariances."
                ],
                "name": "listOfCovariances",
                "occurrence": "1",
                "required": false
            }
        },
        "description": "Stores the uncertainty for a scalar quantity or a functional data container.",
        "name": "uncertainty",
        "required": false,
        "rootNode": false
    }
}
